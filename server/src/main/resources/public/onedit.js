var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__7985 = x == null ? null : x;
  if(p[goog.typeOf(x__7985)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__7986__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__7986 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7986__delegate.call(this, array, i, idxs)
    };
    G__7986.cljs$lang$maxFixedArity = 2;
    G__7986.cljs$lang$applyTo = function(arglist__7987) {
      var array = cljs.core.first(arglist__7987);
      var i = cljs.core.first(cljs.core.next(arglist__7987));
      var idxs = cljs.core.rest(cljs.core.next(arglist__7987));
      return G__7986__delegate(array, i, idxs)
    };
    G__7986.cljs$lang$arity$variadic = G__7986__delegate;
    return G__7986
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____8072 = this$;
      if(and__3822__auto____8072) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____8072
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2410__auto____8073 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8074 = cljs.core._invoke[goog.typeOf(x__2410__auto____8073)];
        if(or__3824__auto____8074) {
          return or__3824__auto____8074
        }else {
          var or__3824__auto____8075 = cljs.core._invoke["_"];
          if(or__3824__auto____8075) {
            return or__3824__auto____8075
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____8076 = this$;
      if(and__3822__auto____8076) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____8076
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2410__auto____8077 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8078 = cljs.core._invoke[goog.typeOf(x__2410__auto____8077)];
        if(or__3824__auto____8078) {
          return or__3824__auto____8078
        }else {
          var or__3824__auto____8079 = cljs.core._invoke["_"];
          if(or__3824__auto____8079) {
            return or__3824__auto____8079
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____8080 = this$;
      if(and__3822__auto____8080) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____8080
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2410__auto____8081 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8082 = cljs.core._invoke[goog.typeOf(x__2410__auto____8081)];
        if(or__3824__auto____8082) {
          return or__3824__auto____8082
        }else {
          var or__3824__auto____8083 = cljs.core._invoke["_"];
          if(or__3824__auto____8083) {
            return or__3824__auto____8083
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____8084 = this$;
      if(and__3822__auto____8084) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____8084
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2410__auto____8085 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8086 = cljs.core._invoke[goog.typeOf(x__2410__auto____8085)];
        if(or__3824__auto____8086) {
          return or__3824__auto____8086
        }else {
          var or__3824__auto____8087 = cljs.core._invoke["_"];
          if(or__3824__auto____8087) {
            return or__3824__auto____8087
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____8088 = this$;
      if(and__3822__auto____8088) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____8088
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2410__auto____8089 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8090 = cljs.core._invoke[goog.typeOf(x__2410__auto____8089)];
        if(or__3824__auto____8090) {
          return or__3824__auto____8090
        }else {
          var or__3824__auto____8091 = cljs.core._invoke["_"];
          if(or__3824__auto____8091) {
            return or__3824__auto____8091
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____8092 = this$;
      if(and__3822__auto____8092) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____8092
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2410__auto____8093 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8094 = cljs.core._invoke[goog.typeOf(x__2410__auto____8093)];
        if(or__3824__auto____8094) {
          return or__3824__auto____8094
        }else {
          var or__3824__auto____8095 = cljs.core._invoke["_"];
          if(or__3824__auto____8095) {
            return or__3824__auto____8095
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____8096 = this$;
      if(and__3822__auto____8096) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____8096
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2410__auto____8097 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8098 = cljs.core._invoke[goog.typeOf(x__2410__auto____8097)];
        if(or__3824__auto____8098) {
          return or__3824__auto____8098
        }else {
          var or__3824__auto____8099 = cljs.core._invoke["_"];
          if(or__3824__auto____8099) {
            return or__3824__auto____8099
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____8100 = this$;
      if(and__3822__auto____8100) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____8100
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2410__auto____8101 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8102 = cljs.core._invoke[goog.typeOf(x__2410__auto____8101)];
        if(or__3824__auto____8102) {
          return or__3824__auto____8102
        }else {
          var or__3824__auto____8103 = cljs.core._invoke["_"];
          if(or__3824__auto____8103) {
            return or__3824__auto____8103
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____8104 = this$;
      if(and__3822__auto____8104) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____8104
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2410__auto____8105 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8106 = cljs.core._invoke[goog.typeOf(x__2410__auto____8105)];
        if(or__3824__auto____8106) {
          return or__3824__auto____8106
        }else {
          var or__3824__auto____8107 = cljs.core._invoke["_"];
          if(or__3824__auto____8107) {
            return or__3824__auto____8107
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____8108 = this$;
      if(and__3822__auto____8108) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____8108
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2410__auto____8109 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8110 = cljs.core._invoke[goog.typeOf(x__2410__auto____8109)];
        if(or__3824__auto____8110) {
          return or__3824__auto____8110
        }else {
          var or__3824__auto____8111 = cljs.core._invoke["_"];
          if(or__3824__auto____8111) {
            return or__3824__auto____8111
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____8112 = this$;
      if(and__3822__auto____8112) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____8112
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2410__auto____8113 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8114 = cljs.core._invoke[goog.typeOf(x__2410__auto____8113)];
        if(or__3824__auto____8114) {
          return or__3824__auto____8114
        }else {
          var or__3824__auto____8115 = cljs.core._invoke["_"];
          if(or__3824__auto____8115) {
            return or__3824__auto____8115
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____8116 = this$;
      if(and__3822__auto____8116) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____8116
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2410__auto____8117 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8118 = cljs.core._invoke[goog.typeOf(x__2410__auto____8117)];
        if(or__3824__auto____8118) {
          return or__3824__auto____8118
        }else {
          var or__3824__auto____8119 = cljs.core._invoke["_"];
          if(or__3824__auto____8119) {
            return or__3824__auto____8119
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____8120 = this$;
      if(and__3822__auto____8120) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____8120
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2410__auto____8121 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8122 = cljs.core._invoke[goog.typeOf(x__2410__auto____8121)];
        if(or__3824__auto____8122) {
          return or__3824__auto____8122
        }else {
          var or__3824__auto____8123 = cljs.core._invoke["_"];
          if(or__3824__auto____8123) {
            return or__3824__auto____8123
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____8124 = this$;
      if(and__3822__auto____8124) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____8124
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2410__auto____8125 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8126 = cljs.core._invoke[goog.typeOf(x__2410__auto____8125)];
        if(or__3824__auto____8126) {
          return or__3824__auto____8126
        }else {
          var or__3824__auto____8127 = cljs.core._invoke["_"];
          if(or__3824__auto____8127) {
            return or__3824__auto____8127
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____8128 = this$;
      if(and__3822__auto____8128) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____8128
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2410__auto____8129 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8130 = cljs.core._invoke[goog.typeOf(x__2410__auto____8129)];
        if(or__3824__auto____8130) {
          return or__3824__auto____8130
        }else {
          var or__3824__auto____8131 = cljs.core._invoke["_"];
          if(or__3824__auto____8131) {
            return or__3824__auto____8131
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____8132 = this$;
      if(and__3822__auto____8132) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____8132
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2410__auto____8133 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8134 = cljs.core._invoke[goog.typeOf(x__2410__auto____8133)];
        if(or__3824__auto____8134) {
          return or__3824__auto____8134
        }else {
          var or__3824__auto____8135 = cljs.core._invoke["_"];
          if(or__3824__auto____8135) {
            return or__3824__auto____8135
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____8136 = this$;
      if(and__3822__auto____8136) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____8136
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2410__auto____8137 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8138 = cljs.core._invoke[goog.typeOf(x__2410__auto____8137)];
        if(or__3824__auto____8138) {
          return or__3824__auto____8138
        }else {
          var or__3824__auto____8139 = cljs.core._invoke["_"];
          if(or__3824__auto____8139) {
            return or__3824__auto____8139
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____8140 = this$;
      if(and__3822__auto____8140) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____8140
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2410__auto____8141 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8142 = cljs.core._invoke[goog.typeOf(x__2410__auto____8141)];
        if(or__3824__auto____8142) {
          return or__3824__auto____8142
        }else {
          var or__3824__auto____8143 = cljs.core._invoke["_"];
          if(or__3824__auto____8143) {
            return or__3824__auto____8143
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____8144 = this$;
      if(and__3822__auto____8144) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____8144
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2410__auto____8145 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8146 = cljs.core._invoke[goog.typeOf(x__2410__auto____8145)];
        if(or__3824__auto____8146) {
          return or__3824__auto____8146
        }else {
          var or__3824__auto____8147 = cljs.core._invoke["_"];
          if(or__3824__auto____8147) {
            return or__3824__auto____8147
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____8148 = this$;
      if(and__3822__auto____8148) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____8148
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2410__auto____8149 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8150 = cljs.core._invoke[goog.typeOf(x__2410__auto____8149)];
        if(or__3824__auto____8150) {
          return or__3824__auto____8150
        }else {
          var or__3824__auto____8151 = cljs.core._invoke["_"];
          if(or__3824__auto____8151) {
            return or__3824__auto____8151
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____8152 = this$;
      if(and__3822__auto____8152) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____8152
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2410__auto____8153 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8154 = cljs.core._invoke[goog.typeOf(x__2410__auto____8153)];
        if(or__3824__auto____8154) {
          return or__3824__auto____8154
        }else {
          var or__3824__auto____8155 = cljs.core._invoke["_"];
          if(or__3824__auto____8155) {
            return or__3824__auto____8155
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____8160 = coll;
    if(and__3822__auto____8160) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____8160
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2410__auto____8161 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8162 = cljs.core._count[goog.typeOf(x__2410__auto____8161)];
      if(or__3824__auto____8162) {
        return or__3824__auto____8162
      }else {
        var or__3824__auto____8163 = cljs.core._count["_"];
        if(or__3824__auto____8163) {
          return or__3824__auto____8163
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____8168 = coll;
    if(and__3822__auto____8168) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____8168
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2410__auto____8169 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8170 = cljs.core._empty[goog.typeOf(x__2410__auto____8169)];
      if(or__3824__auto____8170) {
        return or__3824__auto____8170
      }else {
        var or__3824__auto____8171 = cljs.core._empty["_"];
        if(or__3824__auto____8171) {
          return or__3824__auto____8171
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____8176 = coll;
    if(and__3822__auto____8176) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____8176
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2410__auto____8177 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8178 = cljs.core._conj[goog.typeOf(x__2410__auto____8177)];
      if(or__3824__auto____8178) {
        return or__3824__auto____8178
      }else {
        var or__3824__auto____8179 = cljs.core._conj["_"];
        if(or__3824__auto____8179) {
          return or__3824__auto____8179
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____8188 = coll;
      if(and__3822__auto____8188) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____8188
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2410__auto____8189 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8190 = cljs.core._nth[goog.typeOf(x__2410__auto____8189)];
        if(or__3824__auto____8190) {
          return or__3824__auto____8190
        }else {
          var or__3824__auto____8191 = cljs.core._nth["_"];
          if(or__3824__auto____8191) {
            return or__3824__auto____8191
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____8192 = coll;
      if(and__3822__auto____8192) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____8192
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2410__auto____8193 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8194 = cljs.core._nth[goog.typeOf(x__2410__auto____8193)];
        if(or__3824__auto____8194) {
          return or__3824__auto____8194
        }else {
          var or__3824__auto____8195 = cljs.core._nth["_"];
          if(or__3824__auto____8195) {
            return or__3824__auto____8195
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____8200 = coll;
    if(and__3822__auto____8200) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____8200
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2410__auto____8201 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8202 = cljs.core._first[goog.typeOf(x__2410__auto____8201)];
      if(or__3824__auto____8202) {
        return or__3824__auto____8202
      }else {
        var or__3824__auto____8203 = cljs.core._first["_"];
        if(or__3824__auto____8203) {
          return or__3824__auto____8203
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____8208 = coll;
    if(and__3822__auto____8208) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____8208
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2410__auto____8209 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8210 = cljs.core._rest[goog.typeOf(x__2410__auto____8209)];
      if(or__3824__auto____8210) {
        return or__3824__auto____8210
      }else {
        var or__3824__auto____8211 = cljs.core._rest["_"];
        if(or__3824__auto____8211) {
          return or__3824__auto____8211
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____8216 = coll;
    if(and__3822__auto____8216) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____8216
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2410__auto____8217 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8218 = cljs.core._next[goog.typeOf(x__2410__auto____8217)];
      if(or__3824__auto____8218) {
        return or__3824__auto____8218
      }else {
        var or__3824__auto____8219 = cljs.core._next["_"];
        if(or__3824__auto____8219) {
          return or__3824__auto____8219
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____8228 = o;
      if(and__3822__auto____8228) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____8228
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2410__auto____8229 = o == null ? null : o;
      return function() {
        var or__3824__auto____8230 = cljs.core._lookup[goog.typeOf(x__2410__auto____8229)];
        if(or__3824__auto____8230) {
          return or__3824__auto____8230
        }else {
          var or__3824__auto____8231 = cljs.core._lookup["_"];
          if(or__3824__auto____8231) {
            return or__3824__auto____8231
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____8232 = o;
      if(and__3822__auto____8232) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____8232
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2410__auto____8233 = o == null ? null : o;
      return function() {
        var or__3824__auto____8234 = cljs.core._lookup[goog.typeOf(x__2410__auto____8233)];
        if(or__3824__auto____8234) {
          return or__3824__auto____8234
        }else {
          var or__3824__auto____8235 = cljs.core._lookup["_"];
          if(or__3824__auto____8235) {
            return or__3824__auto____8235
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____8240 = coll;
    if(and__3822__auto____8240) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____8240
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2410__auto____8241 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8242 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2410__auto____8241)];
      if(or__3824__auto____8242) {
        return or__3824__auto____8242
      }else {
        var or__3824__auto____8243 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____8243) {
          return or__3824__auto____8243
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____8248 = coll;
    if(and__3822__auto____8248) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____8248
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2410__auto____8249 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8250 = cljs.core._assoc[goog.typeOf(x__2410__auto____8249)];
      if(or__3824__auto____8250) {
        return or__3824__auto____8250
      }else {
        var or__3824__auto____8251 = cljs.core._assoc["_"];
        if(or__3824__auto____8251) {
          return or__3824__auto____8251
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____8256 = coll;
    if(and__3822__auto____8256) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____8256
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2410__auto____8257 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8258 = cljs.core._dissoc[goog.typeOf(x__2410__auto____8257)];
      if(or__3824__auto____8258) {
        return or__3824__auto____8258
      }else {
        var or__3824__auto____8259 = cljs.core._dissoc["_"];
        if(or__3824__auto____8259) {
          return or__3824__auto____8259
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____8264 = coll;
    if(and__3822__auto____8264) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____8264
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2410__auto____8265 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8266 = cljs.core._key[goog.typeOf(x__2410__auto____8265)];
      if(or__3824__auto____8266) {
        return or__3824__auto____8266
      }else {
        var or__3824__auto____8267 = cljs.core._key["_"];
        if(or__3824__auto____8267) {
          return or__3824__auto____8267
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____8272 = coll;
    if(and__3822__auto____8272) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____8272
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2410__auto____8273 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8274 = cljs.core._val[goog.typeOf(x__2410__auto____8273)];
      if(or__3824__auto____8274) {
        return or__3824__auto____8274
      }else {
        var or__3824__auto____8275 = cljs.core._val["_"];
        if(or__3824__auto____8275) {
          return or__3824__auto____8275
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____8280 = coll;
    if(and__3822__auto____8280) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____8280
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2410__auto____8281 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8282 = cljs.core._disjoin[goog.typeOf(x__2410__auto____8281)];
      if(or__3824__auto____8282) {
        return or__3824__auto____8282
      }else {
        var or__3824__auto____8283 = cljs.core._disjoin["_"];
        if(or__3824__auto____8283) {
          return or__3824__auto____8283
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____8288 = coll;
    if(and__3822__auto____8288) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____8288
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2410__auto____8289 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8290 = cljs.core._peek[goog.typeOf(x__2410__auto____8289)];
      if(or__3824__auto____8290) {
        return or__3824__auto____8290
      }else {
        var or__3824__auto____8291 = cljs.core._peek["_"];
        if(or__3824__auto____8291) {
          return or__3824__auto____8291
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____8296 = coll;
    if(and__3822__auto____8296) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____8296
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2410__auto____8297 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8298 = cljs.core._pop[goog.typeOf(x__2410__auto____8297)];
      if(or__3824__auto____8298) {
        return or__3824__auto____8298
      }else {
        var or__3824__auto____8299 = cljs.core._pop["_"];
        if(or__3824__auto____8299) {
          return or__3824__auto____8299
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____8304 = coll;
    if(and__3822__auto____8304) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____8304
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2410__auto____8305 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8306 = cljs.core._assoc_n[goog.typeOf(x__2410__auto____8305)];
      if(or__3824__auto____8306) {
        return or__3824__auto____8306
      }else {
        var or__3824__auto____8307 = cljs.core._assoc_n["_"];
        if(or__3824__auto____8307) {
          return or__3824__auto____8307
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____8312 = o;
    if(and__3822__auto____8312) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____8312
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2410__auto____8313 = o == null ? null : o;
    return function() {
      var or__3824__auto____8314 = cljs.core._deref[goog.typeOf(x__2410__auto____8313)];
      if(or__3824__auto____8314) {
        return or__3824__auto____8314
      }else {
        var or__3824__auto____8315 = cljs.core._deref["_"];
        if(or__3824__auto____8315) {
          return or__3824__auto____8315
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____8320 = o;
    if(and__3822__auto____8320) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____8320
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2410__auto____8321 = o == null ? null : o;
    return function() {
      var or__3824__auto____8322 = cljs.core._deref_with_timeout[goog.typeOf(x__2410__auto____8321)];
      if(or__3824__auto____8322) {
        return or__3824__auto____8322
      }else {
        var or__3824__auto____8323 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____8323) {
          return or__3824__auto____8323
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____8328 = o;
    if(and__3822__auto____8328) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____8328
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2410__auto____8329 = o == null ? null : o;
    return function() {
      var or__3824__auto____8330 = cljs.core._meta[goog.typeOf(x__2410__auto____8329)];
      if(or__3824__auto____8330) {
        return or__3824__auto____8330
      }else {
        var or__3824__auto____8331 = cljs.core._meta["_"];
        if(or__3824__auto____8331) {
          return or__3824__auto____8331
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____8336 = o;
    if(and__3822__auto____8336) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____8336
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2410__auto____8337 = o == null ? null : o;
    return function() {
      var or__3824__auto____8338 = cljs.core._with_meta[goog.typeOf(x__2410__auto____8337)];
      if(or__3824__auto____8338) {
        return or__3824__auto____8338
      }else {
        var or__3824__auto____8339 = cljs.core._with_meta["_"];
        if(or__3824__auto____8339) {
          return or__3824__auto____8339
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____8348 = coll;
      if(and__3822__auto____8348) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____8348
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2410__auto____8349 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8350 = cljs.core._reduce[goog.typeOf(x__2410__auto____8349)];
        if(or__3824__auto____8350) {
          return or__3824__auto____8350
        }else {
          var or__3824__auto____8351 = cljs.core._reduce["_"];
          if(or__3824__auto____8351) {
            return or__3824__auto____8351
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____8352 = coll;
      if(and__3822__auto____8352) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____8352
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2410__auto____8353 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8354 = cljs.core._reduce[goog.typeOf(x__2410__auto____8353)];
        if(or__3824__auto____8354) {
          return or__3824__auto____8354
        }else {
          var or__3824__auto____8355 = cljs.core._reduce["_"];
          if(or__3824__auto____8355) {
            return or__3824__auto____8355
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____8360 = coll;
    if(and__3822__auto____8360) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____8360
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2410__auto____8361 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8362 = cljs.core._kv_reduce[goog.typeOf(x__2410__auto____8361)];
      if(or__3824__auto____8362) {
        return or__3824__auto____8362
      }else {
        var or__3824__auto____8363 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____8363) {
          return or__3824__auto____8363
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____8368 = o;
    if(and__3822__auto____8368) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____8368
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2410__auto____8369 = o == null ? null : o;
    return function() {
      var or__3824__auto____8370 = cljs.core._equiv[goog.typeOf(x__2410__auto____8369)];
      if(or__3824__auto____8370) {
        return or__3824__auto____8370
      }else {
        var or__3824__auto____8371 = cljs.core._equiv["_"];
        if(or__3824__auto____8371) {
          return or__3824__auto____8371
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____8376 = o;
    if(and__3822__auto____8376) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____8376
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2410__auto____8377 = o == null ? null : o;
    return function() {
      var or__3824__auto____8378 = cljs.core._hash[goog.typeOf(x__2410__auto____8377)];
      if(or__3824__auto____8378) {
        return or__3824__auto____8378
      }else {
        var or__3824__auto____8379 = cljs.core._hash["_"];
        if(or__3824__auto____8379) {
          return or__3824__auto____8379
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____8384 = o;
    if(and__3822__auto____8384) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____8384
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2410__auto____8385 = o == null ? null : o;
    return function() {
      var or__3824__auto____8386 = cljs.core._seq[goog.typeOf(x__2410__auto____8385)];
      if(or__3824__auto____8386) {
        return or__3824__auto____8386
      }else {
        var or__3824__auto____8387 = cljs.core._seq["_"];
        if(or__3824__auto____8387) {
          return or__3824__auto____8387
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____8392 = coll;
    if(and__3822__auto____8392) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____8392
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2410__auto____8393 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8394 = cljs.core._rseq[goog.typeOf(x__2410__auto____8393)];
      if(or__3824__auto____8394) {
        return or__3824__auto____8394
      }else {
        var or__3824__auto____8395 = cljs.core._rseq["_"];
        if(or__3824__auto____8395) {
          return or__3824__auto____8395
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8400 = coll;
    if(and__3822__auto____8400) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____8400
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2410__auto____8401 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8402 = cljs.core._sorted_seq[goog.typeOf(x__2410__auto____8401)];
      if(or__3824__auto____8402) {
        return or__3824__auto____8402
      }else {
        var or__3824__auto____8403 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____8403) {
          return or__3824__auto____8403
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8408 = coll;
    if(and__3822__auto____8408) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____8408
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2410__auto____8409 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8410 = cljs.core._sorted_seq_from[goog.typeOf(x__2410__auto____8409)];
      if(or__3824__auto____8410) {
        return or__3824__auto____8410
      }else {
        var or__3824__auto____8411 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____8411) {
          return or__3824__auto____8411
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____8416 = coll;
    if(and__3822__auto____8416) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____8416
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2410__auto____8417 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8418 = cljs.core._entry_key[goog.typeOf(x__2410__auto____8417)];
      if(or__3824__auto____8418) {
        return or__3824__auto____8418
      }else {
        var or__3824__auto____8419 = cljs.core._entry_key["_"];
        if(or__3824__auto____8419) {
          return or__3824__auto____8419
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____8424 = coll;
    if(and__3822__auto____8424) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____8424
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2410__auto____8425 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8426 = cljs.core._comparator[goog.typeOf(x__2410__auto____8425)];
      if(or__3824__auto____8426) {
        return or__3824__auto____8426
      }else {
        var or__3824__auto____8427 = cljs.core._comparator["_"];
        if(or__3824__auto____8427) {
          return or__3824__auto____8427
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____8432 = o;
    if(and__3822__auto____8432) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____8432
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2410__auto____8433 = o == null ? null : o;
    return function() {
      var or__3824__auto____8434 = cljs.core._pr_seq[goog.typeOf(x__2410__auto____8433)];
      if(or__3824__auto____8434) {
        return or__3824__auto____8434
      }else {
        var or__3824__auto____8435 = cljs.core._pr_seq["_"];
        if(or__3824__auto____8435) {
          return or__3824__auto____8435
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____8440 = d;
    if(and__3822__auto____8440) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____8440
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2410__auto____8441 = d == null ? null : d;
    return function() {
      var or__3824__auto____8442 = cljs.core._realized_QMARK_[goog.typeOf(x__2410__auto____8441)];
      if(or__3824__auto____8442) {
        return or__3824__auto____8442
      }else {
        var or__3824__auto____8443 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____8443) {
          return or__3824__auto____8443
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____8448 = this$;
    if(and__3822__auto____8448) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____8448
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2410__auto____8449 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8450 = cljs.core._notify_watches[goog.typeOf(x__2410__auto____8449)];
      if(or__3824__auto____8450) {
        return or__3824__auto____8450
      }else {
        var or__3824__auto____8451 = cljs.core._notify_watches["_"];
        if(or__3824__auto____8451) {
          return or__3824__auto____8451
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____8456 = this$;
    if(and__3822__auto____8456) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____8456
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2410__auto____8457 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8458 = cljs.core._add_watch[goog.typeOf(x__2410__auto____8457)];
      if(or__3824__auto____8458) {
        return or__3824__auto____8458
      }else {
        var or__3824__auto____8459 = cljs.core._add_watch["_"];
        if(or__3824__auto____8459) {
          return or__3824__auto____8459
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____8464 = this$;
    if(and__3822__auto____8464) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____8464
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2410__auto____8465 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8466 = cljs.core._remove_watch[goog.typeOf(x__2410__auto____8465)];
      if(or__3824__auto____8466) {
        return or__3824__auto____8466
      }else {
        var or__3824__auto____8467 = cljs.core._remove_watch["_"];
        if(or__3824__auto____8467) {
          return or__3824__auto____8467
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____8472 = coll;
    if(and__3822__auto____8472) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____8472
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2410__auto____8473 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8474 = cljs.core._as_transient[goog.typeOf(x__2410__auto____8473)];
      if(or__3824__auto____8474) {
        return or__3824__auto____8474
      }else {
        var or__3824__auto____8475 = cljs.core._as_transient["_"];
        if(or__3824__auto____8475) {
          return or__3824__auto____8475
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____8480 = tcoll;
    if(and__3822__auto____8480) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____8480
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2410__auto____8481 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8482 = cljs.core._conj_BANG_[goog.typeOf(x__2410__auto____8481)];
      if(or__3824__auto____8482) {
        return or__3824__auto____8482
      }else {
        var or__3824__auto____8483 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____8483) {
          return or__3824__auto____8483
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8488 = tcoll;
    if(and__3822__auto____8488) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____8488
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2410__auto____8489 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8490 = cljs.core._persistent_BANG_[goog.typeOf(x__2410__auto____8489)];
      if(or__3824__auto____8490) {
        return or__3824__auto____8490
      }else {
        var or__3824__auto____8491 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____8491) {
          return or__3824__auto____8491
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____8496 = tcoll;
    if(and__3822__auto____8496) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____8496
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2410__auto____8497 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8498 = cljs.core._assoc_BANG_[goog.typeOf(x__2410__auto____8497)];
      if(or__3824__auto____8498) {
        return or__3824__auto____8498
      }else {
        var or__3824__auto____8499 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____8499) {
          return or__3824__auto____8499
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____8504 = tcoll;
    if(and__3822__auto____8504) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____8504
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2410__auto____8505 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8506 = cljs.core._dissoc_BANG_[goog.typeOf(x__2410__auto____8505)];
      if(or__3824__auto____8506) {
        return or__3824__auto____8506
      }else {
        var or__3824__auto____8507 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____8507) {
          return or__3824__auto____8507
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____8512 = tcoll;
    if(and__3822__auto____8512) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____8512
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2410__auto____8513 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8514 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2410__auto____8513)];
      if(or__3824__auto____8514) {
        return or__3824__auto____8514
      }else {
        var or__3824__auto____8515 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____8515) {
          return or__3824__auto____8515
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8520 = tcoll;
    if(and__3822__auto____8520) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____8520
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2410__auto____8521 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8522 = cljs.core._pop_BANG_[goog.typeOf(x__2410__auto____8521)];
      if(or__3824__auto____8522) {
        return or__3824__auto____8522
      }else {
        var or__3824__auto____8523 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____8523) {
          return or__3824__auto____8523
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____8528 = tcoll;
    if(and__3822__auto____8528) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____8528
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2410__auto____8529 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8530 = cljs.core._disjoin_BANG_[goog.typeOf(x__2410__auto____8529)];
      if(or__3824__auto____8530) {
        return or__3824__auto____8530
      }else {
        var or__3824__auto____8531 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____8531) {
          return or__3824__auto____8531
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____8536 = x;
    if(and__3822__auto____8536) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____8536
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2410__auto____8537 = x == null ? null : x;
    return function() {
      var or__3824__auto____8538 = cljs.core._compare[goog.typeOf(x__2410__auto____8537)];
      if(or__3824__auto____8538) {
        return or__3824__auto____8538
      }else {
        var or__3824__auto____8539 = cljs.core._compare["_"];
        if(or__3824__auto____8539) {
          return or__3824__auto____8539
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____8544 = coll;
    if(and__3822__auto____8544) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____8544
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2410__auto____8545 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8546 = cljs.core._drop_first[goog.typeOf(x__2410__auto____8545)];
      if(or__3824__auto____8546) {
        return or__3824__auto____8546
      }else {
        var or__3824__auto____8547 = cljs.core._drop_first["_"];
        if(or__3824__auto____8547) {
          return or__3824__auto____8547
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____8552 = coll;
    if(and__3822__auto____8552) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____8552
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2410__auto____8553 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8554 = cljs.core._chunked_first[goog.typeOf(x__2410__auto____8553)];
      if(or__3824__auto____8554) {
        return or__3824__auto____8554
      }else {
        var or__3824__auto____8555 = cljs.core._chunked_first["_"];
        if(or__3824__auto____8555) {
          return or__3824__auto____8555
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____8560 = coll;
    if(and__3822__auto____8560) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____8560
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2410__auto____8561 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8562 = cljs.core._chunked_rest[goog.typeOf(x__2410__auto____8561)];
      if(or__3824__auto____8562) {
        return or__3824__auto____8562
      }else {
        var or__3824__auto____8563 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____8563) {
          return or__3824__auto____8563
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____8568 = coll;
    if(and__3822__auto____8568) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____8568
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2410__auto____8569 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8570 = cljs.core._chunked_next[goog.typeOf(x__2410__auto____8569)];
      if(or__3824__auto____8570) {
        return or__3824__auto____8570
      }else {
        var or__3824__auto____8571 = cljs.core._chunked_next["_"];
        if(or__3824__auto____8571) {
          return or__3824__auto____8571
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____8573 = x === y;
    if(or__3824__auto____8573) {
      return or__3824__auto____8573
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__8574__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8575 = y;
            var G__8576 = cljs.core.first.call(null, more);
            var G__8577 = cljs.core.next.call(null, more);
            x = G__8575;
            y = G__8576;
            more = G__8577;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8574 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8574__delegate.call(this, x, y, more)
    };
    G__8574.cljs$lang$maxFixedArity = 2;
    G__8574.cljs$lang$applyTo = function(arglist__8578) {
      var x = cljs.core.first(arglist__8578);
      var y = cljs.core.first(cljs.core.next(arglist__8578));
      var more = cljs.core.rest(cljs.core.next(arglist__8578));
      return G__8574__delegate(x, y, more)
    };
    G__8574.cljs$lang$arity$variadic = G__8574__delegate;
    return G__8574
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__8579 = null;
  var G__8579__2 = function(o, k) {
    return null
  };
  var G__8579__3 = function(o, k, not_found) {
    return not_found
  };
  G__8579 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8579__2.call(this, o, k);
      case 3:
        return G__8579__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8579
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__8580 = null;
  var G__8580__2 = function(_, f) {
    return f.call(null)
  };
  var G__8580__3 = function(_, f, start) {
    return start
  };
  G__8580 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8580__2.call(this, _, f);
      case 3:
        return G__8580__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8580
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__8581 = null;
  var G__8581__2 = function(_, n) {
    return null
  };
  var G__8581__3 = function(_, n, not_found) {
    return not_found
  };
  G__8581 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8581__2.call(this, _, n);
      case 3:
        return G__8581__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8581
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____8582 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____8582) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____8582
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__8595 = cljs.core._count.call(null, cicoll);
    if(cnt__8595 === 0) {
      return f.call(null)
    }else {
      var val__8596 = cljs.core._nth.call(null, cicoll, 0);
      var n__8597 = 1;
      while(true) {
        if(n__8597 < cnt__8595) {
          var nval__8598 = f.call(null, val__8596, cljs.core._nth.call(null, cicoll, n__8597));
          if(cljs.core.reduced_QMARK_.call(null, nval__8598)) {
            return cljs.core.deref.call(null, nval__8598)
          }else {
            var G__8607 = nval__8598;
            var G__8608 = n__8597 + 1;
            val__8596 = G__8607;
            n__8597 = G__8608;
            continue
          }
        }else {
          return val__8596
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__8599 = cljs.core._count.call(null, cicoll);
    var val__8600 = val;
    var n__8601 = 0;
    while(true) {
      if(n__8601 < cnt__8599) {
        var nval__8602 = f.call(null, val__8600, cljs.core._nth.call(null, cicoll, n__8601));
        if(cljs.core.reduced_QMARK_.call(null, nval__8602)) {
          return cljs.core.deref.call(null, nval__8602)
        }else {
          var G__8609 = nval__8602;
          var G__8610 = n__8601 + 1;
          val__8600 = G__8609;
          n__8601 = G__8610;
          continue
        }
      }else {
        return val__8600
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__8603 = cljs.core._count.call(null, cicoll);
    var val__8604 = val;
    var n__8605 = idx;
    while(true) {
      if(n__8605 < cnt__8603) {
        var nval__8606 = f.call(null, val__8604, cljs.core._nth.call(null, cicoll, n__8605));
        if(cljs.core.reduced_QMARK_.call(null, nval__8606)) {
          return cljs.core.deref.call(null, nval__8606)
        }else {
          var G__8611 = nval__8606;
          var G__8612 = n__8605 + 1;
          val__8604 = G__8611;
          n__8605 = G__8612;
          continue
        }
      }else {
        return val__8604
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__8625 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__8626 = arr[0];
      var n__8627 = 1;
      while(true) {
        if(n__8627 < cnt__8625) {
          var nval__8628 = f.call(null, val__8626, arr[n__8627]);
          if(cljs.core.reduced_QMARK_.call(null, nval__8628)) {
            return cljs.core.deref.call(null, nval__8628)
          }else {
            var G__8637 = nval__8628;
            var G__8638 = n__8627 + 1;
            val__8626 = G__8637;
            n__8627 = G__8638;
            continue
          }
        }else {
          return val__8626
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__8629 = arr.length;
    var val__8630 = val;
    var n__8631 = 0;
    while(true) {
      if(n__8631 < cnt__8629) {
        var nval__8632 = f.call(null, val__8630, arr[n__8631]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8632)) {
          return cljs.core.deref.call(null, nval__8632)
        }else {
          var G__8639 = nval__8632;
          var G__8640 = n__8631 + 1;
          val__8630 = G__8639;
          n__8631 = G__8640;
          continue
        }
      }else {
        return val__8630
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__8633 = arr.length;
    var val__8634 = val;
    var n__8635 = idx;
    while(true) {
      if(n__8635 < cnt__8633) {
        var nval__8636 = f.call(null, val__8634, arr[n__8635]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8636)) {
          return cljs.core.deref.call(null, nval__8636)
        }else {
          var G__8641 = nval__8636;
          var G__8642 = n__8635 + 1;
          val__8634 = G__8641;
          n__8635 = G__8642;
          continue
        }
      }else {
        return val__8634
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8643 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__8644 = this;
  if(this__8644.i + 1 < this__8644.a.length) {
    return new cljs.core.IndexedSeq(this__8644.a, this__8644.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8645 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8646 = this;
  var c__8647 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__8647 > 0) {
    return new cljs.core.RSeq(coll, c__8647 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__8648 = this;
  var this__8649 = this;
  return cljs.core.pr_str.call(null, this__8649)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8650 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8650.a)) {
    return cljs.core.ci_reduce.call(null, this__8650.a, f, this__8650.a[this__8650.i], this__8650.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__8650.a[this__8650.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8651 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8651.a)) {
    return cljs.core.ci_reduce.call(null, this__8651.a, f, start, this__8651.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__8652 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8653 = this;
  return this__8653.a.length - this__8653.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__8654 = this;
  return this__8654.a[this__8654.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__8655 = this;
  if(this__8655.i + 1 < this__8655.a.length) {
    return new cljs.core.IndexedSeq(this__8655.a, this__8655.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8656 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8657 = this;
  var i__8658 = n + this__8657.i;
  if(i__8658 < this__8657.a.length) {
    return this__8657.a[i__8658]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8659 = this;
  var i__8660 = n + this__8659.i;
  if(i__8660 < this__8659.a.length) {
    return this__8659.a[i__8660]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8661 = null;
  var G__8661__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8661__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8661 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8661__2.call(this, array, f);
      case 3:
        return G__8661__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8661
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8662 = null;
  var G__8662__2 = function(array, k) {
    return array[k]
  };
  var G__8662__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8662 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8662__2.call(this, array, k);
      case 3:
        return G__8662__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8662
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8663 = null;
  var G__8663__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8663__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8663 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8663__2.call(this, array, n);
      case 3:
        return G__8663__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8663
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8664 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8665 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__8666 = this;
  var this__8667 = this;
  return cljs.core.pr_str.call(null, this__8667)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8668 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8669 = this;
  return this__8669.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8670 = this;
  return cljs.core._nth.call(null, this__8670.ci, this__8670.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8671 = this;
  if(this__8671.i > 0) {
    return new cljs.core.RSeq(this__8671.ci, this__8671.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8672 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__8673 = this;
  return new cljs.core.RSeq(this__8673.ci, this__8673.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8674 = this;
  return this__8674.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8678__8679 = coll;
      if(G__8678__8679) {
        if(function() {
          var or__3824__auto____8680 = G__8678__8679.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____8680) {
            return or__3824__auto____8680
          }else {
            return G__8678__8679.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__8678__8679.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8678__8679)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8678__8679)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8685__8686 = coll;
      if(G__8685__8686) {
        if(function() {
          var or__3824__auto____8687 = G__8685__8686.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8687) {
            return or__3824__auto____8687
          }else {
            return G__8685__8686.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8685__8686.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8685__8686)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8685__8686)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__8688 = cljs.core.seq.call(null, coll);
      if(s__8688 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__8688)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__8693__8694 = coll;
      if(G__8693__8694) {
        if(function() {
          var or__3824__auto____8695 = G__8693__8694.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8695) {
            return or__3824__auto____8695
          }else {
            return G__8693__8694.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8693__8694.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8693__8694)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8693__8694)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__8696 = cljs.core.seq.call(null, coll);
      if(!(s__8696 == null)) {
        return cljs.core._rest.call(null, s__8696)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8700__8701 = coll;
      if(G__8700__8701) {
        if(function() {
          var or__3824__auto____8702 = G__8700__8701.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____8702) {
            return or__3824__auto____8702
          }else {
            return G__8700__8701.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8700__8701.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8700__8701)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8700__8701)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8704 = cljs.core.next.call(null, s);
    if(!(sn__8704 == null)) {
      var G__8705 = sn__8704;
      s = G__8705;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8706__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8707 = conj.call(null, coll, x);
          var G__8708 = cljs.core.first.call(null, xs);
          var G__8709 = cljs.core.next.call(null, xs);
          coll = G__8707;
          x = G__8708;
          xs = G__8709;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8706 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8706__delegate.call(this, coll, x, xs)
    };
    G__8706.cljs$lang$maxFixedArity = 2;
    G__8706.cljs$lang$applyTo = function(arglist__8710) {
      var coll = cljs.core.first(arglist__8710);
      var x = cljs.core.first(cljs.core.next(arglist__8710));
      var xs = cljs.core.rest(cljs.core.next(arglist__8710));
      return G__8706__delegate(coll, x, xs)
    };
    G__8706.cljs$lang$arity$variadic = G__8706__delegate;
    return G__8706
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8713 = cljs.core.seq.call(null, coll);
  var acc__8714 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8713)) {
      return acc__8714 + cljs.core._count.call(null, s__8713)
    }else {
      var G__8715 = cljs.core.next.call(null, s__8713);
      var G__8716 = acc__8714 + 1;
      s__8713 = G__8715;
      acc__8714 = G__8716;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8723__8724 = coll;
        if(G__8723__8724) {
          if(function() {
            var or__3824__auto____8725 = G__8723__8724.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8725) {
              return or__3824__auto____8725
            }else {
              return G__8723__8724.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8723__8724.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8723__8724)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8723__8724)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8726__8727 = coll;
        if(G__8726__8727) {
          if(function() {
            var or__3824__auto____8728 = G__8726__8727.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8728) {
              return or__3824__auto____8728
            }else {
              return G__8726__8727.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8726__8727.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8726__8727)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8726__8727)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8731__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8730 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8732 = ret__8730;
          var G__8733 = cljs.core.first.call(null, kvs);
          var G__8734 = cljs.core.second.call(null, kvs);
          var G__8735 = cljs.core.nnext.call(null, kvs);
          coll = G__8732;
          k = G__8733;
          v = G__8734;
          kvs = G__8735;
          continue
        }else {
          return ret__8730
        }
        break
      }
    };
    var G__8731 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8731__delegate.call(this, coll, k, v, kvs)
    };
    G__8731.cljs$lang$maxFixedArity = 3;
    G__8731.cljs$lang$applyTo = function(arglist__8736) {
      var coll = cljs.core.first(arglist__8736);
      var k = cljs.core.first(cljs.core.next(arglist__8736));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8736)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8736)));
      return G__8731__delegate(coll, k, v, kvs)
    };
    G__8731.cljs$lang$arity$variadic = G__8731__delegate;
    return G__8731
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8739__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8738 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8740 = ret__8738;
          var G__8741 = cljs.core.first.call(null, ks);
          var G__8742 = cljs.core.next.call(null, ks);
          coll = G__8740;
          k = G__8741;
          ks = G__8742;
          continue
        }else {
          return ret__8738
        }
        break
      }
    };
    var G__8739 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8739__delegate.call(this, coll, k, ks)
    };
    G__8739.cljs$lang$maxFixedArity = 2;
    G__8739.cljs$lang$applyTo = function(arglist__8743) {
      var coll = cljs.core.first(arglist__8743);
      var k = cljs.core.first(cljs.core.next(arglist__8743));
      var ks = cljs.core.rest(cljs.core.next(arglist__8743));
      return G__8739__delegate(coll, k, ks)
    };
    G__8739.cljs$lang$arity$variadic = G__8739__delegate;
    return G__8739
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8747__8748 = o;
    if(G__8747__8748) {
      if(function() {
        var or__3824__auto____8749 = G__8747__8748.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____8749) {
          return or__3824__auto____8749
        }else {
          return G__8747__8748.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8747__8748.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8747__8748)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8747__8748)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8752__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8751 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8753 = ret__8751;
          var G__8754 = cljs.core.first.call(null, ks);
          var G__8755 = cljs.core.next.call(null, ks);
          coll = G__8753;
          k = G__8754;
          ks = G__8755;
          continue
        }else {
          return ret__8751
        }
        break
      }
    };
    var G__8752 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8752__delegate.call(this, coll, k, ks)
    };
    G__8752.cljs$lang$maxFixedArity = 2;
    G__8752.cljs$lang$applyTo = function(arglist__8756) {
      var coll = cljs.core.first(arglist__8756);
      var k = cljs.core.first(cljs.core.next(arglist__8756));
      var ks = cljs.core.rest(cljs.core.next(arglist__8756));
      return G__8752__delegate(coll, k, ks)
    };
    G__8752.cljs$lang$arity$variadic = G__8752__delegate;
    return G__8752
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8758 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8758;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8758
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8760 = cljs.core.string_hash_cache[k];
  if(!(h__8760 == null)) {
    return h__8760
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____8762 = goog.isString(o);
      if(and__3822__auto____8762) {
        return check_cache
      }else {
        return and__3822__auto____8762
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8766__8767 = x;
    if(G__8766__8767) {
      if(function() {
        var or__3824__auto____8768 = G__8766__8767.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____8768) {
          return or__3824__auto____8768
        }else {
          return G__8766__8767.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8766__8767.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8766__8767)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8766__8767)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8772__8773 = x;
    if(G__8772__8773) {
      if(function() {
        var or__3824__auto____8774 = G__8772__8773.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____8774) {
          return or__3824__auto____8774
        }else {
          return G__8772__8773.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8772__8773.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8772__8773)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8772__8773)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8778__8779 = x;
  if(G__8778__8779) {
    if(function() {
      var or__3824__auto____8780 = G__8778__8779.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____8780) {
        return or__3824__auto____8780
      }else {
        return G__8778__8779.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8778__8779.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8778__8779)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8778__8779)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8784__8785 = x;
  if(G__8784__8785) {
    if(function() {
      var or__3824__auto____8786 = G__8784__8785.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____8786) {
        return or__3824__auto____8786
      }else {
        return G__8784__8785.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8784__8785.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8784__8785)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8784__8785)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8790__8791 = x;
  if(G__8790__8791) {
    if(function() {
      var or__3824__auto____8792 = G__8790__8791.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____8792) {
        return or__3824__auto____8792
      }else {
        return G__8790__8791.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8790__8791.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8790__8791)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8790__8791)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8796__8797 = x;
  if(G__8796__8797) {
    if(function() {
      var or__3824__auto____8798 = G__8796__8797.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____8798) {
        return or__3824__auto____8798
      }else {
        return G__8796__8797.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8796__8797.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8796__8797)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8796__8797)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8802__8803 = x;
  if(G__8802__8803) {
    if(function() {
      var or__3824__auto____8804 = G__8802__8803.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____8804) {
        return or__3824__auto____8804
      }else {
        return G__8802__8803.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8802__8803.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8802__8803)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8802__8803)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8808__8809 = x;
    if(G__8808__8809) {
      if(function() {
        var or__3824__auto____8810 = G__8808__8809.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____8810) {
          return or__3824__auto____8810
        }else {
          return G__8808__8809.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8808__8809.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8808__8809)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8808__8809)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8814__8815 = x;
  if(G__8814__8815) {
    if(function() {
      var or__3824__auto____8816 = G__8814__8815.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____8816) {
        return or__3824__auto____8816
      }else {
        return G__8814__8815.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8814__8815.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8814__8815)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8814__8815)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8820__8821 = x;
  if(G__8820__8821) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____8822 = null;
      if(cljs.core.truth_(or__3824__auto____8822)) {
        return or__3824__auto____8822
      }else {
        return G__8820__8821.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__8820__8821.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8820__8821)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8820__8821)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8823__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8823 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8823__delegate.call(this, keyvals)
    };
    G__8823.cljs$lang$maxFixedArity = 0;
    G__8823.cljs$lang$applyTo = function(arglist__8824) {
      var keyvals = cljs.core.seq(arglist__8824);
      return G__8823__delegate(keyvals)
    };
    G__8823.cljs$lang$arity$variadic = G__8823__delegate;
    return G__8823
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8826 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8826.push(key)
  });
  return keys__8826
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8830 = i;
  var j__8831 = j;
  var len__8832 = len;
  while(true) {
    if(len__8832 === 0) {
      return to
    }else {
      to[j__8831] = from[i__8830];
      var G__8833 = i__8830 + 1;
      var G__8834 = j__8831 + 1;
      var G__8835 = len__8832 - 1;
      i__8830 = G__8833;
      j__8831 = G__8834;
      len__8832 = G__8835;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8839 = i + (len - 1);
  var j__8840 = j + (len - 1);
  var len__8841 = len;
  while(true) {
    if(len__8841 === 0) {
      return to
    }else {
      to[j__8840] = from[i__8839];
      var G__8842 = i__8839 - 1;
      var G__8843 = j__8840 - 1;
      var G__8844 = len__8841 - 1;
      i__8839 = G__8842;
      j__8840 = G__8843;
      len__8841 = G__8844;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8848__8849 = s;
    if(G__8848__8849) {
      if(function() {
        var or__3824__auto____8850 = G__8848__8849.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____8850) {
          return or__3824__auto____8850
        }else {
          return G__8848__8849.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8848__8849.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8848__8849)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8848__8849)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8854__8855 = s;
  if(G__8854__8855) {
    if(function() {
      var or__3824__auto____8856 = G__8854__8855.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____8856) {
        return or__3824__auto____8856
      }else {
        return G__8854__8855.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8854__8855.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8854__8855)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8854__8855)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____8859 = goog.isString(x);
  if(and__3822__auto____8859) {
    return!function() {
      var or__3824__auto____8860 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____8860) {
        return or__3824__auto____8860
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____8859
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____8862 = goog.isString(x);
  if(and__3822__auto____8862) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____8862
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____8864 = goog.isString(x);
  if(and__3822__auto____8864) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____8864
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____8869 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____8869) {
    return or__3824__auto____8869
  }else {
    var G__8870__8871 = f;
    if(G__8870__8871) {
      if(function() {
        var or__3824__auto____8872 = G__8870__8871.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____8872) {
          return or__3824__auto____8872
        }else {
          return G__8870__8871.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8870__8871.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8870__8871)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8870__8871)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____8874 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____8874) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____8874
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____8877 = coll;
    if(cljs.core.truth_(and__3822__auto____8877)) {
      var and__3822__auto____8878 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____8878) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____8878
      }
    }else {
      return and__3822__auto____8877
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8887__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8883 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__8884 = more;
        while(true) {
          var x__8885 = cljs.core.first.call(null, xs__8884);
          var etc__8886 = cljs.core.next.call(null, xs__8884);
          if(cljs.core.truth_(xs__8884)) {
            if(cljs.core.contains_QMARK_.call(null, s__8883, x__8885)) {
              return false
            }else {
              var G__8888 = cljs.core.conj.call(null, s__8883, x__8885);
              var G__8889 = etc__8886;
              s__8883 = G__8888;
              xs__8884 = G__8889;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8887 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8887__delegate.call(this, x, y, more)
    };
    G__8887.cljs$lang$maxFixedArity = 2;
    G__8887.cljs$lang$applyTo = function(arglist__8890) {
      var x = cljs.core.first(arglist__8890);
      var y = cljs.core.first(cljs.core.next(arglist__8890));
      var more = cljs.core.rest(cljs.core.next(arglist__8890));
      return G__8887__delegate(x, y, more)
    };
    G__8887.cljs$lang$arity$variadic = G__8887__delegate;
    return G__8887
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8894__8895 = x;
            if(G__8894__8895) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____8896 = null;
                if(cljs.core.truth_(or__3824__auto____8896)) {
                  return or__3824__auto____8896
                }else {
                  return G__8894__8895.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__8894__8895.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8894__8895)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8894__8895)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8901 = cljs.core.count.call(null, xs);
    var yl__8902 = cljs.core.count.call(null, ys);
    if(xl__8901 < yl__8902) {
      return-1
    }else {
      if(xl__8901 > yl__8902) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8901, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8903 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____8904 = d__8903 === 0;
        if(and__3822__auto____8904) {
          return n + 1 < len
        }else {
          return and__3822__auto____8904
        }
      }()) {
        var G__8905 = xs;
        var G__8906 = ys;
        var G__8907 = len;
        var G__8908 = n + 1;
        xs = G__8905;
        ys = G__8906;
        len = G__8907;
        n = G__8908;
        continue
      }else {
        return d__8903
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8910 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8910)) {
        return r__8910
      }else {
        if(cljs.core.truth_(r__8910)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8912 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8912, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8912)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____8918 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____8918) {
      var s__8919 = temp__3971__auto____8918;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8919), cljs.core.next.call(null, s__8919))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8920 = val;
    var coll__8921 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8921) {
        var nval__8922 = f.call(null, val__8920, cljs.core.first.call(null, coll__8921));
        if(cljs.core.reduced_QMARK_.call(null, nval__8922)) {
          return cljs.core.deref.call(null, nval__8922)
        }else {
          var G__8923 = nval__8922;
          var G__8924 = cljs.core.next.call(null, coll__8921);
          val__8920 = G__8923;
          coll__8921 = G__8924;
          continue
        }
      }else {
        return val__8920
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__8926 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8926);
  return cljs.core.vec.call(null, a__8926)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8933__8934 = coll;
      if(G__8933__8934) {
        if(function() {
          var or__3824__auto____8935 = G__8933__8934.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8935) {
            return or__3824__auto____8935
          }else {
            return G__8933__8934.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8933__8934.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8933__8934)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8933__8934)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8936__8937 = coll;
      if(G__8936__8937) {
        if(function() {
          var or__3824__auto____8938 = G__8936__8937.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8938) {
            return or__3824__auto____8938
          }else {
            return G__8936__8937.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8936__8937.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8936__8937)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8936__8937)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8939 = this;
  return this__8939.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8940__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8940 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8940__delegate.call(this, x, y, more)
    };
    G__8940.cljs$lang$maxFixedArity = 2;
    G__8940.cljs$lang$applyTo = function(arglist__8941) {
      var x = cljs.core.first(arglist__8941);
      var y = cljs.core.first(cljs.core.next(arglist__8941));
      var more = cljs.core.rest(cljs.core.next(arglist__8941));
      return G__8940__delegate(x, y, more)
    };
    G__8940.cljs$lang$arity$variadic = G__8940__delegate;
    return G__8940
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8942__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8942 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8942__delegate.call(this, x, y, more)
    };
    G__8942.cljs$lang$maxFixedArity = 2;
    G__8942.cljs$lang$applyTo = function(arglist__8943) {
      var x = cljs.core.first(arglist__8943);
      var y = cljs.core.first(cljs.core.next(arglist__8943));
      var more = cljs.core.rest(cljs.core.next(arglist__8943));
      return G__8942__delegate(x, y, more)
    };
    G__8942.cljs$lang$arity$variadic = G__8942__delegate;
    return G__8942
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8944__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8944 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8944__delegate.call(this, x, y, more)
    };
    G__8944.cljs$lang$maxFixedArity = 2;
    G__8944.cljs$lang$applyTo = function(arglist__8945) {
      var x = cljs.core.first(arglist__8945);
      var y = cljs.core.first(cljs.core.next(arglist__8945));
      var more = cljs.core.rest(cljs.core.next(arglist__8945));
      return G__8944__delegate(x, y, more)
    };
    G__8944.cljs$lang$arity$variadic = G__8944__delegate;
    return G__8944
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8946__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8946 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8946__delegate.call(this, x, y, more)
    };
    G__8946.cljs$lang$maxFixedArity = 2;
    G__8946.cljs$lang$applyTo = function(arglist__8947) {
      var x = cljs.core.first(arglist__8947);
      var y = cljs.core.first(cljs.core.next(arglist__8947));
      var more = cljs.core.rest(cljs.core.next(arglist__8947));
      return G__8946__delegate(x, y, more)
    };
    G__8946.cljs$lang$arity$variadic = G__8946__delegate;
    return G__8946
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__8948__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__8949 = y;
            var G__8950 = cljs.core.first.call(null, more);
            var G__8951 = cljs.core.next.call(null, more);
            x = G__8949;
            y = G__8950;
            more = G__8951;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8948 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8948__delegate.call(this, x, y, more)
    };
    G__8948.cljs$lang$maxFixedArity = 2;
    G__8948.cljs$lang$applyTo = function(arglist__8952) {
      var x = cljs.core.first(arglist__8952);
      var y = cljs.core.first(cljs.core.next(arglist__8952));
      var more = cljs.core.rest(cljs.core.next(arglist__8952));
      return G__8948__delegate(x, y, more)
    };
    G__8948.cljs$lang$arity$variadic = G__8948__delegate;
    return G__8948
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__8953__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8954 = y;
            var G__8955 = cljs.core.first.call(null, more);
            var G__8956 = cljs.core.next.call(null, more);
            x = G__8954;
            y = G__8955;
            more = G__8956;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8953 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8953__delegate.call(this, x, y, more)
    };
    G__8953.cljs$lang$maxFixedArity = 2;
    G__8953.cljs$lang$applyTo = function(arglist__8957) {
      var x = cljs.core.first(arglist__8957);
      var y = cljs.core.first(cljs.core.next(arglist__8957));
      var more = cljs.core.rest(cljs.core.next(arglist__8957));
      return G__8953__delegate(x, y, more)
    };
    G__8953.cljs$lang$arity$variadic = G__8953__delegate;
    return G__8953
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__8958__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__8959 = y;
            var G__8960 = cljs.core.first.call(null, more);
            var G__8961 = cljs.core.next.call(null, more);
            x = G__8959;
            y = G__8960;
            more = G__8961;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8958 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8958__delegate.call(this, x, y, more)
    };
    G__8958.cljs$lang$maxFixedArity = 2;
    G__8958.cljs$lang$applyTo = function(arglist__8962) {
      var x = cljs.core.first(arglist__8962);
      var y = cljs.core.first(cljs.core.next(arglist__8962));
      var more = cljs.core.rest(cljs.core.next(arglist__8962));
      return G__8958__delegate(x, y, more)
    };
    G__8958.cljs$lang$arity$variadic = G__8958__delegate;
    return G__8958
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__8963__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8964 = y;
            var G__8965 = cljs.core.first.call(null, more);
            var G__8966 = cljs.core.next.call(null, more);
            x = G__8964;
            y = G__8965;
            more = G__8966;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8963 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8963__delegate.call(this, x, y, more)
    };
    G__8963.cljs$lang$maxFixedArity = 2;
    G__8963.cljs$lang$applyTo = function(arglist__8967) {
      var x = cljs.core.first(arglist__8967);
      var y = cljs.core.first(cljs.core.next(arglist__8967));
      var more = cljs.core.rest(cljs.core.next(arglist__8967));
      return G__8963__delegate(x, y, more)
    };
    G__8963.cljs$lang$arity$variadic = G__8963__delegate;
    return G__8963
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__8968__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__8968 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8968__delegate.call(this, x, y, more)
    };
    G__8968.cljs$lang$maxFixedArity = 2;
    G__8968.cljs$lang$applyTo = function(arglist__8969) {
      var x = cljs.core.first(arglist__8969);
      var y = cljs.core.first(cljs.core.next(arglist__8969));
      var more = cljs.core.rest(cljs.core.next(arglist__8969));
      return G__8968__delegate(x, y, more)
    };
    G__8968.cljs$lang$arity$variadic = G__8968__delegate;
    return G__8968
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__8970__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__8970 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8970__delegate.call(this, x, y, more)
    };
    G__8970.cljs$lang$maxFixedArity = 2;
    G__8970.cljs$lang$applyTo = function(arglist__8971) {
      var x = cljs.core.first(arglist__8971);
      var y = cljs.core.first(cljs.core.next(arglist__8971));
      var more = cljs.core.rest(cljs.core.next(arglist__8971));
      return G__8970__delegate(x, y, more)
    };
    G__8970.cljs$lang$arity$variadic = G__8970__delegate;
    return G__8970
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__8973 = n % d;
  return cljs.core.fix.call(null, (n - rem__8973) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__8975 = cljs.core.quot.call(null, n, d);
  return n - d * q__8975
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__8978 = v - (v >> 1 & 1431655765);
  var v__8979 = (v__8978 & 858993459) + (v__8978 >> 2 & 858993459);
  return(v__8979 + (v__8979 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__8980__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8981 = y;
            var G__8982 = cljs.core.first.call(null, more);
            var G__8983 = cljs.core.next.call(null, more);
            x = G__8981;
            y = G__8982;
            more = G__8983;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8980 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8980__delegate.call(this, x, y, more)
    };
    G__8980.cljs$lang$maxFixedArity = 2;
    G__8980.cljs$lang$applyTo = function(arglist__8984) {
      var x = cljs.core.first(arglist__8984);
      var y = cljs.core.first(cljs.core.next(arglist__8984));
      var more = cljs.core.rest(cljs.core.next(arglist__8984));
      return G__8980__delegate(x, y, more)
    };
    G__8980.cljs$lang$arity$variadic = G__8980__delegate;
    return G__8980
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__8988 = n;
  var xs__8989 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____8990 = xs__8989;
      if(and__3822__auto____8990) {
        return n__8988 > 0
      }else {
        return and__3822__auto____8990
      }
    }())) {
      var G__8991 = n__8988 - 1;
      var G__8992 = cljs.core.next.call(null, xs__8989);
      n__8988 = G__8991;
      xs__8989 = G__8992;
      continue
    }else {
      return xs__8989
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__8993__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8994 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__8995 = cljs.core.next.call(null, more);
            sb = G__8994;
            more = G__8995;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__8993 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8993__delegate.call(this, x, ys)
    };
    G__8993.cljs$lang$maxFixedArity = 1;
    G__8993.cljs$lang$applyTo = function(arglist__8996) {
      var x = cljs.core.first(arglist__8996);
      var ys = cljs.core.rest(arglist__8996);
      return G__8993__delegate(x, ys)
    };
    G__8993.cljs$lang$arity$variadic = G__8993__delegate;
    return G__8993
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__8997__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8998 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__8999 = cljs.core.next.call(null, more);
            sb = G__8998;
            more = G__8999;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__8997 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8997__delegate.call(this, x, ys)
    };
    G__8997.cljs$lang$maxFixedArity = 1;
    G__8997.cljs$lang$applyTo = function(arglist__9000) {
      var x = cljs.core.first(arglist__9000);
      var ys = cljs.core.rest(arglist__9000);
      return G__8997__delegate(x, ys)
    };
    G__8997.cljs$lang$arity$variadic = G__8997__delegate;
    return G__8997
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__9001) {
    var fmt = cljs.core.first(arglist__9001);
    var args = cljs.core.rest(arglist__9001);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__9004 = cljs.core.seq.call(null, x);
    var ys__9005 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__9004 == null) {
        return ys__9005 == null
      }else {
        if(ys__9005 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__9004), cljs.core.first.call(null, ys__9005))) {
            var G__9006 = cljs.core.next.call(null, xs__9004);
            var G__9007 = cljs.core.next.call(null, ys__9005);
            xs__9004 = G__9006;
            ys__9005 = G__9007;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__9008_SHARP_, p2__9009_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__9008_SHARP_, cljs.core.hash.call(null, p2__9009_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__9013 = 0;
  var s__9014 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__9014) {
      var e__9015 = cljs.core.first.call(null, s__9014);
      var G__9016 = (h__9013 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__9015)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__9015)))) % 4503599627370496;
      var G__9017 = cljs.core.next.call(null, s__9014);
      h__9013 = G__9016;
      s__9014 = G__9017;
      continue
    }else {
      return h__9013
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__9021 = 0;
  var s__9022 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__9022) {
      var e__9023 = cljs.core.first.call(null, s__9022);
      var G__9024 = (h__9021 + cljs.core.hash.call(null, e__9023)) % 4503599627370496;
      var G__9025 = cljs.core.next.call(null, s__9022);
      h__9021 = G__9024;
      s__9022 = G__9025;
      continue
    }else {
      return h__9021
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__9046__9047 = cljs.core.seq.call(null, fn_map);
  if(G__9046__9047) {
    var G__9049__9051 = cljs.core.first.call(null, G__9046__9047);
    var vec__9050__9052 = G__9049__9051;
    var key_name__9053 = cljs.core.nth.call(null, vec__9050__9052, 0, null);
    var f__9054 = cljs.core.nth.call(null, vec__9050__9052, 1, null);
    var G__9046__9055 = G__9046__9047;
    var G__9049__9056 = G__9049__9051;
    var G__9046__9057 = G__9046__9055;
    while(true) {
      var vec__9058__9059 = G__9049__9056;
      var key_name__9060 = cljs.core.nth.call(null, vec__9058__9059, 0, null);
      var f__9061 = cljs.core.nth.call(null, vec__9058__9059, 1, null);
      var G__9046__9062 = G__9046__9057;
      var str_name__9063 = cljs.core.name.call(null, key_name__9060);
      obj[str_name__9063] = f__9061;
      var temp__3974__auto____9064 = cljs.core.next.call(null, G__9046__9062);
      if(temp__3974__auto____9064) {
        var G__9046__9065 = temp__3974__auto____9064;
        var G__9066 = cljs.core.first.call(null, G__9046__9065);
        var G__9067 = G__9046__9065;
        G__9049__9056 = G__9066;
        G__9046__9057 = G__9067;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9068 = this;
  var h__2239__auto____9069 = this__9068.__hash;
  if(!(h__2239__auto____9069 == null)) {
    return h__2239__auto____9069
  }else {
    var h__2239__auto____9070 = cljs.core.hash_coll.call(null, coll);
    this__9068.__hash = h__2239__auto____9070;
    return h__2239__auto____9070
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9071 = this;
  if(this__9071.count === 1) {
    return null
  }else {
    return this__9071.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9072 = this;
  return new cljs.core.List(this__9072.meta, o, coll, this__9072.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__9073 = this;
  var this__9074 = this;
  return cljs.core.pr_str.call(null, this__9074)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9075 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9076 = this;
  return this__9076.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9077 = this;
  return this__9077.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9078 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9079 = this;
  return this__9079.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9080 = this;
  if(this__9080.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__9080.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9081 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9082 = this;
  return new cljs.core.List(meta, this__9082.first, this__9082.rest, this__9082.count, this__9082.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9083 = this;
  return this__9083.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9084 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9085 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9086 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9087 = this;
  return new cljs.core.List(this__9087.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__9088 = this;
  var this__9089 = this;
  return cljs.core.pr_str.call(null, this__9089)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9090 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9091 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9092 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9093 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9094 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9095 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9096 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9097 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9098 = this;
  return this__9098.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9099 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__9103__9104 = coll;
  if(G__9103__9104) {
    if(function() {
      var or__3824__auto____9105 = G__9103__9104.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____9105) {
        return or__3824__auto____9105
      }else {
        return G__9103__9104.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__9103__9104.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__9103__9104)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__9103__9104)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__9106__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__9106 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9106__delegate.call(this, x, y, z, items)
    };
    G__9106.cljs$lang$maxFixedArity = 3;
    G__9106.cljs$lang$applyTo = function(arglist__9107) {
      var x = cljs.core.first(arglist__9107);
      var y = cljs.core.first(cljs.core.next(arglist__9107));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9107)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9107)));
      return G__9106__delegate(x, y, z, items)
    };
    G__9106.cljs$lang$arity$variadic = G__9106__delegate;
    return G__9106
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9108 = this;
  var h__2239__auto____9109 = this__9108.__hash;
  if(!(h__2239__auto____9109 == null)) {
    return h__2239__auto____9109
  }else {
    var h__2239__auto____9110 = cljs.core.hash_coll.call(null, coll);
    this__9108.__hash = h__2239__auto____9110;
    return h__2239__auto____9110
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9111 = this;
  if(this__9111.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__9111.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9112 = this;
  return new cljs.core.Cons(null, o, coll, this__9112.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__9113 = this;
  var this__9114 = this;
  return cljs.core.pr_str.call(null, this__9114)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9115 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9116 = this;
  return this__9116.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9117 = this;
  if(this__9117.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__9117.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9118 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9119 = this;
  return new cljs.core.Cons(meta, this__9119.first, this__9119.rest, this__9119.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9120 = this;
  return this__9120.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9121 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9121.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____9126 = coll == null;
    if(or__3824__auto____9126) {
      return or__3824__auto____9126
    }else {
      var G__9127__9128 = coll;
      if(G__9127__9128) {
        if(function() {
          var or__3824__auto____9129 = G__9127__9128.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____9129) {
            return or__3824__auto____9129
          }else {
            return G__9127__9128.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9127__9128.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9127__9128)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9127__9128)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__9133__9134 = x;
  if(G__9133__9134) {
    if(function() {
      var or__3824__auto____9135 = G__9133__9134.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____9135) {
        return or__3824__auto____9135
      }else {
        return G__9133__9134.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__9133__9134.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__9133__9134)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__9133__9134)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__9136 = null;
  var G__9136__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__9136__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__9136 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__9136__2.call(this, string, f);
      case 3:
        return G__9136__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9136
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__9137 = null;
  var G__9137__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__9137__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__9137 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9137__2.call(this, string, k);
      case 3:
        return G__9137__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9137
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__9138 = null;
  var G__9138__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__9138__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__9138 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9138__2.call(this, string, n);
      case 3:
        return G__9138__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9138
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__9150 = null;
  var G__9150__2 = function(this_sym9141, coll) {
    var this__9143 = this;
    var this_sym9141__9144 = this;
    var ___9145 = this_sym9141__9144;
    if(coll == null) {
      return null
    }else {
      var strobj__9146 = coll.strobj;
      if(strobj__9146 == null) {
        return cljs.core._lookup.call(null, coll, this__9143.k, null)
      }else {
        return strobj__9146[this__9143.k]
      }
    }
  };
  var G__9150__3 = function(this_sym9142, coll, not_found) {
    var this__9143 = this;
    var this_sym9142__9147 = this;
    var ___9148 = this_sym9142__9147;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__9143.k, not_found)
    }
  };
  G__9150 = function(this_sym9142, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9150__2.call(this, this_sym9142, coll);
      case 3:
        return G__9150__3.call(this, this_sym9142, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9150
}();
cljs.core.Keyword.prototype.apply = function(this_sym9139, args9140) {
  var this__9149 = this;
  return this_sym9139.call.apply(this_sym9139, [this_sym9139].concat(args9140.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__9159 = null;
  var G__9159__2 = function(this_sym9153, coll) {
    var this_sym9153__9155 = this;
    var this__9156 = this_sym9153__9155;
    return cljs.core._lookup.call(null, coll, this__9156.toString(), null)
  };
  var G__9159__3 = function(this_sym9154, coll, not_found) {
    var this_sym9154__9157 = this;
    var this__9158 = this_sym9154__9157;
    return cljs.core._lookup.call(null, coll, this__9158.toString(), not_found)
  };
  G__9159 = function(this_sym9154, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9159__2.call(this, this_sym9154, coll);
      case 3:
        return G__9159__3.call(this, this_sym9154, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9159
}();
String.prototype.apply = function(this_sym9151, args9152) {
  return this_sym9151.call.apply(this_sym9151, [this_sym9151].concat(args9152.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__9161 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__9161
  }else {
    lazy_seq.x = x__9161.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9162 = this;
  var h__2239__auto____9163 = this__9162.__hash;
  if(!(h__2239__auto____9163 == null)) {
    return h__2239__auto____9163
  }else {
    var h__2239__auto____9164 = cljs.core.hash_coll.call(null, coll);
    this__9162.__hash = h__2239__auto____9164;
    return h__2239__auto____9164
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9165 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9166 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__9167 = this;
  var this__9168 = this;
  return cljs.core.pr_str.call(null, this__9168)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9169 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9170 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9171 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9172 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9173 = this;
  return new cljs.core.LazySeq(meta, this__9173.realized, this__9173.x, this__9173.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9174 = this;
  return this__9174.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9175 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9175.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9176 = this;
  return this__9176.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__9177 = this;
  var ___9178 = this;
  this__9177.buf[this__9177.end] = o;
  return this__9177.end = this__9177.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__9179 = this;
  var ___9180 = this;
  var ret__9181 = new cljs.core.ArrayChunk(this__9179.buf, 0, this__9179.end);
  this__9179.buf = null;
  return ret__9181
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9182 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__9182.arr[this__9182.off], this__9182.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9183 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__9183.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__9184 = this;
  if(this__9184.off === this__9184.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__9184.arr, this__9184.off + 1, this__9184.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__9185 = this;
  return this__9185.arr[this__9185.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__9186 = this;
  if(function() {
    var and__3822__auto____9187 = i >= 0;
    if(and__3822__auto____9187) {
      return i < this__9186.end - this__9186.off
    }else {
      return and__3822__auto____9187
    }
  }()) {
    return this__9186.arr[this__9186.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9188 = this;
  return this__9188.end - this__9188.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__9189 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9190 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9191 = this;
  return cljs.core._nth.call(null, this__9191.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9192 = this;
  if(cljs.core._count.call(null, this__9192.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__9192.chunk), this__9192.more, this__9192.meta)
  }else {
    if(this__9192.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__9192.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9193 = this;
  if(this__9193.more == null) {
    return null
  }else {
    return this__9193.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9194 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9195 = this;
  return new cljs.core.ChunkedCons(this__9195.chunk, this__9195.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9196 = this;
  return this__9196.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9197 = this;
  return this__9197.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9198 = this;
  if(this__9198.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__9198.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__9202__9203 = s;
    if(G__9202__9203) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____9204 = null;
        if(cljs.core.truth_(or__3824__auto____9204)) {
          return or__3824__auto____9204
        }else {
          return G__9202__9203.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__9202__9203.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__9202__9203)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__9202__9203)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__9207 = [];
  var s__9208 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__9208)) {
      ary__9207.push(cljs.core.first.call(null, s__9208));
      var G__9209 = cljs.core.next.call(null, s__9208);
      s__9208 = G__9209;
      continue
    }else {
      return ary__9207
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__9213 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__9214 = 0;
  var xs__9215 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__9215) {
      ret__9213[i__9214] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__9215));
      var G__9216 = i__9214 + 1;
      var G__9217 = cljs.core.next.call(null, xs__9215);
      i__9214 = G__9216;
      xs__9215 = G__9217;
      continue
    }else {
    }
    break
  }
  return ret__9213
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__9225 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9226 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9227 = 0;
      var s__9228 = s__9226;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9229 = s__9228;
          if(and__3822__auto____9229) {
            return i__9227 < size
          }else {
            return and__3822__auto____9229
          }
        }())) {
          a__9225[i__9227] = cljs.core.first.call(null, s__9228);
          var G__9232 = i__9227 + 1;
          var G__9233 = cljs.core.next.call(null, s__9228);
          i__9227 = G__9232;
          s__9228 = G__9233;
          continue
        }else {
          return a__9225
        }
        break
      }
    }else {
      var n__2574__auto____9230 = size;
      var i__9231 = 0;
      while(true) {
        if(i__9231 < n__2574__auto____9230) {
          a__9225[i__9231] = init_val_or_seq;
          var G__9234 = i__9231 + 1;
          i__9231 = G__9234;
          continue
        }else {
        }
        break
      }
      return a__9225
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__9242 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9243 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9244 = 0;
      var s__9245 = s__9243;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9246 = s__9245;
          if(and__3822__auto____9246) {
            return i__9244 < size
          }else {
            return and__3822__auto____9246
          }
        }())) {
          a__9242[i__9244] = cljs.core.first.call(null, s__9245);
          var G__9249 = i__9244 + 1;
          var G__9250 = cljs.core.next.call(null, s__9245);
          i__9244 = G__9249;
          s__9245 = G__9250;
          continue
        }else {
          return a__9242
        }
        break
      }
    }else {
      var n__2574__auto____9247 = size;
      var i__9248 = 0;
      while(true) {
        if(i__9248 < n__2574__auto____9247) {
          a__9242[i__9248] = init_val_or_seq;
          var G__9251 = i__9248 + 1;
          i__9248 = G__9251;
          continue
        }else {
        }
        break
      }
      return a__9242
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__9259 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9260 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9261 = 0;
      var s__9262 = s__9260;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9263 = s__9262;
          if(and__3822__auto____9263) {
            return i__9261 < size
          }else {
            return and__3822__auto____9263
          }
        }())) {
          a__9259[i__9261] = cljs.core.first.call(null, s__9262);
          var G__9266 = i__9261 + 1;
          var G__9267 = cljs.core.next.call(null, s__9262);
          i__9261 = G__9266;
          s__9262 = G__9267;
          continue
        }else {
          return a__9259
        }
        break
      }
    }else {
      var n__2574__auto____9264 = size;
      var i__9265 = 0;
      while(true) {
        if(i__9265 < n__2574__auto____9264) {
          a__9259[i__9265] = init_val_or_seq;
          var G__9268 = i__9265 + 1;
          i__9265 = G__9268;
          continue
        }else {
        }
        break
      }
      return a__9259
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__9273 = s;
    var i__9274 = n;
    var sum__9275 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____9276 = i__9274 > 0;
        if(and__3822__auto____9276) {
          return cljs.core.seq.call(null, s__9273)
        }else {
          return and__3822__auto____9276
        }
      }())) {
        var G__9277 = cljs.core.next.call(null, s__9273);
        var G__9278 = i__9274 - 1;
        var G__9279 = sum__9275 + 1;
        s__9273 = G__9277;
        i__9274 = G__9278;
        sum__9275 = G__9279;
        continue
      }else {
        return sum__9275
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__9284 = cljs.core.seq.call(null, x);
      if(s__9284) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9284)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__9284), concat.call(null, cljs.core.chunk_rest.call(null, s__9284), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__9284), concat.call(null, cljs.core.rest.call(null, s__9284), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__9288__delegate = function(x, y, zs) {
      var cat__9287 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__9286 = cljs.core.seq.call(null, xys);
          if(xys__9286) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__9286)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__9286), cat.call(null, cljs.core.chunk_rest.call(null, xys__9286), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__9286), cat.call(null, cljs.core.rest.call(null, xys__9286), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__9287.call(null, concat.call(null, x, y), zs)
    };
    var G__9288 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9288__delegate.call(this, x, y, zs)
    };
    G__9288.cljs$lang$maxFixedArity = 2;
    G__9288.cljs$lang$applyTo = function(arglist__9289) {
      var x = cljs.core.first(arglist__9289);
      var y = cljs.core.first(cljs.core.next(arglist__9289));
      var zs = cljs.core.rest(cljs.core.next(arglist__9289));
      return G__9288__delegate(x, y, zs)
    };
    G__9288.cljs$lang$arity$variadic = G__9288__delegate;
    return G__9288
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__9290__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__9290 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9290__delegate.call(this, a, b, c, d, more)
    };
    G__9290.cljs$lang$maxFixedArity = 4;
    G__9290.cljs$lang$applyTo = function(arglist__9291) {
      var a = cljs.core.first(arglist__9291);
      var b = cljs.core.first(cljs.core.next(arglist__9291));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9291)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9291))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9291))));
      return G__9290__delegate(a, b, c, d, more)
    };
    G__9290.cljs$lang$arity$variadic = G__9290__delegate;
    return G__9290
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__9333 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__9334 = cljs.core._first.call(null, args__9333);
    var args__9335 = cljs.core._rest.call(null, args__9333);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__9334)
      }else {
        return f.call(null, a__9334)
      }
    }else {
      var b__9336 = cljs.core._first.call(null, args__9335);
      var args__9337 = cljs.core._rest.call(null, args__9335);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__9334, b__9336)
        }else {
          return f.call(null, a__9334, b__9336)
        }
      }else {
        var c__9338 = cljs.core._first.call(null, args__9337);
        var args__9339 = cljs.core._rest.call(null, args__9337);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__9334, b__9336, c__9338)
          }else {
            return f.call(null, a__9334, b__9336, c__9338)
          }
        }else {
          var d__9340 = cljs.core._first.call(null, args__9339);
          var args__9341 = cljs.core._rest.call(null, args__9339);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__9334, b__9336, c__9338, d__9340)
            }else {
              return f.call(null, a__9334, b__9336, c__9338, d__9340)
            }
          }else {
            var e__9342 = cljs.core._first.call(null, args__9341);
            var args__9343 = cljs.core._rest.call(null, args__9341);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__9334, b__9336, c__9338, d__9340, e__9342)
              }else {
                return f.call(null, a__9334, b__9336, c__9338, d__9340, e__9342)
              }
            }else {
              var f__9344 = cljs.core._first.call(null, args__9343);
              var args__9345 = cljs.core._rest.call(null, args__9343);
              if(argc === 6) {
                if(f__9344.cljs$lang$arity$6) {
                  return f__9344.cljs$lang$arity$6(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344)
                }else {
                  return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344)
                }
              }else {
                var g__9346 = cljs.core._first.call(null, args__9345);
                var args__9347 = cljs.core._rest.call(null, args__9345);
                if(argc === 7) {
                  if(f__9344.cljs$lang$arity$7) {
                    return f__9344.cljs$lang$arity$7(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346)
                  }else {
                    return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346)
                  }
                }else {
                  var h__9348 = cljs.core._first.call(null, args__9347);
                  var args__9349 = cljs.core._rest.call(null, args__9347);
                  if(argc === 8) {
                    if(f__9344.cljs$lang$arity$8) {
                      return f__9344.cljs$lang$arity$8(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348)
                    }else {
                      return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348)
                    }
                  }else {
                    var i__9350 = cljs.core._first.call(null, args__9349);
                    var args__9351 = cljs.core._rest.call(null, args__9349);
                    if(argc === 9) {
                      if(f__9344.cljs$lang$arity$9) {
                        return f__9344.cljs$lang$arity$9(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350)
                      }else {
                        return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350)
                      }
                    }else {
                      var j__9352 = cljs.core._first.call(null, args__9351);
                      var args__9353 = cljs.core._rest.call(null, args__9351);
                      if(argc === 10) {
                        if(f__9344.cljs$lang$arity$10) {
                          return f__9344.cljs$lang$arity$10(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352)
                        }else {
                          return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352)
                        }
                      }else {
                        var k__9354 = cljs.core._first.call(null, args__9353);
                        var args__9355 = cljs.core._rest.call(null, args__9353);
                        if(argc === 11) {
                          if(f__9344.cljs$lang$arity$11) {
                            return f__9344.cljs$lang$arity$11(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354)
                          }else {
                            return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354)
                          }
                        }else {
                          var l__9356 = cljs.core._first.call(null, args__9355);
                          var args__9357 = cljs.core._rest.call(null, args__9355);
                          if(argc === 12) {
                            if(f__9344.cljs$lang$arity$12) {
                              return f__9344.cljs$lang$arity$12(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356)
                            }else {
                              return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356)
                            }
                          }else {
                            var m__9358 = cljs.core._first.call(null, args__9357);
                            var args__9359 = cljs.core._rest.call(null, args__9357);
                            if(argc === 13) {
                              if(f__9344.cljs$lang$arity$13) {
                                return f__9344.cljs$lang$arity$13(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358)
                              }else {
                                return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358)
                              }
                            }else {
                              var n__9360 = cljs.core._first.call(null, args__9359);
                              var args__9361 = cljs.core._rest.call(null, args__9359);
                              if(argc === 14) {
                                if(f__9344.cljs$lang$arity$14) {
                                  return f__9344.cljs$lang$arity$14(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360)
                                }else {
                                  return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360)
                                }
                              }else {
                                var o__9362 = cljs.core._first.call(null, args__9361);
                                var args__9363 = cljs.core._rest.call(null, args__9361);
                                if(argc === 15) {
                                  if(f__9344.cljs$lang$arity$15) {
                                    return f__9344.cljs$lang$arity$15(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362)
                                  }else {
                                    return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362)
                                  }
                                }else {
                                  var p__9364 = cljs.core._first.call(null, args__9363);
                                  var args__9365 = cljs.core._rest.call(null, args__9363);
                                  if(argc === 16) {
                                    if(f__9344.cljs$lang$arity$16) {
                                      return f__9344.cljs$lang$arity$16(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362, p__9364)
                                    }else {
                                      return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362, p__9364)
                                    }
                                  }else {
                                    var q__9366 = cljs.core._first.call(null, args__9365);
                                    var args__9367 = cljs.core._rest.call(null, args__9365);
                                    if(argc === 17) {
                                      if(f__9344.cljs$lang$arity$17) {
                                        return f__9344.cljs$lang$arity$17(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362, p__9364, q__9366)
                                      }else {
                                        return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362, p__9364, q__9366)
                                      }
                                    }else {
                                      var r__9368 = cljs.core._first.call(null, args__9367);
                                      var args__9369 = cljs.core._rest.call(null, args__9367);
                                      if(argc === 18) {
                                        if(f__9344.cljs$lang$arity$18) {
                                          return f__9344.cljs$lang$arity$18(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362, p__9364, q__9366, r__9368)
                                        }else {
                                          return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362, p__9364, q__9366, r__9368)
                                        }
                                      }else {
                                        var s__9370 = cljs.core._first.call(null, args__9369);
                                        var args__9371 = cljs.core._rest.call(null, args__9369);
                                        if(argc === 19) {
                                          if(f__9344.cljs$lang$arity$19) {
                                            return f__9344.cljs$lang$arity$19(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362, p__9364, q__9366, r__9368, s__9370)
                                          }else {
                                            return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362, p__9364, q__9366, r__9368, s__9370)
                                          }
                                        }else {
                                          var t__9372 = cljs.core._first.call(null, args__9371);
                                          var args__9373 = cljs.core._rest.call(null, args__9371);
                                          if(argc === 20) {
                                            if(f__9344.cljs$lang$arity$20) {
                                              return f__9344.cljs$lang$arity$20(a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362, p__9364, q__9366, r__9368, s__9370, t__9372)
                                            }else {
                                              return f__9344.call(null, a__9334, b__9336, c__9338, d__9340, e__9342, f__9344, g__9346, h__9348, i__9350, j__9352, k__9354, l__9356, m__9358, n__9360, o__9362, p__9364, q__9366, r__9368, s__9370, t__9372)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__9388 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9389 = cljs.core.bounded_count.call(null, args, fixed_arity__9388 + 1);
      if(bc__9389 <= fixed_arity__9388) {
        return cljs.core.apply_to.call(null, f, bc__9389, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__9390 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__9391 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9392 = cljs.core.bounded_count.call(null, arglist__9390, fixed_arity__9391 + 1);
      if(bc__9392 <= fixed_arity__9391) {
        return cljs.core.apply_to.call(null, f, bc__9392, arglist__9390)
      }else {
        return f.cljs$lang$applyTo(arglist__9390)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9390))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__9393 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__9394 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9395 = cljs.core.bounded_count.call(null, arglist__9393, fixed_arity__9394 + 1);
      if(bc__9395 <= fixed_arity__9394) {
        return cljs.core.apply_to.call(null, f, bc__9395, arglist__9393)
      }else {
        return f.cljs$lang$applyTo(arglist__9393)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9393))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__9396 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__9397 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9398 = cljs.core.bounded_count.call(null, arglist__9396, fixed_arity__9397 + 1);
      if(bc__9398 <= fixed_arity__9397) {
        return cljs.core.apply_to.call(null, f, bc__9398, arglist__9396)
      }else {
        return f.cljs$lang$applyTo(arglist__9396)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9396))
    }
  };
  var apply__6 = function() {
    var G__9402__delegate = function(f, a, b, c, d, args) {
      var arglist__9399 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__9400 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__9401 = cljs.core.bounded_count.call(null, arglist__9399, fixed_arity__9400 + 1);
        if(bc__9401 <= fixed_arity__9400) {
          return cljs.core.apply_to.call(null, f, bc__9401, arglist__9399)
        }else {
          return f.cljs$lang$applyTo(arglist__9399)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__9399))
      }
    };
    var G__9402 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__9402__delegate.call(this, f, a, b, c, d, args)
    };
    G__9402.cljs$lang$maxFixedArity = 5;
    G__9402.cljs$lang$applyTo = function(arglist__9403) {
      var f = cljs.core.first(arglist__9403);
      var a = cljs.core.first(cljs.core.next(arglist__9403));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9403)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9403))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9403)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9403)))));
      return G__9402__delegate(f, a, b, c, d, args)
    };
    G__9402.cljs$lang$arity$variadic = G__9402__delegate;
    return G__9402
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__9404) {
    var obj = cljs.core.first(arglist__9404);
    var f = cljs.core.first(cljs.core.next(arglist__9404));
    var args = cljs.core.rest(cljs.core.next(arglist__9404));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__9405__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__9405 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9405__delegate.call(this, x, y, more)
    };
    G__9405.cljs$lang$maxFixedArity = 2;
    G__9405.cljs$lang$applyTo = function(arglist__9406) {
      var x = cljs.core.first(arglist__9406);
      var y = cljs.core.first(cljs.core.next(arglist__9406));
      var more = cljs.core.rest(cljs.core.next(arglist__9406));
      return G__9405__delegate(x, y, more)
    };
    G__9405.cljs$lang$arity$variadic = G__9405__delegate;
    return G__9405
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__9407 = pred;
        var G__9408 = cljs.core.next.call(null, coll);
        pred = G__9407;
        coll = G__9408;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____9410 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____9410)) {
        return or__3824__auto____9410
      }else {
        var G__9411 = pred;
        var G__9412 = cljs.core.next.call(null, coll);
        pred = G__9411;
        coll = G__9412;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__9413 = null;
    var G__9413__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__9413__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__9413__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__9413__3 = function() {
      var G__9414__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__9414 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__9414__delegate.call(this, x, y, zs)
      };
      G__9414.cljs$lang$maxFixedArity = 2;
      G__9414.cljs$lang$applyTo = function(arglist__9415) {
        var x = cljs.core.first(arglist__9415);
        var y = cljs.core.first(cljs.core.next(arglist__9415));
        var zs = cljs.core.rest(cljs.core.next(arglist__9415));
        return G__9414__delegate(x, y, zs)
      };
      G__9414.cljs$lang$arity$variadic = G__9414__delegate;
      return G__9414
    }();
    G__9413 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__9413__0.call(this);
        case 1:
          return G__9413__1.call(this, x);
        case 2:
          return G__9413__2.call(this, x, y);
        default:
          return G__9413__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__9413.cljs$lang$maxFixedArity = 2;
    G__9413.cljs$lang$applyTo = G__9413__3.cljs$lang$applyTo;
    return G__9413
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__9416__delegate = function(args) {
      return x
    };
    var G__9416 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__9416__delegate.call(this, args)
    };
    G__9416.cljs$lang$maxFixedArity = 0;
    G__9416.cljs$lang$applyTo = function(arglist__9417) {
      var args = cljs.core.seq(arglist__9417);
      return G__9416__delegate(args)
    };
    G__9416.cljs$lang$arity$variadic = G__9416__delegate;
    return G__9416
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__9424 = null;
      var G__9424__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__9424__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__9424__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__9424__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__9424__4 = function() {
        var G__9425__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__9425 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9425__delegate.call(this, x, y, z, args)
        };
        G__9425.cljs$lang$maxFixedArity = 3;
        G__9425.cljs$lang$applyTo = function(arglist__9426) {
          var x = cljs.core.first(arglist__9426);
          var y = cljs.core.first(cljs.core.next(arglist__9426));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9426)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9426)));
          return G__9425__delegate(x, y, z, args)
        };
        G__9425.cljs$lang$arity$variadic = G__9425__delegate;
        return G__9425
      }();
      G__9424 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9424__0.call(this);
          case 1:
            return G__9424__1.call(this, x);
          case 2:
            return G__9424__2.call(this, x, y);
          case 3:
            return G__9424__3.call(this, x, y, z);
          default:
            return G__9424__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9424.cljs$lang$maxFixedArity = 3;
      G__9424.cljs$lang$applyTo = G__9424__4.cljs$lang$applyTo;
      return G__9424
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__9427 = null;
      var G__9427__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__9427__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__9427__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__9427__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__9427__4 = function() {
        var G__9428__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__9428 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9428__delegate.call(this, x, y, z, args)
        };
        G__9428.cljs$lang$maxFixedArity = 3;
        G__9428.cljs$lang$applyTo = function(arglist__9429) {
          var x = cljs.core.first(arglist__9429);
          var y = cljs.core.first(cljs.core.next(arglist__9429));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9429)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9429)));
          return G__9428__delegate(x, y, z, args)
        };
        G__9428.cljs$lang$arity$variadic = G__9428__delegate;
        return G__9428
      }();
      G__9427 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9427__0.call(this);
          case 1:
            return G__9427__1.call(this, x);
          case 2:
            return G__9427__2.call(this, x, y);
          case 3:
            return G__9427__3.call(this, x, y, z);
          default:
            return G__9427__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9427.cljs$lang$maxFixedArity = 3;
      G__9427.cljs$lang$applyTo = G__9427__4.cljs$lang$applyTo;
      return G__9427
    }()
  };
  var comp__4 = function() {
    var G__9430__delegate = function(f1, f2, f3, fs) {
      var fs__9421 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__9431__delegate = function(args) {
          var ret__9422 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__9421), args);
          var fs__9423 = cljs.core.next.call(null, fs__9421);
          while(true) {
            if(fs__9423) {
              var G__9432 = cljs.core.first.call(null, fs__9423).call(null, ret__9422);
              var G__9433 = cljs.core.next.call(null, fs__9423);
              ret__9422 = G__9432;
              fs__9423 = G__9433;
              continue
            }else {
              return ret__9422
            }
            break
          }
        };
        var G__9431 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9431__delegate.call(this, args)
        };
        G__9431.cljs$lang$maxFixedArity = 0;
        G__9431.cljs$lang$applyTo = function(arglist__9434) {
          var args = cljs.core.seq(arglist__9434);
          return G__9431__delegate(args)
        };
        G__9431.cljs$lang$arity$variadic = G__9431__delegate;
        return G__9431
      }()
    };
    var G__9430 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9430__delegate.call(this, f1, f2, f3, fs)
    };
    G__9430.cljs$lang$maxFixedArity = 3;
    G__9430.cljs$lang$applyTo = function(arglist__9435) {
      var f1 = cljs.core.first(arglist__9435);
      var f2 = cljs.core.first(cljs.core.next(arglist__9435));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9435)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9435)));
      return G__9430__delegate(f1, f2, f3, fs)
    };
    G__9430.cljs$lang$arity$variadic = G__9430__delegate;
    return G__9430
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__9436__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__9436 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9436__delegate.call(this, args)
      };
      G__9436.cljs$lang$maxFixedArity = 0;
      G__9436.cljs$lang$applyTo = function(arglist__9437) {
        var args = cljs.core.seq(arglist__9437);
        return G__9436__delegate(args)
      };
      G__9436.cljs$lang$arity$variadic = G__9436__delegate;
      return G__9436
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__9438__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__9438 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9438__delegate.call(this, args)
      };
      G__9438.cljs$lang$maxFixedArity = 0;
      G__9438.cljs$lang$applyTo = function(arglist__9439) {
        var args = cljs.core.seq(arglist__9439);
        return G__9438__delegate(args)
      };
      G__9438.cljs$lang$arity$variadic = G__9438__delegate;
      return G__9438
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__9440__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__9440 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9440__delegate.call(this, args)
      };
      G__9440.cljs$lang$maxFixedArity = 0;
      G__9440.cljs$lang$applyTo = function(arglist__9441) {
        var args = cljs.core.seq(arglist__9441);
        return G__9440__delegate(args)
      };
      G__9440.cljs$lang$arity$variadic = G__9440__delegate;
      return G__9440
    }()
  };
  var partial__5 = function() {
    var G__9442__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__9443__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__9443 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9443__delegate.call(this, args)
        };
        G__9443.cljs$lang$maxFixedArity = 0;
        G__9443.cljs$lang$applyTo = function(arglist__9444) {
          var args = cljs.core.seq(arglist__9444);
          return G__9443__delegate(args)
        };
        G__9443.cljs$lang$arity$variadic = G__9443__delegate;
        return G__9443
      }()
    };
    var G__9442 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9442__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__9442.cljs$lang$maxFixedArity = 4;
    G__9442.cljs$lang$applyTo = function(arglist__9445) {
      var f = cljs.core.first(arglist__9445);
      var arg1 = cljs.core.first(cljs.core.next(arglist__9445));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9445)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9445))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9445))));
      return G__9442__delegate(f, arg1, arg2, arg3, more)
    };
    G__9442.cljs$lang$arity$variadic = G__9442__delegate;
    return G__9442
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__9446 = null;
      var G__9446__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__9446__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__9446__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__9446__4 = function() {
        var G__9447__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__9447 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9447__delegate.call(this, a, b, c, ds)
        };
        G__9447.cljs$lang$maxFixedArity = 3;
        G__9447.cljs$lang$applyTo = function(arglist__9448) {
          var a = cljs.core.first(arglist__9448);
          var b = cljs.core.first(cljs.core.next(arglist__9448));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9448)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9448)));
          return G__9447__delegate(a, b, c, ds)
        };
        G__9447.cljs$lang$arity$variadic = G__9447__delegate;
        return G__9447
      }();
      G__9446 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__9446__1.call(this, a);
          case 2:
            return G__9446__2.call(this, a, b);
          case 3:
            return G__9446__3.call(this, a, b, c);
          default:
            return G__9446__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9446.cljs$lang$maxFixedArity = 3;
      G__9446.cljs$lang$applyTo = G__9446__4.cljs$lang$applyTo;
      return G__9446
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__9449 = null;
      var G__9449__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9449__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__9449__4 = function() {
        var G__9450__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__9450 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9450__delegate.call(this, a, b, c, ds)
        };
        G__9450.cljs$lang$maxFixedArity = 3;
        G__9450.cljs$lang$applyTo = function(arglist__9451) {
          var a = cljs.core.first(arglist__9451);
          var b = cljs.core.first(cljs.core.next(arglist__9451));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9451)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9451)));
          return G__9450__delegate(a, b, c, ds)
        };
        G__9450.cljs$lang$arity$variadic = G__9450__delegate;
        return G__9450
      }();
      G__9449 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9449__2.call(this, a, b);
          case 3:
            return G__9449__3.call(this, a, b, c);
          default:
            return G__9449__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9449.cljs$lang$maxFixedArity = 3;
      G__9449.cljs$lang$applyTo = G__9449__4.cljs$lang$applyTo;
      return G__9449
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__9452 = null;
      var G__9452__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9452__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__9452__4 = function() {
        var G__9453__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__9453 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9453__delegate.call(this, a, b, c, ds)
        };
        G__9453.cljs$lang$maxFixedArity = 3;
        G__9453.cljs$lang$applyTo = function(arglist__9454) {
          var a = cljs.core.first(arglist__9454);
          var b = cljs.core.first(cljs.core.next(arglist__9454));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9454)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9454)));
          return G__9453__delegate(a, b, c, ds)
        };
        G__9453.cljs$lang$arity$variadic = G__9453__delegate;
        return G__9453
      }();
      G__9452 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9452__2.call(this, a, b);
          case 3:
            return G__9452__3.call(this, a, b, c);
          default:
            return G__9452__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9452.cljs$lang$maxFixedArity = 3;
      G__9452.cljs$lang$applyTo = G__9452__4.cljs$lang$applyTo;
      return G__9452
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__9470 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9478 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9478) {
        var s__9479 = temp__3974__auto____9478;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9479)) {
          var c__9480 = cljs.core.chunk_first.call(null, s__9479);
          var size__9481 = cljs.core.count.call(null, c__9480);
          var b__9482 = cljs.core.chunk_buffer.call(null, size__9481);
          var n__2574__auto____9483 = size__9481;
          var i__9484 = 0;
          while(true) {
            if(i__9484 < n__2574__auto____9483) {
              cljs.core.chunk_append.call(null, b__9482, f.call(null, idx + i__9484, cljs.core._nth.call(null, c__9480, i__9484)));
              var G__9485 = i__9484 + 1;
              i__9484 = G__9485;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9482), mapi.call(null, idx + size__9481, cljs.core.chunk_rest.call(null, s__9479)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__9479)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__9479)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__9470.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9495 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9495) {
      var s__9496 = temp__3974__auto____9495;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9496)) {
        var c__9497 = cljs.core.chunk_first.call(null, s__9496);
        var size__9498 = cljs.core.count.call(null, c__9497);
        var b__9499 = cljs.core.chunk_buffer.call(null, size__9498);
        var n__2574__auto____9500 = size__9498;
        var i__9501 = 0;
        while(true) {
          if(i__9501 < n__2574__auto____9500) {
            var x__9502 = f.call(null, cljs.core._nth.call(null, c__9497, i__9501));
            if(x__9502 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__9499, x__9502)
            }
            var G__9504 = i__9501 + 1;
            i__9501 = G__9504;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9499), keep.call(null, f, cljs.core.chunk_rest.call(null, s__9496)))
      }else {
        var x__9503 = f.call(null, cljs.core.first.call(null, s__9496));
        if(x__9503 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__9496))
        }else {
          return cljs.core.cons.call(null, x__9503, keep.call(null, f, cljs.core.rest.call(null, s__9496)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__9530 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9540 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9540) {
        var s__9541 = temp__3974__auto____9540;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9541)) {
          var c__9542 = cljs.core.chunk_first.call(null, s__9541);
          var size__9543 = cljs.core.count.call(null, c__9542);
          var b__9544 = cljs.core.chunk_buffer.call(null, size__9543);
          var n__2574__auto____9545 = size__9543;
          var i__9546 = 0;
          while(true) {
            if(i__9546 < n__2574__auto____9545) {
              var x__9547 = f.call(null, idx + i__9546, cljs.core._nth.call(null, c__9542, i__9546));
              if(x__9547 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__9544, x__9547)
              }
              var G__9549 = i__9546 + 1;
              i__9546 = G__9549;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9544), keepi.call(null, idx + size__9543, cljs.core.chunk_rest.call(null, s__9541)))
        }else {
          var x__9548 = f.call(null, idx, cljs.core.first.call(null, s__9541));
          if(x__9548 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9541))
          }else {
            return cljs.core.cons.call(null, x__9548, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9541)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__9530.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9635 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9635)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____9635
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9636 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9636)) {
            var and__3822__auto____9637 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9637)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____9637
            }
          }else {
            return and__3822__auto____9636
          }
        }())
      };
      var ep1__4 = function() {
        var G__9706__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9638 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9638)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____9638
            }
          }())
        };
        var G__9706 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9706__delegate.call(this, x, y, z, args)
        };
        G__9706.cljs$lang$maxFixedArity = 3;
        G__9706.cljs$lang$applyTo = function(arglist__9707) {
          var x = cljs.core.first(arglist__9707);
          var y = cljs.core.first(cljs.core.next(arglist__9707));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9707)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9707)));
          return G__9706__delegate(x, y, z, args)
        };
        G__9706.cljs$lang$arity$variadic = G__9706__delegate;
        return G__9706
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9650 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9650)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____9650
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9651 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9651)) {
            var and__3822__auto____9652 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9652)) {
              var and__3822__auto____9653 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9653)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____9653
              }
            }else {
              return and__3822__auto____9652
            }
          }else {
            return and__3822__auto____9651
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9654 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9654)) {
            var and__3822__auto____9655 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9655)) {
              var and__3822__auto____9656 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____9656)) {
                var and__3822__auto____9657 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____9657)) {
                  var and__3822__auto____9658 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9658)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____9658
                  }
                }else {
                  return and__3822__auto____9657
                }
              }else {
                return and__3822__auto____9656
              }
            }else {
              return and__3822__auto____9655
            }
          }else {
            return and__3822__auto____9654
          }
        }())
      };
      var ep2__4 = function() {
        var G__9708__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9659 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9659)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9505_SHARP_) {
                var and__3822__auto____9660 = p1.call(null, p1__9505_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9660)) {
                  return p2.call(null, p1__9505_SHARP_)
                }else {
                  return and__3822__auto____9660
                }
              }, args)
            }else {
              return and__3822__auto____9659
            }
          }())
        };
        var G__9708 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9708__delegate.call(this, x, y, z, args)
        };
        G__9708.cljs$lang$maxFixedArity = 3;
        G__9708.cljs$lang$applyTo = function(arglist__9709) {
          var x = cljs.core.first(arglist__9709);
          var y = cljs.core.first(cljs.core.next(arglist__9709));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9709)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9709)));
          return G__9708__delegate(x, y, z, args)
        };
        G__9708.cljs$lang$arity$variadic = G__9708__delegate;
        return G__9708
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9679 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9679)) {
            var and__3822__auto____9680 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9680)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____9680
            }
          }else {
            return and__3822__auto____9679
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9681 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9681)) {
            var and__3822__auto____9682 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9682)) {
              var and__3822__auto____9683 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9683)) {
                var and__3822__auto____9684 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9684)) {
                  var and__3822__auto____9685 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9685)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____9685
                  }
                }else {
                  return and__3822__auto____9684
                }
              }else {
                return and__3822__auto____9683
              }
            }else {
              return and__3822__auto____9682
            }
          }else {
            return and__3822__auto____9681
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9686 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9686)) {
            var and__3822__auto____9687 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9687)) {
              var and__3822__auto____9688 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9688)) {
                var and__3822__auto____9689 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9689)) {
                  var and__3822__auto____9690 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9690)) {
                    var and__3822__auto____9691 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____9691)) {
                      var and__3822__auto____9692 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____9692)) {
                        var and__3822__auto____9693 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____9693)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____9693
                        }
                      }else {
                        return and__3822__auto____9692
                      }
                    }else {
                      return and__3822__auto____9691
                    }
                  }else {
                    return and__3822__auto____9690
                  }
                }else {
                  return and__3822__auto____9689
                }
              }else {
                return and__3822__auto____9688
              }
            }else {
              return and__3822__auto____9687
            }
          }else {
            return and__3822__auto____9686
          }
        }())
      };
      var ep3__4 = function() {
        var G__9710__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9694 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9694)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9506_SHARP_) {
                var and__3822__auto____9695 = p1.call(null, p1__9506_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9695)) {
                  var and__3822__auto____9696 = p2.call(null, p1__9506_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____9696)) {
                    return p3.call(null, p1__9506_SHARP_)
                  }else {
                    return and__3822__auto____9696
                  }
                }else {
                  return and__3822__auto____9695
                }
              }, args)
            }else {
              return and__3822__auto____9694
            }
          }())
        };
        var G__9710 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9710__delegate.call(this, x, y, z, args)
        };
        G__9710.cljs$lang$maxFixedArity = 3;
        G__9710.cljs$lang$applyTo = function(arglist__9711) {
          var x = cljs.core.first(arglist__9711);
          var y = cljs.core.first(cljs.core.next(arglist__9711));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9711)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9711)));
          return G__9710__delegate(x, y, z, args)
        };
        G__9710.cljs$lang$arity$variadic = G__9710__delegate;
        return G__9710
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9712__delegate = function(p1, p2, p3, ps) {
      var ps__9697 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__9507_SHARP_) {
            return p1__9507_SHARP_.call(null, x)
          }, ps__9697)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__9508_SHARP_) {
            var and__3822__auto____9702 = p1__9508_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9702)) {
              return p1__9508_SHARP_.call(null, y)
            }else {
              return and__3822__auto____9702
            }
          }, ps__9697)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__9509_SHARP_) {
            var and__3822__auto____9703 = p1__9509_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9703)) {
              var and__3822__auto____9704 = p1__9509_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____9704)) {
                return p1__9509_SHARP_.call(null, z)
              }else {
                return and__3822__auto____9704
              }
            }else {
              return and__3822__auto____9703
            }
          }, ps__9697)
        };
        var epn__4 = function() {
          var G__9713__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____9705 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____9705)) {
                return cljs.core.every_QMARK_.call(null, function(p1__9510_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__9510_SHARP_, args)
                }, ps__9697)
              }else {
                return and__3822__auto____9705
              }
            }())
          };
          var G__9713 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9713__delegate.call(this, x, y, z, args)
          };
          G__9713.cljs$lang$maxFixedArity = 3;
          G__9713.cljs$lang$applyTo = function(arglist__9714) {
            var x = cljs.core.first(arglist__9714);
            var y = cljs.core.first(cljs.core.next(arglist__9714));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9714)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9714)));
            return G__9713__delegate(x, y, z, args)
          };
          G__9713.cljs$lang$arity$variadic = G__9713__delegate;
          return G__9713
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9712 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9712__delegate.call(this, p1, p2, p3, ps)
    };
    G__9712.cljs$lang$maxFixedArity = 3;
    G__9712.cljs$lang$applyTo = function(arglist__9715) {
      var p1 = cljs.core.first(arglist__9715);
      var p2 = cljs.core.first(cljs.core.next(arglist__9715));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9715)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9715)));
      return G__9712__delegate(p1, p2, p3, ps)
    };
    G__9712.cljs$lang$arity$variadic = G__9712__delegate;
    return G__9712
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____9796 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9796)) {
          return or__3824__auto____9796
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____9797 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9797)) {
          return or__3824__auto____9797
        }else {
          var or__3824__auto____9798 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9798)) {
            return or__3824__auto____9798
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9867__delegate = function(x, y, z, args) {
          var or__3824__auto____9799 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9799)) {
            return or__3824__auto____9799
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9867 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9867__delegate.call(this, x, y, z, args)
        };
        G__9867.cljs$lang$maxFixedArity = 3;
        G__9867.cljs$lang$applyTo = function(arglist__9868) {
          var x = cljs.core.first(arglist__9868);
          var y = cljs.core.first(cljs.core.next(arglist__9868));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9868)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9868)));
          return G__9867__delegate(x, y, z, args)
        };
        G__9867.cljs$lang$arity$variadic = G__9867__delegate;
        return G__9867
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____9811 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9811)) {
          return or__3824__auto____9811
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____9812 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9812)) {
          return or__3824__auto____9812
        }else {
          var or__3824__auto____9813 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9813)) {
            return or__3824__auto____9813
          }else {
            var or__3824__auto____9814 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9814)) {
              return or__3824__auto____9814
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____9815 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9815)) {
          return or__3824__auto____9815
        }else {
          var or__3824__auto____9816 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9816)) {
            return or__3824__auto____9816
          }else {
            var or__3824__auto____9817 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____9817)) {
              return or__3824__auto____9817
            }else {
              var or__3824__auto____9818 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____9818)) {
                return or__3824__auto____9818
              }else {
                var or__3824__auto____9819 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9819)) {
                  return or__3824__auto____9819
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9869__delegate = function(x, y, z, args) {
          var or__3824__auto____9820 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9820)) {
            return or__3824__auto____9820
          }else {
            return cljs.core.some.call(null, function(p1__9550_SHARP_) {
              var or__3824__auto____9821 = p1.call(null, p1__9550_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9821)) {
                return or__3824__auto____9821
              }else {
                return p2.call(null, p1__9550_SHARP_)
              }
            }, args)
          }
        };
        var G__9869 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9869__delegate.call(this, x, y, z, args)
        };
        G__9869.cljs$lang$maxFixedArity = 3;
        G__9869.cljs$lang$applyTo = function(arglist__9870) {
          var x = cljs.core.first(arglist__9870);
          var y = cljs.core.first(cljs.core.next(arglist__9870));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9870)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9870)));
          return G__9869__delegate(x, y, z, args)
        };
        G__9869.cljs$lang$arity$variadic = G__9869__delegate;
        return G__9869
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____9840 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9840)) {
          return or__3824__auto____9840
        }else {
          var or__3824__auto____9841 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9841)) {
            return or__3824__auto____9841
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____9842 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9842)) {
          return or__3824__auto____9842
        }else {
          var or__3824__auto____9843 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9843)) {
            return or__3824__auto____9843
          }else {
            var or__3824__auto____9844 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9844)) {
              return or__3824__auto____9844
            }else {
              var or__3824__auto____9845 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9845)) {
                return or__3824__auto____9845
              }else {
                var or__3824__auto____9846 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9846)) {
                  return or__3824__auto____9846
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____9847 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9847)) {
          return or__3824__auto____9847
        }else {
          var or__3824__auto____9848 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9848)) {
            return or__3824__auto____9848
          }else {
            var or__3824__auto____9849 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9849)) {
              return or__3824__auto____9849
            }else {
              var or__3824__auto____9850 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9850)) {
                return or__3824__auto____9850
              }else {
                var or__3824__auto____9851 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9851)) {
                  return or__3824__auto____9851
                }else {
                  var or__3824__auto____9852 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____9852)) {
                    return or__3824__auto____9852
                  }else {
                    var or__3824__auto____9853 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____9853)) {
                      return or__3824__auto____9853
                    }else {
                      var or__3824__auto____9854 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____9854)) {
                        return or__3824__auto____9854
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9871__delegate = function(x, y, z, args) {
          var or__3824__auto____9855 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9855)) {
            return or__3824__auto____9855
          }else {
            return cljs.core.some.call(null, function(p1__9551_SHARP_) {
              var or__3824__auto____9856 = p1.call(null, p1__9551_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9856)) {
                return or__3824__auto____9856
              }else {
                var or__3824__auto____9857 = p2.call(null, p1__9551_SHARP_);
                if(cljs.core.truth_(or__3824__auto____9857)) {
                  return or__3824__auto____9857
                }else {
                  return p3.call(null, p1__9551_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9871 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9871__delegate.call(this, x, y, z, args)
        };
        G__9871.cljs$lang$maxFixedArity = 3;
        G__9871.cljs$lang$applyTo = function(arglist__9872) {
          var x = cljs.core.first(arglist__9872);
          var y = cljs.core.first(cljs.core.next(arglist__9872));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9872)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9872)));
          return G__9871__delegate(x, y, z, args)
        };
        G__9871.cljs$lang$arity$variadic = G__9871__delegate;
        return G__9871
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9873__delegate = function(p1, p2, p3, ps) {
      var ps__9858 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__9552_SHARP_) {
            return p1__9552_SHARP_.call(null, x)
          }, ps__9858)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__9553_SHARP_) {
            var or__3824__auto____9863 = p1__9553_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9863)) {
              return or__3824__auto____9863
            }else {
              return p1__9553_SHARP_.call(null, y)
            }
          }, ps__9858)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__9554_SHARP_) {
            var or__3824__auto____9864 = p1__9554_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9864)) {
              return or__3824__auto____9864
            }else {
              var or__3824__auto____9865 = p1__9554_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9865)) {
                return or__3824__auto____9865
              }else {
                return p1__9554_SHARP_.call(null, z)
              }
            }
          }, ps__9858)
        };
        var spn__4 = function() {
          var G__9874__delegate = function(x, y, z, args) {
            var or__3824__auto____9866 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____9866)) {
              return or__3824__auto____9866
            }else {
              return cljs.core.some.call(null, function(p1__9555_SHARP_) {
                return cljs.core.some.call(null, p1__9555_SHARP_, args)
              }, ps__9858)
            }
          };
          var G__9874 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9874__delegate.call(this, x, y, z, args)
          };
          G__9874.cljs$lang$maxFixedArity = 3;
          G__9874.cljs$lang$applyTo = function(arglist__9875) {
            var x = cljs.core.first(arglist__9875);
            var y = cljs.core.first(cljs.core.next(arglist__9875));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9875)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9875)));
            return G__9874__delegate(x, y, z, args)
          };
          G__9874.cljs$lang$arity$variadic = G__9874__delegate;
          return G__9874
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9873 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9873__delegate.call(this, p1, p2, p3, ps)
    };
    G__9873.cljs$lang$maxFixedArity = 3;
    G__9873.cljs$lang$applyTo = function(arglist__9876) {
      var p1 = cljs.core.first(arglist__9876);
      var p2 = cljs.core.first(cljs.core.next(arglist__9876));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9876)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9876)));
      return G__9873__delegate(p1, p2, p3, ps)
    };
    G__9873.cljs$lang$arity$variadic = G__9873__delegate;
    return G__9873
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9895 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9895) {
        var s__9896 = temp__3974__auto____9895;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9896)) {
          var c__9897 = cljs.core.chunk_first.call(null, s__9896);
          var size__9898 = cljs.core.count.call(null, c__9897);
          var b__9899 = cljs.core.chunk_buffer.call(null, size__9898);
          var n__2574__auto____9900 = size__9898;
          var i__9901 = 0;
          while(true) {
            if(i__9901 < n__2574__auto____9900) {
              cljs.core.chunk_append.call(null, b__9899, f.call(null, cljs.core._nth.call(null, c__9897, i__9901)));
              var G__9913 = i__9901 + 1;
              i__9901 = G__9913;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9899), map.call(null, f, cljs.core.chunk_rest.call(null, s__9896)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9896)), map.call(null, f, cljs.core.rest.call(null, s__9896)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9902 = cljs.core.seq.call(null, c1);
      var s2__9903 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9904 = s1__9902;
        if(and__3822__auto____9904) {
          return s2__9903
        }else {
          return and__3822__auto____9904
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9902), cljs.core.first.call(null, s2__9903)), map.call(null, f, cljs.core.rest.call(null, s1__9902), cljs.core.rest.call(null, s2__9903)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9905 = cljs.core.seq.call(null, c1);
      var s2__9906 = cljs.core.seq.call(null, c2);
      var s3__9907 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____9908 = s1__9905;
        if(and__3822__auto____9908) {
          var and__3822__auto____9909 = s2__9906;
          if(and__3822__auto____9909) {
            return s3__9907
          }else {
            return and__3822__auto____9909
          }
        }else {
          return and__3822__auto____9908
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9905), cljs.core.first.call(null, s2__9906), cljs.core.first.call(null, s3__9907)), map.call(null, f, cljs.core.rest.call(null, s1__9905), cljs.core.rest.call(null, s2__9906), cljs.core.rest.call(null, s3__9907)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9914__delegate = function(f, c1, c2, c3, colls) {
      var step__9912 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9911 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9911)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9911), step.call(null, map.call(null, cljs.core.rest, ss__9911)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9716_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9716_SHARP_)
      }, step__9912.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9914 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9914__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9914.cljs$lang$maxFixedArity = 4;
    G__9914.cljs$lang$applyTo = function(arglist__9915) {
      var f = cljs.core.first(arglist__9915);
      var c1 = cljs.core.first(cljs.core.next(arglist__9915));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9915)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9915))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9915))));
      return G__9914__delegate(f, c1, c2, c3, colls)
    };
    G__9914.cljs$lang$arity$variadic = G__9914__delegate;
    return G__9914
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____9918 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9918) {
        var s__9919 = temp__3974__auto____9918;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9919), take.call(null, n - 1, cljs.core.rest.call(null, s__9919)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9925 = function(n, coll) {
    while(true) {
      var s__9923 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9924 = n > 0;
        if(and__3822__auto____9924) {
          return s__9923
        }else {
          return and__3822__auto____9924
        }
      }())) {
        var G__9926 = n - 1;
        var G__9927 = cljs.core.rest.call(null, s__9923);
        n = G__9926;
        coll = G__9927;
        continue
      }else {
        return s__9923
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9925.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9930 = cljs.core.seq.call(null, coll);
  var lead__9931 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9931) {
      var G__9932 = cljs.core.next.call(null, s__9930);
      var G__9933 = cljs.core.next.call(null, lead__9931);
      s__9930 = G__9932;
      lead__9931 = G__9933;
      continue
    }else {
      return s__9930
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9939 = function(pred, coll) {
    while(true) {
      var s__9937 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9938 = s__9937;
        if(and__3822__auto____9938) {
          return pred.call(null, cljs.core.first.call(null, s__9937))
        }else {
          return and__3822__auto____9938
        }
      }())) {
        var G__9940 = pred;
        var G__9941 = cljs.core.rest.call(null, s__9937);
        pred = G__9940;
        coll = G__9941;
        continue
      }else {
        return s__9937
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9939.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9944 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9944) {
      var s__9945 = temp__3974__auto____9944;
      return cljs.core.concat.call(null, s__9945, cycle.call(null, s__9945))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9950 = cljs.core.seq.call(null, c1);
      var s2__9951 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9952 = s1__9950;
        if(and__3822__auto____9952) {
          return s2__9951
        }else {
          return and__3822__auto____9952
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__9950), cljs.core.cons.call(null, cljs.core.first.call(null, s2__9951), interleave.call(null, cljs.core.rest.call(null, s1__9950), cljs.core.rest.call(null, s2__9951))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__9954__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__9953 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9953)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__9953), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__9953)))
        }else {
          return null
        }
      }, null)
    };
    var G__9954 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9954__delegate.call(this, c1, c2, colls)
    };
    G__9954.cljs$lang$maxFixedArity = 2;
    G__9954.cljs$lang$applyTo = function(arglist__9955) {
      var c1 = cljs.core.first(arglist__9955);
      var c2 = cljs.core.first(cljs.core.next(arglist__9955));
      var colls = cljs.core.rest(cljs.core.next(arglist__9955));
      return G__9954__delegate(c1, c2, colls)
    };
    G__9954.cljs$lang$arity$variadic = G__9954__delegate;
    return G__9954
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__9965 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____9963 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____9963) {
        var coll__9964 = temp__3971__auto____9963;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__9964), cat.call(null, cljs.core.rest.call(null, coll__9964), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__9965.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__9966__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__9966 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9966__delegate.call(this, f, coll, colls)
    };
    G__9966.cljs$lang$maxFixedArity = 2;
    G__9966.cljs$lang$applyTo = function(arglist__9967) {
      var f = cljs.core.first(arglist__9967);
      var coll = cljs.core.first(cljs.core.next(arglist__9967));
      var colls = cljs.core.rest(cljs.core.next(arglist__9967));
      return G__9966__delegate(f, coll, colls)
    };
    G__9966.cljs$lang$arity$variadic = G__9966__delegate;
    return G__9966
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9977 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9977) {
      var s__9978 = temp__3974__auto____9977;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9978)) {
        var c__9979 = cljs.core.chunk_first.call(null, s__9978);
        var size__9980 = cljs.core.count.call(null, c__9979);
        var b__9981 = cljs.core.chunk_buffer.call(null, size__9980);
        var n__2574__auto____9982 = size__9980;
        var i__9983 = 0;
        while(true) {
          if(i__9983 < n__2574__auto____9982) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__9979, i__9983)))) {
              cljs.core.chunk_append.call(null, b__9981, cljs.core._nth.call(null, c__9979, i__9983))
            }else {
            }
            var G__9986 = i__9983 + 1;
            i__9983 = G__9986;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9981), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__9978)))
      }else {
        var f__9984 = cljs.core.first.call(null, s__9978);
        var r__9985 = cljs.core.rest.call(null, s__9978);
        if(cljs.core.truth_(pred.call(null, f__9984))) {
          return cljs.core.cons.call(null, f__9984, filter.call(null, pred, r__9985))
        }else {
          return filter.call(null, pred, r__9985)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__9989 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__9989.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9987_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9987_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__9993__9994 = to;
    if(G__9993__9994) {
      if(function() {
        var or__3824__auto____9995 = G__9993__9994.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____9995) {
          return or__3824__auto____9995
        }else {
          return G__9993__9994.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__9993__9994.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9993__9994)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9993__9994)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__9996__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__9996 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9996__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9996.cljs$lang$maxFixedArity = 4;
    G__9996.cljs$lang$applyTo = function(arglist__9997) {
      var f = cljs.core.first(arglist__9997);
      var c1 = cljs.core.first(cljs.core.next(arglist__9997));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9997)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9997))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9997))));
      return G__9996__delegate(f, c1, c2, c3, colls)
    };
    G__9996.cljs$lang$arity$variadic = G__9996__delegate;
    return G__9996
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10004 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10004) {
        var s__10005 = temp__3974__auto____10004;
        var p__10006 = cljs.core.take.call(null, n, s__10005);
        if(n === cljs.core.count.call(null, p__10006)) {
          return cljs.core.cons.call(null, p__10006, partition.call(null, n, step, cljs.core.drop.call(null, step, s__10005)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10007 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10007) {
        var s__10008 = temp__3974__auto____10007;
        var p__10009 = cljs.core.take.call(null, n, s__10008);
        if(n === cljs.core.count.call(null, p__10009)) {
          return cljs.core.cons.call(null, p__10009, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__10008)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__10009, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__10014 = cljs.core.lookup_sentinel;
    var m__10015 = m;
    var ks__10016 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__10016) {
        var m__10017 = cljs.core._lookup.call(null, m__10015, cljs.core.first.call(null, ks__10016), sentinel__10014);
        if(sentinel__10014 === m__10017) {
          return not_found
        }else {
          var G__10018 = sentinel__10014;
          var G__10019 = m__10017;
          var G__10020 = cljs.core.next.call(null, ks__10016);
          sentinel__10014 = G__10018;
          m__10015 = G__10019;
          ks__10016 = G__10020;
          continue
        }
      }else {
        return m__10015
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__10021, v) {
  var vec__10026__10027 = p__10021;
  var k__10028 = cljs.core.nth.call(null, vec__10026__10027, 0, null);
  var ks__10029 = cljs.core.nthnext.call(null, vec__10026__10027, 1);
  if(cljs.core.truth_(ks__10029)) {
    return cljs.core.assoc.call(null, m, k__10028, assoc_in.call(null, cljs.core._lookup.call(null, m, k__10028, null), ks__10029, v))
  }else {
    return cljs.core.assoc.call(null, m, k__10028, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__10030, f, args) {
    var vec__10035__10036 = p__10030;
    var k__10037 = cljs.core.nth.call(null, vec__10035__10036, 0, null);
    var ks__10038 = cljs.core.nthnext.call(null, vec__10035__10036, 1);
    if(cljs.core.truth_(ks__10038)) {
      return cljs.core.assoc.call(null, m, k__10037, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__10037, null), ks__10038, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__10037, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__10037, null), args))
    }
  };
  var update_in = function(m, p__10030, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__10030, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__10039) {
    var m = cljs.core.first(arglist__10039);
    var p__10030 = cljs.core.first(cljs.core.next(arglist__10039));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10039)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10039)));
    return update_in__delegate(m, p__10030, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10042 = this;
  var h__2239__auto____10043 = this__10042.__hash;
  if(!(h__2239__auto____10043 == null)) {
    return h__2239__auto____10043
  }else {
    var h__2239__auto____10044 = cljs.core.hash_coll.call(null, coll);
    this__10042.__hash = h__2239__auto____10044;
    return h__2239__auto____10044
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10045 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10046 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10047 = this;
  var new_array__10048 = this__10047.array.slice();
  new_array__10048[k] = v;
  return new cljs.core.Vector(this__10047.meta, new_array__10048, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__10079 = null;
  var G__10079__2 = function(this_sym10049, k) {
    var this__10051 = this;
    var this_sym10049__10052 = this;
    var coll__10053 = this_sym10049__10052;
    return coll__10053.cljs$core$ILookup$_lookup$arity$2(coll__10053, k)
  };
  var G__10079__3 = function(this_sym10050, k, not_found) {
    var this__10051 = this;
    var this_sym10050__10054 = this;
    var coll__10055 = this_sym10050__10054;
    return coll__10055.cljs$core$ILookup$_lookup$arity$3(coll__10055, k, not_found)
  };
  G__10079 = function(this_sym10050, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10079__2.call(this, this_sym10050, k);
      case 3:
        return G__10079__3.call(this, this_sym10050, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10079
}();
cljs.core.Vector.prototype.apply = function(this_sym10040, args10041) {
  var this__10056 = this;
  return this_sym10040.call.apply(this_sym10040, [this_sym10040].concat(args10041.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10057 = this;
  var new_array__10058 = this__10057.array.slice();
  new_array__10058.push(o);
  return new cljs.core.Vector(this__10057.meta, new_array__10058, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__10059 = this;
  var this__10060 = this;
  return cljs.core.pr_str.call(null, this__10060)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__10061 = this;
  return cljs.core.ci_reduce.call(null, this__10061.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__10062 = this;
  return cljs.core.ci_reduce.call(null, this__10062.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10063 = this;
  if(this__10063.array.length > 0) {
    var vector_seq__10064 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__10063.array.length) {
          return cljs.core.cons.call(null, this__10063.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__10064.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10065 = this;
  return this__10065.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10066 = this;
  var count__10067 = this__10066.array.length;
  if(count__10067 > 0) {
    return this__10066.array[count__10067 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10068 = this;
  if(this__10068.array.length > 0) {
    var new_array__10069 = this__10068.array.slice();
    new_array__10069.pop();
    return new cljs.core.Vector(this__10068.meta, new_array__10069, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10070 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10071 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10072 = this;
  return new cljs.core.Vector(meta, this__10072.array, this__10072.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10073 = this;
  return this__10073.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10074 = this;
  if(function() {
    var and__3822__auto____10075 = 0 <= n;
    if(and__3822__auto____10075) {
      return n < this__10074.array.length
    }else {
      return and__3822__auto____10075
    }
  }()) {
    return this__10074.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10076 = this;
  if(function() {
    var and__3822__auto____10077 = 0 <= n;
    if(and__3822__auto____10077) {
      return n < this__10076.array.length
    }else {
      return and__3822__auto____10077
    }
  }()) {
    return this__10076.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10078 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__10078.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2357__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__10081 = pv.cnt;
  if(cnt__10081 < 32) {
    return 0
  }else {
    return cnt__10081 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__10087 = level;
  var ret__10088 = node;
  while(true) {
    if(ll__10087 === 0) {
      return ret__10088
    }else {
      var embed__10089 = ret__10088;
      var r__10090 = cljs.core.pv_fresh_node.call(null, edit);
      var ___10091 = cljs.core.pv_aset.call(null, r__10090, 0, embed__10089);
      var G__10092 = ll__10087 - 5;
      var G__10093 = r__10090;
      ll__10087 = G__10092;
      ret__10088 = G__10093;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__10099 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__10100 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__10099, subidx__10100, tailnode);
    return ret__10099
  }else {
    var child__10101 = cljs.core.pv_aget.call(null, parent, subidx__10100);
    if(!(child__10101 == null)) {
      var node_to_insert__10102 = push_tail.call(null, pv, level - 5, child__10101, tailnode);
      cljs.core.pv_aset.call(null, ret__10099, subidx__10100, node_to_insert__10102);
      return ret__10099
    }else {
      var node_to_insert__10103 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__10099, subidx__10100, node_to_insert__10103);
      return ret__10099
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____10107 = 0 <= i;
    if(and__3822__auto____10107) {
      return i < pv.cnt
    }else {
      return and__3822__auto____10107
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__10108 = pv.root;
      var level__10109 = pv.shift;
      while(true) {
        if(level__10109 > 0) {
          var G__10110 = cljs.core.pv_aget.call(null, node__10108, i >>> level__10109 & 31);
          var G__10111 = level__10109 - 5;
          node__10108 = G__10110;
          level__10109 = G__10111;
          continue
        }else {
          return node__10108.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__10114 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__10114, i & 31, val);
    return ret__10114
  }else {
    var subidx__10115 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__10114, subidx__10115, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__10115), i, val));
    return ret__10114
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__10121 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__10122 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__10121));
    if(function() {
      var and__3822__auto____10123 = new_child__10122 == null;
      if(and__3822__auto____10123) {
        return subidx__10121 === 0
      }else {
        return and__3822__auto____10123
      }
    }()) {
      return null
    }else {
      var ret__10124 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__10124, subidx__10121, new_child__10122);
      return ret__10124
    }
  }else {
    if(subidx__10121 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__10125 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__10125, subidx__10121, null);
        return ret__10125
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10128 = this;
  return new cljs.core.TransientVector(this__10128.cnt, this__10128.shift, cljs.core.tv_editable_root.call(null, this__10128.root), cljs.core.tv_editable_tail.call(null, this__10128.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10129 = this;
  var h__2239__auto____10130 = this__10129.__hash;
  if(!(h__2239__auto____10130 == null)) {
    return h__2239__auto____10130
  }else {
    var h__2239__auto____10131 = cljs.core.hash_coll.call(null, coll);
    this__10129.__hash = h__2239__auto____10131;
    return h__2239__auto____10131
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10132 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10133 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10134 = this;
  if(function() {
    var and__3822__auto____10135 = 0 <= k;
    if(and__3822__auto____10135) {
      return k < this__10134.cnt
    }else {
      return and__3822__auto____10135
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__10136 = this__10134.tail.slice();
      new_tail__10136[k & 31] = v;
      return new cljs.core.PersistentVector(this__10134.meta, this__10134.cnt, this__10134.shift, this__10134.root, new_tail__10136, null)
    }else {
      return new cljs.core.PersistentVector(this__10134.meta, this__10134.cnt, this__10134.shift, cljs.core.do_assoc.call(null, coll, this__10134.shift, this__10134.root, k, v), this__10134.tail, null)
    }
  }else {
    if(k === this__10134.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__10134.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10184 = null;
  var G__10184__2 = function(this_sym10137, k) {
    var this__10139 = this;
    var this_sym10137__10140 = this;
    var coll__10141 = this_sym10137__10140;
    return coll__10141.cljs$core$ILookup$_lookup$arity$2(coll__10141, k)
  };
  var G__10184__3 = function(this_sym10138, k, not_found) {
    var this__10139 = this;
    var this_sym10138__10142 = this;
    var coll__10143 = this_sym10138__10142;
    return coll__10143.cljs$core$ILookup$_lookup$arity$3(coll__10143, k, not_found)
  };
  G__10184 = function(this_sym10138, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10184__2.call(this, this_sym10138, k);
      case 3:
        return G__10184__3.call(this, this_sym10138, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10184
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym10126, args10127) {
  var this__10144 = this;
  return this_sym10126.call.apply(this_sym10126, [this_sym10126].concat(args10127.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__10145 = this;
  var step_init__10146 = [0, init];
  var i__10147 = 0;
  while(true) {
    if(i__10147 < this__10145.cnt) {
      var arr__10148 = cljs.core.array_for.call(null, v, i__10147);
      var len__10149 = arr__10148.length;
      var init__10153 = function() {
        var j__10150 = 0;
        var init__10151 = step_init__10146[1];
        while(true) {
          if(j__10150 < len__10149) {
            var init__10152 = f.call(null, init__10151, j__10150 + i__10147, arr__10148[j__10150]);
            if(cljs.core.reduced_QMARK_.call(null, init__10152)) {
              return init__10152
            }else {
              var G__10185 = j__10150 + 1;
              var G__10186 = init__10152;
              j__10150 = G__10185;
              init__10151 = G__10186;
              continue
            }
          }else {
            step_init__10146[0] = len__10149;
            step_init__10146[1] = init__10151;
            return init__10151
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10153)) {
        return cljs.core.deref.call(null, init__10153)
      }else {
        var G__10187 = i__10147 + step_init__10146[0];
        i__10147 = G__10187;
        continue
      }
    }else {
      return step_init__10146[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10154 = this;
  if(this__10154.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__10155 = this__10154.tail.slice();
    new_tail__10155.push(o);
    return new cljs.core.PersistentVector(this__10154.meta, this__10154.cnt + 1, this__10154.shift, this__10154.root, new_tail__10155, null)
  }else {
    var root_overflow_QMARK___10156 = this__10154.cnt >>> 5 > 1 << this__10154.shift;
    var new_shift__10157 = root_overflow_QMARK___10156 ? this__10154.shift + 5 : this__10154.shift;
    var new_root__10159 = root_overflow_QMARK___10156 ? function() {
      var n_r__10158 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__10158, 0, this__10154.root);
      cljs.core.pv_aset.call(null, n_r__10158, 1, cljs.core.new_path.call(null, null, this__10154.shift, new cljs.core.VectorNode(null, this__10154.tail)));
      return n_r__10158
    }() : cljs.core.push_tail.call(null, coll, this__10154.shift, this__10154.root, new cljs.core.VectorNode(null, this__10154.tail));
    return new cljs.core.PersistentVector(this__10154.meta, this__10154.cnt + 1, new_shift__10157, new_root__10159, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10160 = this;
  if(this__10160.cnt > 0) {
    return new cljs.core.RSeq(coll, this__10160.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__10161 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__10162 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__10163 = this;
  var this__10164 = this;
  return cljs.core.pr_str.call(null, this__10164)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__10165 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__10166 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10167 = this;
  if(this__10167.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10168 = this;
  return this__10168.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10169 = this;
  if(this__10169.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__10169.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10170 = this;
  if(this__10170.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__10170.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10170.meta)
    }else {
      if(1 < this__10170.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__10170.meta, this__10170.cnt - 1, this__10170.shift, this__10170.root, this__10170.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__10171 = cljs.core.array_for.call(null, coll, this__10170.cnt - 2);
          var nr__10172 = cljs.core.pop_tail.call(null, coll, this__10170.shift, this__10170.root);
          var new_root__10173 = nr__10172 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__10172;
          var cnt_1__10174 = this__10170.cnt - 1;
          if(function() {
            var and__3822__auto____10175 = 5 < this__10170.shift;
            if(and__3822__auto____10175) {
              return cljs.core.pv_aget.call(null, new_root__10173, 1) == null
            }else {
              return and__3822__auto____10175
            }
          }()) {
            return new cljs.core.PersistentVector(this__10170.meta, cnt_1__10174, this__10170.shift - 5, cljs.core.pv_aget.call(null, new_root__10173, 0), new_tail__10171, null)
          }else {
            return new cljs.core.PersistentVector(this__10170.meta, cnt_1__10174, this__10170.shift, new_root__10173, new_tail__10171, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10176 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10177 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10178 = this;
  return new cljs.core.PersistentVector(meta, this__10178.cnt, this__10178.shift, this__10178.root, this__10178.tail, this__10178.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10179 = this;
  return this__10179.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10180 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10181 = this;
  if(function() {
    var and__3822__auto____10182 = 0 <= n;
    if(and__3822__auto____10182) {
      return n < this__10181.cnt
    }else {
      return and__3822__auto____10182
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10183 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10183.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__10188 = xs.length;
  var xs__10189 = no_clone === true ? xs : xs.slice();
  if(l__10188 < 32) {
    return new cljs.core.PersistentVector(null, l__10188, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__10189, null)
  }else {
    var node__10190 = xs__10189.slice(0, 32);
    var v__10191 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__10190, null);
    var i__10192 = 32;
    var out__10193 = cljs.core._as_transient.call(null, v__10191);
    while(true) {
      if(i__10192 < l__10188) {
        var G__10194 = i__10192 + 1;
        var G__10195 = cljs.core.conj_BANG_.call(null, out__10193, xs__10189[i__10192]);
        i__10192 = G__10194;
        out__10193 = G__10195;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10193)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__10196) {
    var args = cljs.core.seq(arglist__10196);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10197 = this;
  if(this__10197.off + 1 < this__10197.node.length) {
    var s__10198 = cljs.core.chunked_seq.call(null, this__10197.vec, this__10197.node, this__10197.i, this__10197.off + 1);
    if(s__10198 == null) {
      return null
    }else {
      return s__10198
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10199 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10200 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10201 = this;
  return this__10201.node[this__10201.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10202 = this;
  if(this__10202.off + 1 < this__10202.node.length) {
    var s__10203 = cljs.core.chunked_seq.call(null, this__10202.vec, this__10202.node, this__10202.i, this__10202.off + 1);
    if(s__10203 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__10203
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__10204 = this;
  var l__10205 = this__10204.node.length;
  var s__10206 = this__10204.i + l__10205 < cljs.core._count.call(null, this__10204.vec) ? cljs.core.chunked_seq.call(null, this__10204.vec, this__10204.i + l__10205, 0) : null;
  if(s__10206 == null) {
    return null
  }else {
    return s__10206
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10207 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__10208 = this;
  return cljs.core.chunked_seq.call(null, this__10208.vec, this__10208.node, this__10208.i, this__10208.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__10209 = this;
  return this__10209.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10210 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10210.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__10211 = this;
  return cljs.core.array_chunk.call(null, this__10211.node, this__10211.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__10212 = this;
  var l__10213 = this__10212.node.length;
  var s__10214 = this__10212.i + l__10213 < cljs.core._count.call(null, this__10212.vec) ? cljs.core.chunked_seq.call(null, this__10212.vec, this__10212.i + l__10213, 0) : null;
  if(s__10214 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__10214
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10217 = this;
  var h__2239__auto____10218 = this__10217.__hash;
  if(!(h__2239__auto____10218 == null)) {
    return h__2239__auto____10218
  }else {
    var h__2239__auto____10219 = cljs.core.hash_coll.call(null, coll);
    this__10217.__hash = h__2239__auto____10219;
    return h__2239__auto____10219
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10220 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10221 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__10222 = this;
  var v_pos__10223 = this__10222.start + key;
  return new cljs.core.Subvec(this__10222.meta, cljs.core._assoc.call(null, this__10222.v, v_pos__10223, val), this__10222.start, this__10222.end > v_pos__10223 + 1 ? this__10222.end : v_pos__10223 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__10249 = null;
  var G__10249__2 = function(this_sym10224, k) {
    var this__10226 = this;
    var this_sym10224__10227 = this;
    var coll__10228 = this_sym10224__10227;
    return coll__10228.cljs$core$ILookup$_lookup$arity$2(coll__10228, k)
  };
  var G__10249__3 = function(this_sym10225, k, not_found) {
    var this__10226 = this;
    var this_sym10225__10229 = this;
    var coll__10230 = this_sym10225__10229;
    return coll__10230.cljs$core$ILookup$_lookup$arity$3(coll__10230, k, not_found)
  };
  G__10249 = function(this_sym10225, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10249__2.call(this, this_sym10225, k);
      case 3:
        return G__10249__3.call(this, this_sym10225, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10249
}();
cljs.core.Subvec.prototype.apply = function(this_sym10215, args10216) {
  var this__10231 = this;
  return this_sym10215.call.apply(this_sym10215, [this_sym10215].concat(args10216.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10232 = this;
  return new cljs.core.Subvec(this__10232.meta, cljs.core._assoc_n.call(null, this__10232.v, this__10232.end, o), this__10232.start, this__10232.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__10233 = this;
  var this__10234 = this;
  return cljs.core.pr_str.call(null, this__10234)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__10235 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__10236 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10237 = this;
  var subvec_seq__10238 = function subvec_seq(i) {
    if(i === this__10237.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__10237.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__10238.call(null, this__10237.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10239 = this;
  return this__10239.end - this__10239.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10240 = this;
  return cljs.core._nth.call(null, this__10240.v, this__10240.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10241 = this;
  if(this__10241.start === this__10241.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__10241.meta, this__10241.v, this__10241.start, this__10241.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10242 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10243 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10244 = this;
  return new cljs.core.Subvec(meta, this__10244.v, this__10244.start, this__10244.end, this__10244.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10245 = this;
  return this__10245.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10246 = this;
  return cljs.core._nth.call(null, this__10246.v, this__10246.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10247 = this;
  return cljs.core._nth.call(null, this__10247.v, this__10247.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10248 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__10248.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__10251 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__10251, 0, tl.length);
  return ret__10251
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__10255 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__10256 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__10255, subidx__10256, level === 5 ? tail_node : function() {
    var child__10257 = cljs.core.pv_aget.call(null, ret__10255, subidx__10256);
    if(!(child__10257 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__10257, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__10255
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__10262 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__10263 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__10264 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__10262, subidx__10263));
    if(function() {
      var and__3822__auto____10265 = new_child__10264 == null;
      if(and__3822__auto____10265) {
        return subidx__10263 === 0
      }else {
        return and__3822__auto____10265
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__10262, subidx__10263, new_child__10264);
      return node__10262
    }
  }else {
    if(subidx__10263 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__10262, subidx__10263, null);
        return node__10262
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____10270 = 0 <= i;
    if(and__3822__auto____10270) {
      return i < tv.cnt
    }else {
      return and__3822__auto____10270
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__10271 = tv.root;
      var node__10272 = root__10271;
      var level__10273 = tv.shift;
      while(true) {
        if(level__10273 > 0) {
          var G__10274 = cljs.core.tv_ensure_editable.call(null, root__10271.edit, cljs.core.pv_aget.call(null, node__10272, i >>> level__10273 & 31));
          var G__10275 = level__10273 - 5;
          node__10272 = G__10274;
          level__10273 = G__10275;
          continue
        }else {
          return node__10272.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10315 = null;
  var G__10315__2 = function(this_sym10278, k) {
    var this__10280 = this;
    var this_sym10278__10281 = this;
    var coll__10282 = this_sym10278__10281;
    return coll__10282.cljs$core$ILookup$_lookup$arity$2(coll__10282, k)
  };
  var G__10315__3 = function(this_sym10279, k, not_found) {
    var this__10280 = this;
    var this_sym10279__10283 = this;
    var coll__10284 = this_sym10279__10283;
    return coll__10284.cljs$core$ILookup$_lookup$arity$3(coll__10284, k, not_found)
  };
  G__10315 = function(this_sym10279, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10315__2.call(this, this_sym10279, k);
      case 3:
        return G__10315__3.call(this, this_sym10279, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10315
}();
cljs.core.TransientVector.prototype.apply = function(this_sym10276, args10277) {
  var this__10285 = this;
  return this_sym10276.call.apply(this_sym10276, [this_sym10276].concat(args10277.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10286 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10287 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10288 = this;
  if(this__10288.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10289 = this;
  if(function() {
    var and__3822__auto____10290 = 0 <= n;
    if(and__3822__auto____10290) {
      return n < this__10289.cnt
    }else {
      return and__3822__auto____10290
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10291 = this;
  if(this__10291.root.edit) {
    return this__10291.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__10292 = this;
  if(this__10292.root.edit) {
    if(function() {
      var and__3822__auto____10293 = 0 <= n;
      if(and__3822__auto____10293) {
        return n < this__10292.cnt
      }else {
        return and__3822__auto____10293
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__10292.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__10298 = function go(level, node) {
          var node__10296 = cljs.core.tv_ensure_editable.call(null, this__10292.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__10296, n & 31, val);
            return node__10296
          }else {
            var subidx__10297 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__10296, subidx__10297, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__10296, subidx__10297)));
            return node__10296
          }
        }.call(null, this__10292.shift, this__10292.root);
        this__10292.root = new_root__10298;
        return tcoll
      }
    }else {
      if(n === this__10292.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__10292.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__10299 = this;
  if(this__10299.root.edit) {
    if(this__10299.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__10299.cnt) {
        this__10299.cnt = 0;
        return tcoll
      }else {
        if((this__10299.cnt - 1 & 31) > 0) {
          this__10299.cnt = this__10299.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__10300 = cljs.core.editable_array_for.call(null, tcoll, this__10299.cnt - 2);
            var new_root__10302 = function() {
              var nr__10301 = cljs.core.tv_pop_tail.call(null, tcoll, this__10299.shift, this__10299.root);
              if(!(nr__10301 == null)) {
                return nr__10301
              }else {
                return new cljs.core.VectorNode(this__10299.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____10303 = 5 < this__10299.shift;
              if(and__3822__auto____10303) {
                return cljs.core.pv_aget.call(null, new_root__10302, 1) == null
              }else {
                return and__3822__auto____10303
              }
            }()) {
              var new_root__10304 = cljs.core.tv_ensure_editable.call(null, this__10299.root.edit, cljs.core.pv_aget.call(null, new_root__10302, 0));
              this__10299.root = new_root__10304;
              this__10299.shift = this__10299.shift - 5;
              this__10299.cnt = this__10299.cnt - 1;
              this__10299.tail = new_tail__10300;
              return tcoll
            }else {
              this__10299.root = new_root__10302;
              this__10299.cnt = this__10299.cnt - 1;
              this__10299.tail = new_tail__10300;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10305 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10306 = this;
  if(this__10306.root.edit) {
    if(this__10306.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__10306.tail[this__10306.cnt & 31] = o;
      this__10306.cnt = this__10306.cnt + 1;
      return tcoll
    }else {
      var tail_node__10307 = new cljs.core.VectorNode(this__10306.root.edit, this__10306.tail);
      var new_tail__10308 = cljs.core.make_array.call(null, 32);
      new_tail__10308[0] = o;
      this__10306.tail = new_tail__10308;
      if(this__10306.cnt >>> 5 > 1 << this__10306.shift) {
        var new_root_array__10309 = cljs.core.make_array.call(null, 32);
        var new_shift__10310 = this__10306.shift + 5;
        new_root_array__10309[0] = this__10306.root;
        new_root_array__10309[1] = cljs.core.new_path.call(null, this__10306.root.edit, this__10306.shift, tail_node__10307);
        this__10306.root = new cljs.core.VectorNode(this__10306.root.edit, new_root_array__10309);
        this__10306.shift = new_shift__10310;
        this__10306.cnt = this__10306.cnt + 1;
        return tcoll
      }else {
        var new_root__10311 = cljs.core.tv_push_tail.call(null, tcoll, this__10306.shift, this__10306.root, tail_node__10307);
        this__10306.root = new_root__10311;
        this__10306.cnt = this__10306.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10312 = this;
  if(this__10312.root.edit) {
    this__10312.root.edit = null;
    var len__10313 = this__10312.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__10314 = cljs.core.make_array.call(null, len__10313);
    cljs.core.array_copy.call(null, this__10312.tail, 0, trimmed_tail__10314, 0, len__10313);
    return new cljs.core.PersistentVector(null, this__10312.cnt, this__10312.shift, this__10312.root, trimmed_tail__10314, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10316 = this;
  var h__2239__auto____10317 = this__10316.__hash;
  if(!(h__2239__auto____10317 == null)) {
    return h__2239__auto____10317
  }else {
    var h__2239__auto____10318 = cljs.core.hash_coll.call(null, coll);
    this__10316.__hash = h__2239__auto____10318;
    return h__2239__auto____10318
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10319 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__10320 = this;
  var this__10321 = this;
  return cljs.core.pr_str.call(null, this__10321)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10322 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10323 = this;
  return cljs.core._first.call(null, this__10323.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10324 = this;
  var temp__3971__auto____10325 = cljs.core.next.call(null, this__10324.front);
  if(temp__3971__auto____10325) {
    var f1__10326 = temp__3971__auto____10325;
    return new cljs.core.PersistentQueueSeq(this__10324.meta, f1__10326, this__10324.rear, null)
  }else {
    if(this__10324.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__10324.meta, this__10324.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10327 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10328 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__10328.front, this__10328.rear, this__10328.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10329 = this;
  return this__10329.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10330 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10330.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10331 = this;
  var h__2239__auto____10332 = this__10331.__hash;
  if(!(h__2239__auto____10332 == null)) {
    return h__2239__auto____10332
  }else {
    var h__2239__auto____10333 = cljs.core.hash_coll.call(null, coll);
    this__10331.__hash = h__2239__auto____10333;
    return h__2239__auto____10333
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10334 = this;
  if(cljs.core.truth_(this__10334.front)) {
    return new cljs.core.PersistentQueue(this__10334.meta, this__10334.count + 1, this__10334.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____10335 = this__10334.rear;
      if(cljs.core.truth_(or__3824__auto____10335)) {
        return or__3824__auto____10335
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__10334.meta, this__10334.count + 1, cljs.core.conj.call(null, this__10334.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__10336 = this;
  var this__10337 = this;
  return cljs.core.pr_str.call(null, this__10337)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10338 = this;
  var rear__10339 = cljs.core.seq.call(null, this__10338.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____10340 = this__10338.front;
    if(cljs.core.truth_(or__3824__auto____10340)) {
      return or__3824__auto____10340
    }else {
      return rear__10339
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__10338.front, cljs.core.seq.call(null, rear__10339), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10341 = this;
  return this__10341.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10342 = this;
  return cljs.core._first.call(null, this__10342.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10343 = this;
  if(cljs.core.truth_(this__10343.front)) {
    var temp__3971__auto____10344 = cljs.core.next.call(null, this__10343.front);
    if(temp__3971__auto____10344) {
      var f1__10345 = temp__3971__auto____10344;
      return new cljs.core.PersistentQueue(this__10343.meta, this__10343.count - 1, f1__10345, this__10343.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__10343.meta, this__10343.count - 1, cljs.core.seq.call(null, this__10343.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10346 = this;
  return cljs.core.first.call(null, this__10346.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10347 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10348 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10349 = this;
  return new cljs.core.PersistentQueue(meta, this__10349.count, this__10349.front, this__10349.rear, this__10349.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10350 = this;
  return this__10350.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10351 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10352 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__10355 = array.length;
  var i__10356 = 0;
  while(true) {
    if(i__10356 < len__10355) {
      if(k === array[i__10356]) {
        return i__10356
      }else {
        var G__10357 = i__10356 + incr;
        i__10356 = G__10357;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__10360 = cljs.core.hash.call(null, a);
  var b__10361 = cljs.core.hash.call(null, b);
  if(a__10360 < b__10361) {
    return-1
  }else {
    if(a__10360 > b__10361) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__10369 = m.keys;
  var len__10370 = ks__10369.length;
  var so__10371 = m.strobj;
  var out__10372 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__10373 = 0;
  var out__10374 = cljs.core.transient$.call(null, out__10372);
  while(true) {
    if(i__10373 < len__10370) {
      var k__10375 = ks__10369[i__10373];
      var G__10376 = i__10373 + 1;
      var G__10377 = cljs.core.assoc_BANG_.call(null, out__10374, k__10375, so__10371[k__10375]);
      i__10373 = G__10376;
      out__10374 = G__10377;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__10374, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__10383 = {};
  var l__10384 = ks.length;
  var i__10385 = 0;
  while(true) {
    if(i__10385 < l__10384) {
      var k__10386 = ks[i__10385];
      new_obj__10383[k__10386] = obj[k__10386];
      var G__10387 = i__10385 + 1;
      i__10385 = G__10387;
      continue
    }else {
    }
    break
  }
  return new_obj__10383
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10390 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10391 = this;
  var h__2239__auto____10392 = this__10391.__hash;
  if(!(h__2239__auto____10392 == null)) {
    return h__2239__auto____10392
  }else {
    var h__2239__auto____10393 = cljs.core.hash_imap.call(null, coll);
    this__10391.__hash = h__2239__auto____10393;
    return h__2239__auto____10393
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10394 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10395 = this;
  if(function() {
    var and__3822__auto____10396 = goog.isString(k);
    if(and__3822__auto____10396) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10395.keys) == null)
    }else {
      return and__3822__auto____10396
    }
  }()) {
    return this__10395.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10397 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____10398 = this__10397.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____10398) {
        return or__3824__auto____10398
      }else {
        return this__10397.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__10397.keys) == null)) {
        var new_strobj__10399 = cljs.core.obj_clone.call(null, this__10397.strobj, this__10397.keys);
        new_strobj__10399[k] = v;
        return new cljs.core.ObjMap(this__10397.meta, this__10397.keys, new_strobj__10399, this__10397.update_count + 1, null)
      }else {
        var new_strobj__10400 = cljs.core.obj_clone.call(null, this__10397.strobj, this__10397.keys);
        var new_keys__10401 = this__10397.keys.slice();
        new_strobj__10400[k] = v;
        new_keys__10401.push(k);
        return new cljs.core.ObjMap(this__10397.meta, new_keys__10401, new_strobj__10400, this__10397.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10402 = this;
  if(function() {
    var and__3822__auto____10403 = goog.isString(k);
    if(and__3822__auto____10403) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10402.keys) == null)
    }else {
      return and__3822__auto____10403
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10425 = null;
  var G__10425__2 = function(this_sym10404, k) {
    var this__10406 = this;
    var this_sym10404__10407 = this;
    var coll__10408 = this_sym10404__10407;
    return coll__10408.cljs$core$ILookup$_lookup$arity$2(coll__10408, k)
  };
  var G__10425__3 = function(this_sym10405, k, not_found) {
    var this__10406 = this;
    var this_sym10405__10409 = this;
    var coll__10410 = this_sym10405__10409;
    return coll__10410.cljs$core$ILookup$_lookup$arity$3(coll__10410, k, not_found)
  };
  G__10425 = function(this_sym10405, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10425__2.call(this, this_sym10405, k);
      case 3:
        return G__10425__3.call(this, this_sym10405, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10425
}();
cljs.core.ObjMap.prototype.apply = function(this_sym10388, args10389) {
  var this__10411 = this;
  return this_sym10388.call.apply(this_sym10388, [this_sym10388].concat(args10389.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10412 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__10413 = this;
  var this__10414 = this;
  return cljs.core.pr_str.call(null, this__10414)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10415 = this;
  if(this__10415.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__10378_SHARP_) {
      return cljs.core.vector.call(null, p1__10378_SHARP_, this__10415.strobj[p1__10378_SHARP_])
    }, this__10415.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10416 = this;
  return this__10416.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10417 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10418 = this;
  return new cljs.core.ObjMap(meta, this__10418.keys, this__10418.strobj, this__10418.update_count, this__10418.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10419 = this;
  return this__10419.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10420 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__10420.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10421 = this;
  if(function() {
    var and__3822__auto____10422 = goog.isString(k);
    if(and__3822__auto____10422) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10421.keys) == null)
    }else {
      return and__3822__auto____10422
    }
  }()) {
    var new_keys__10423 = this__10421.keys.slice();
    var new_strobj__10424 = cljs.core.obj_clone.call(null, this__10421.strobj, this__10421.keys);
    new_keys__10423.splice(cljs.core.scan_array.call(null, 1, k, new_keys__10423), 1);
    cljs.core.js_delete.call(null, new_strobj__10424, k);
    return new cljs.core.ObjMap(this__10421.meta, new_keys__10423, new_strobj__10424, this__10421.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10429 = this;
  var h__2239__auto____10430 = this__10429.__hash;
  if(!(h__2239__auto____10430 == null)) {
    return h__2239__auto____10430
  }else {
    var h__2239__auto____10431 = cljs.core.hash_imap.call(null, coll);
    this__10429.__hash = h__2239__auto____10431;
    return h__2239__auto____10431
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10432 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10433 = this;
  var bucket__10434 = this__10433.hashobj[cljs.core.hash.call(null, k)];
  var i__10435 = cljs.core.truth_(bucket__10434) ? cljs.core.scan_array.call(null, 2, k, bucket__10434) : null;
  if(cljs.core.truth_(i__10435)) {
    return bucket__10434[i__10435 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10436 = this;
  var h__10437 = cljs.core.hash.call(null, k);
  var bucket__10438 = this__10436.hashobj[h__10437];
  if(cljs.core.truth_(bucket__10438)) {
    var new_bucket__10439 = bucket__10438.slice();
    var new_hashobj__10440 = goog.object.clone(this__10436.hashobj);
    new_hashobj__10440[h__10437] = new_bucket__10439;
    var temp__3971__auto____10441 = cljs.core.scan_array.call(null, 2, k, new_bucket__10439);
    if(cljs.core.truth_(temp__3971__auto____10441)) {
      var i__10442 = temp__3971__auto____10441;
      new_bucket__10439[i__10442 + 1] = v;
      return new cljs.core.HashMap(this__10436.meta, this__10436.count, new_hashobj__10440, null)
    }else {
      new_bucket__10439.push(k, v);
      return new cljs.core.HashMap(this__10436.meta, this__10436.count + 1, new_hashobj__10440, null)
    }
  }else {
    var new_hashobj__10443 = goog.object.clone(this__10436.hashobj);
    new_hashobj__10443[h__10437] = [k, v];
    return new cljs.core.HashMap(this__10436.meta, this__10436.count + 1, new_hashobj__10443, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10444 = this;
  var bucket__10445 = this__10444.hashobj[cljs.core.hash.call(null, k)];
  var i__10446 = cljs.core.truth_(bucket__10445) ? cljs.core.scan_array.call(null, 2, k, bucket__10445) : null;
  if(cljs.core.truth_(i__10446)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__10471 = null;
  var G__10471__2 = function(this_sym10447, k) {
    var this__10449 = this;
    var this_sym10447__10450 = this;
    var coll__10451 = this_sym10447__10450;
    return coll__10451.cljs$core$ILookup$_lookup$arity$2(coll__10451, k)
  };
  var G__10471__3 = function(this_sym10448, k, not_found) {
    var this__10449 = this;
    var this_sym10448__10452 = this;
    var coll__10453 = this_sym10448__10452;
    return coll__10453.cljs$core$ILookup$_lookup$arity$3(coll__10453, k, not_found)
  };
  G__10471 = function(this_sym10448, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10471__2.call(this, this_sym10448, k);
      case 3:
        return G__10471__3.call(this, this_sym10448, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10471
}();
cljs.core.HashMap.prototype.apply = function(this_sym10427, args10428) {
  var this__10454 = this;
  return this_sym10427.call.apply(this_sym10427, [this_sym10427].concat(args10428.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10455 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__10456 = this;
  var this__10457 = this;
  return cljs.core.pr_str.call(null, this__10457)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10458 = this;
  if(this__10458.count > 0) {
    var hashes__10459 = cljs.core.js_keys.call(null, this__10458.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__10426_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__10458.hashobj[p1__10426_SHARP_]))
    }, hashes__10459)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10460 = this;
  return this__10460.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10461 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10462 = this;
  return new cljs.core.HashMap(meta, this__10462.count, this__10462.hashobj, this__10462.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10463 = this;
  return this__10463.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10464 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__10464.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10465 = this;
  var h__10466 = cljs.core.hash.call(null, k);
  var bucket__10467 = this__10465.hashobj[h__10466];
  var i__10468 = cljs.core.truth_(bucket__10467) ? cljs.core.scan_array.call(null, 2, k, bucket__10467) : null;
  if(cljs.core.not.call(null, i__10468)) {
    return coll
  }else {
    var new_hashobj__10469 = goog.object.clone(this__10465.hashobj);
    if(3 > bucket__10467.length) {
      cljs.core.js_delete.call(null, new_hashobj__10469, h__10466)
    }else {
      var new_bucket__10470 = bucket__10467.slice();
      new_bucket__10470.splice(i__10468, 2);
      new_hashobj__10469[h__10466] = new_bucket__10470
    }
    return new cljs.core.HashMap(this__10465.meta, this__10465.count - 1, new_hashobj__10469, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__10472 = ks.length;
  var i__10473 = 0;
  var out__10474 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__10473 < len__10472) {
      var G__10475 = i__10473 + 1;
      var G__10476 = cljs.core.assoc.call(null, out__10474, ks[i__10473], vs[i__10473]);
      i__10473 = G__10475;
      out__10474 = G__10476;
      continue
    }else {
      return out__10474
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__10480 = m.arr;
  var len__10481 = arr__10480.length;
  var i__10482 = 0;
  while(true) {
    if(len__10481 <= i__10482) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__10480[i__10482], k)) {
        return i__10482
      }else {
        if("\ufdd0'else") {
          var G__10483 = i__10482 + 2;
          i__10482 = G__10483;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10486 = this;
  return new cljs.core.TransientArrayMap({}, this__10486.arr.length, this__10486.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10487 = this;
  var h__2239__auto____10488 = this__10487.__hash;
  if(!(h__2239__auto____10488 == null)) {
    return h__2239__auto____10488
  }else {
    var h__2239__auto____10489 = cljs.core.hash_imap.call(null, coll);
    this__10487.__hash = h__2239__auto____10489;
    return h__2239__auto____10489
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10490 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10491 = this;
  var idx__10492 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10492 === -1) {
    return not_found
  }else {
    return this__10491.arr[idx__10492 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10493 = this;
  var idx__10494 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10494 === -1) {
    if(this__10493.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__10493.meta, this__10493.cnt + 1, function() {
        var G__10495__10496 = this__10493.arr.slice();
        G__10495__10496.push(k);
        G__10495__10496.push(v);
        return G__10495__10496
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__10493.arr[idx__10494 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__10493.meta, this__10493.cnt, function() {
          var G__10497__10498 = this__10493.arr.slice();
          G__10497__10498[idx__10494 + 1] = v;
          return G__10497__10498
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10499 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10531 = null;
  var G__10531__2 = function(this_sym10500, k) {
    var this__10502 = this;
    var this_sym10500__10503 = this;
    var coll__10504 = this_sym10500__10503;
    return coll__10504.cljs$core$ILookup$_lookup$arity$2(coll__10504, k)
  };
  var G__10531__3 = function(this_sym10501, k, not_found) {
    var this__10502 = this;
    var this_sym10501__10505 = this;
    var coll__10506 = this_sym10501__10505;
    return coll__10506.cljs$core$ILookup$_lookup$arity$3(coll__10506, k, not_found)
  };
  G__10531 = function(this_sym10501, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10531__2.call(this, this_sym10501, k);
      case 3:
        return G__10531__3.call(this, this_sym10501, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10531
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym10484, args10485) {
  var this__10507 = this;
  return this_sym10484.call.apply(this_sym10484, [this_sym10484].concat(args10485.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10508 = this;
  var len__10509 = this__10508.arr.length;
  var i__10510 = 0;
  var init__10511 = init;
  while(true) {
    if(i__10510 < len__10509) {
      var init__10512 = f.call(null, init__10511, this__10508.arr[i__10510], this__10508.arr[i__10510 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__10512)) {
        return cljs.core.deref.call(null, init__10512)
      }else {
        var G__10532 = i__10510 + 2;
        var G__10533 = init__10512;
        i__10510 = G__10532;
        init__10511 = G__10533;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10513 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__10514 = this;
  var this__10515 = this;
  return cljs.core.pr_str.call(null, this__10515)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10516 = this;
  if(this__10516.cnt > 0) {
    var len__10517 = this__10516.arr.length;
    var array_map_seq__10518 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__10517) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__10516.arr[i], this__10516.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__10518.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10519 = this;
  return this__10519.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10520 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10521 = this;
  return new cljs.core.PersistentArrayMap(meta, this__10521.cnt, this__10521.arr, this__10521.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10522 = this;
  return this__10522.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10523 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10523.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10524 = this;
  var idx__10525 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10525 >= 0) {
    var len__10526 = this__10524.arr.length;
    var new_len__10527 = len__10526 - 2;
    if(new_len__10527 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__10528 = cljs.core.make_array.call(null, new_len__10527);
      var s__10529 = 0;
      var d__10530 = 0;
      while(true) {
        if(s__10529 >= len__10526) {
          return new cljs.core.PersistentArrayMap(this__10524.meta, this__10524.cnt - 1, new_arr__10528, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__10524.arr[s__10529])) {
            var G__10534 = s__10529 + 2;
            var G__10535 = d__10530;
            s__10529 = G__10534;
            d__10530 = G__10535;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__10528[d__10530] = this__10524.arr[s__10529];
              new_arr__10528[d__10530 + 1] = this__10524.arr[s__10529 + 1];
              var G__10536 = s__10529 + 2;
              var G__10537 = d__10530 + 2;
              s__10529 = G__10536;
              d__10530 = G__10537;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__10538 = cljs.core.count.call(null, ks);
  var i__10539 = 0;
  var out__10540 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__10539 < len__10538) {
      var G__10541 = i__10539 + 1;
      var G__10542 = cljs.core.assoc_BANG_.call(null, out__10540, ks[i__10539], vs[i__10539]);
      i__10539 = G__10541;
      out__10540 = G__10542;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10540)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10543 = this;
  if(cljs.core.truth_(this__10543.editable_QMARK_)) {
    var idx__10544 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10544 >= 0) {
      this__10543.arr[idx__10544] = this__10543.arr[this__10543.len - 2];
      this__10543.arr[idx__10544 + 1] = this__10543.arr[this__10543.len - 1];
      var G__10545__10546 = this__10543.arr;
      G__10545__10546.pop();
      G__10545__10546.pop();
      G__10545__10546;
      this__10543.len = this__10543.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10547 = this;
  if(cljs.core.truth_(this__10547.editable_QMARK_)) {
    var idx__10548 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10548 === -1) {
      if(this__10547.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__10547.len = this__10547.len + 2;
        this__10547.arr.push(key);
        this__10547.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__10547.len, this__10547.arr), key, val)
      }
    }else {
      if(val === this__10547.arr[idx__10548 + 1]) {
        return tcoll
      }else {
        this__10547.arr[idx__10548 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10549 = this;
  if(cljs.core.truth_(this__10549.editable_QMARK_)) {
    if(function() {
      var G__10550__10551 = o;
      if(G__10550__10551) {
        if(function() {
          var or__3824__auto____10552 = G__10550__10551.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10552) {
            return or__3824__auto____10552
          }else {
            return G__10550__10551.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10550__10551.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10550__10551)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10550__10551)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10553 = cljs.core.seq.call(null, o);
      var tcoll__10554 = tcoll;
      while(true) {
        var temp__3971__auto____10555 = cljs.core.first.call(null, es__10553);
        if(cljs.core.truth_(temp__3971__auto____10555)) {
          var e__10556 = temp__3971__auto____10555;
          var G__10562 = cljs.core.next.call(null, es__10553);
          var G__10563 = tcoll__10554.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__10554, cljs.core.key.call(null, e__10556), cljs.core.val.call(null, e__10556));
          es__10553 = G__10562;
          tcoll__10554 = G__10563;
          continue
        }else {
          return tcoll__10554
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10557 = this;
  if(cljs.core.truth_(this__10557.editable_QMARK_)) {
    this__10557.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__10557.len, 2), this__10557.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10558 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10559 = this;
  if(cljs.core.truth_(this__10559.editable_QMARK_)) {
    var idx__10560 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__10560 === -1) {
      return not_found
    }else {
      return this__10559.arr[idx__10560 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10561 = this;
  if(cljs.core.truth_(this__10561.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__10561.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__10566 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__10567 = 0;
  while(true) {
    if(i__10567 < len) {
      var G__10568 = cljs.core.assoc_BANG_.call(null, out__10566, arr[i__10567], arr[i__10567 + 1]);
      var G__10569 = i__10567 + 2;
      out__10566 = G__10568;
      i__10567 = G__10569;
      continue
    }else {
      return out__10566
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2357__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10574__10575 = arr.slice();
    G__10574__10575[i] = a;
    return G__10574__10575
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10576__10577 = arr.slice();
    G__10576__10577[i] = a;
    G__10576__10577[j] = b;
    return G__10576__10577
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__10579 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__10579, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__10579, 2 * i, new_arr__10579.length - 2 * i);
  return new_arr__10579
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__10582 = inode.ensure_editable(edit);
    editable__10582.arr[i] = a;
    return editable__10582
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__10583 = inode.ensure_editable(edit);
    editable__10583.arr[i] = a;
    editable__10583.arr[j] = b;
    return editable__10583
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__10590 = arr.length;
  var i__10591 = 0;
  var init__10592 = init;
  while(true) {
    if(i__10591 < len__10590) {
      var init__10595 = function() {
        var k__10593 = arr[i__10591];
        if(!(k__10593 == null)) {
          return f.call(null, init__10592, k__10593, arr[i__10591 + 1])
        }else {
          var node__10594 = arr[i__10591 + 1];
          if(!(node__10594 == null)) {
            return node__10594.kv_reduce(f, init__10592)
          }else {
            return init__10592
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10595)) {
        return cljs.core.deref.call(null, init__10595)
      }else {
        var G__10596 = i__10591 + 2;
        var G__10597 = init__10595;
        i__10591 = G__10596;
        init__10592 = G__10597;
        continue
      }
    }else {
      return init__10592
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__10598 = this;
  var inode__10599 = this;
  if(this__10598.bitmap === bit) {
    return null
  }else {
    var editable__10600 = inode__10599.ensure_editable(e);
    var earr__10601 = editable__10600.arr;
    var len__10602 = earr__10601.length;
    editable__10600.bitmap = bit ^ editable__10600.bitmap;
    cljs.core.array_copy.call(null, earr__10601, 2 * (i + 1), earr__10601, 2 * i, len__10602 - 2 * (i + 1));
    earr__10601[len__10602 - 2] = null;
    earr__10601[len__10602 - 1] = null;
    return editable__10600
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10603 = this;
  var inode__10604 = this;
  var bit__10605 = 1 << (hash >>> shift & 31);
  var idx__10606 = cljs.core.bitmap_indexed_node_index.call(null, this__10603.bitmap, bit__10605);
  if((this__10603.bitmap & bit__10605) === 0) {
    var n__10607 = cljs.core.bit_count.call(null, this__10603.bitmap);
    if(2 * n__10607 < this__10603.arr.length) {
      var editable__10608 = inode__10604.ensure_editable(edit);
      var earr__10609 = editable__10608.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__10609, 2 * idx__10606, earr__10609, 2 * (idx__10606 + 1), 2 * (n__10607 - idx__10606));
      earr__10609[2 * idx__10606] = key;
      earr__10609[2 * idx__10606 + 1] = val;
      editable__10608.bitmap = editable__10608.bitmap | bit__10605;
      return editable__10608
    }else {
      if(n__10607 >= 16) {
        var nodes__10610 = cljs.core.make_array.call(null, 32);
        var jdx__10611 = hash >>> shift & 31;
        nodes__10610[jdx__10611] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__10612 = 0;
        var j__10613 = 0;
        while(true) {
          if(i__10612 < 32) {
            if((this__10603.bitmap >>> i__10612 & 1) === 0) {
              var G__10666 = i__10612 + 1;
              var G__10667 = j__10613;
              i__10612 = G__10666;
              j__10613 = G__10667;
              continue
            }else {
              nodes__10610[i__10612] = !(this__10603.arr[j__10613] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__10603.arr[j__10613]), this__10603.arr[j__10613], this__10603.arr[j__10613 + 1], added_leaf_QMARK_) : this__10603.arr[j__10613 + 1];
              var G__10668 = i__10612 + 1;
              var G__10669 = j__10613 + 2;
              i__10612 = G__10668;
              j__10613 = G__10669;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__10607 + 1, nodes__10610)
      }else {
        if("\ufdd0'else") {
          var new_arr__10614 = cljs.core.make_array.call(null, 2 * (n__10607 + 4));
          cljs.core.array_copy.call(null, this__10603.arr, 0, new_arr__10614, 0, 2 * idx__10606);
          new_arr__10614[2 * idx__10606] = key;
          new_arr__10614[2 * idx__10606 + 1] = val;
          cljs.core.array_copy.call(null, this__10603.arr, 2 * idx__10606, new_arr__10614, 2 * (idx__10606 + 1), 2 * (n__10607 - idx__10606));
          added_leaf_QMARK_.val = true;
          var editable__10615 = inode__10604.ensure_editable(edit);
          editable__10615.arr = new_arr__10614;
          editable__10615.bitmap = editable__10615.bitmap | bit__10605;
          return editable__10615
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__10616 = this__10603.arr[2 * idx__10606];
    var val_or_node__10617 = this__10603.arr[2 * idx__10606 + 1];
    if(key_or_nil__10616 == null) {
      var n__10618 = val_or_node__10617.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10618 === val_or_node__10617) {
        return inode__10604
      }else {
        return cljs.core.edit_and_set.call(null, inode__10604, edit, 2 * idx__10606 + 1, n__10618)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10616)) {
        if(val === val_or_node__10617) {
          return inode__10604
        }else {
          return cljs.core.edit_and_set.call(null, inode__10604, edit, 2 * idx__10606 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__10604, edit, 2 * idx__10606, null, 2 * idx__10606 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__10616, val_or_node__10617, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__10619 = this;
  var inode__10620 = this;
  return cljs.core.create_inode_seq.call(null, this__10619.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10621 = this;
  var inode__10622 = this;
  var bit__10623 = 1 << (hash >>> shift & 31);
  if((this__10621.bitmap & bit__10623) === 0) {
    return inode__10622
  }else {
    var idx__10624 = cljs.core.bitmap_indexed_node_index.call(null, this__10621.bitmap, bit__10623);
    var key_or_nil__10625 = this__10621.arr[2 * idx__10624];
    var val_or_node__10626 = this__10621.arr[2 * idx__10624 + 1];
    if(key_or_nil__10625 == null) {
      var n__10627 = val_or_node__10626.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__10627 === val_or_node__10626) {
        return inode__10622
      }else {
        if(!(n__10627 == null)) {
          return cljs.core.edit_and_set.call(null, inode__10622, edit, 2 * idx__10624 + 1, n__10627)
        }else {
          if(this__10621.bitmap === bit__10623) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__10622.edit_and_remove_pair(edit, bit__10623, idx__10624)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10625)) {
        removed_leaf_QMARK_[0] = true;
        return inode__10622.edit_and_remove_pair(edit, bit__10623, idx__10624)
      }else {
        if("\ufdd0'else") {
          return inode__10622
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__10628 = this;
  var inode__10629 = this;
  if(e === this__10628.edit) {
    return inode__10629
  }else {
    var n__10630 = cljs.core.bit_count.call(null, this__10628.bitmap);
    var new_arr__10631 = cljs.core.make_array.call(null, n__10630 < 0 ? 4 : 2 * (n__10630 + 1));
    cljs.core.array_copy.call(null, this__10628.arr, 0, new_arr__10631, 0, 2 * n__10630);
    return new cljs.core.BitmapIndexedNode(e, this__10628.bitmap, new_arr__10631)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__10632 = this;
  var inode__10633 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10632.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10634 = this;
  var inode__10635 = this;
  var bit__10636 = 1 << (hash >>> shift & 31);
  if((this__10634.bitmap & bit__10636) === 0) {
    return not_found
  }else {
    var idx__10637 = cljs.core.bitmap_indexed_node_index.call(null, this__10634.bitmap, bit__10636);
    var key_or_nil__10638 = this__10634.arr[2 * idx__10637];
    var val_or_node__10639 = this__10634.arr[2 * idx__10637 + 1];
    if(key_or_nil__10638 == null) {
      return val_or_node__10639.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10638)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__10638, val_or_node__10639], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__10640 = this;
  var inode__10641 = this;
  var bit__10642 = 1 << (hash >>> shift & 31);
  if((this__10640.bitmap & bit__10642) === 0) {
    return inode__10641
  }else {
    var idx__10643 = cljs.core.bitmap_indexed_node_index.call(null, this__10640.bitmap, bit__10642);
    var key_or_nil__10644 = this__10640.arr[2 * idx__10643];
    var val_or_node__10645 = this__10640.arr[2 * idx__10643 + 1];
    if(key_or_nil__10644 == null) {
      var n__10646 = val_or_node__10645.inode_without(shift + 5, hash, key);
      if(n__10646 === val_or_node__10645) {
        return inode__10641
      }else {
        if(!(n__10646 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__10640.bitmap, cljs.core.clone_and_set.call(null, this__10640.arr, 2 * idx__10643 + 1, n__10646))
        }else {
          if(this__10640.bitmap === bit__10642) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__10640.bitmap ^ bit__10642, cljs.core.remove_pair.call(null, this__10640.arr, idx__10643))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10644)) {
        return new cljs.core.BitmapIndexedNode(null, this__10640.bitmap ^ bit__10642, cljs.core.remove_pair.call(null, this__10640.arr, idx__10643))
      }else {
        if("\ufdd0'else") {
          return inode__10641
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10647 = this;
  var inode__10648 = this;
  var bit__10649 = 1 << (hash >>> shift & 31);
  var idx__10650 = cljs.core.bitmap_indexed_node_index.call(null, this__10647.bitmap, bit__10649);
  if((this__10647.bitmap & bit__10649) === 0) {
    var n__10651 = cljs.core.bit_count.call(null, this__10647.bitmap);
    if(n__10651 >= 16) {
      var nodes__10652 = cljs.core.make_array.call(null, 32);
      var jdx__10653 = hash >>> shift & 31;
      nodes__10652[jdx__10653] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__10654 = 0;
      var j__10655 = 0;
      while(true) {
        if(i__10654 < 32) {
          if((this__10647.bitmap >>> i__10654 & 1) === 0) {
            var G__10670 = i__10654 + 1;
            var G__10671 = j__10655;
            i__10654 = G__10670;
            j__10655 = G__10671;
            continue
          }else {
            nodes__10652[i__10654] = !(this__10647.arr[j__10655] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__10647.arr[j__10655]), this__10647.arr[j__10655], this__10647.arr[j__10655 + 1], added_leaf_QMARK_) : this__10647.arr[j__10655 + 1];
            var G__10672 = i__10654 + 1;
            var G__10673 = j__10655 + 2;
            i__10654 = G__10672;
            j__10655 = G__10673;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__10651 + 1, nodes__10652)
    }else {
      var new_arr__10656 = cljs.core.make_array.call(null, 2 * (n__10651 + 1));
      cljs.core.array_copy.call(null, this__10647.arr, 0, new_arr__10656, 0, 2 * idx__10650);
      new_arr__10656[2 * idx__10650] = key;
      new_arr__10656[2 * idx__10650 + 1] = val;
      cljs.core.array_copy.call(null, this__10647.arr, 2 * idx__10650, new_arr__10656, 2 * (idx__10650 + 1), 2 * (n__10651 - idx__10650));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__10647.bitmap | bit__10649, new_arr__10656)
    }
  }else {
    var key_or_nil__10657 = this__10647.arr[2 * idx__10650];
    var val_or_node__10658 = this__10647.arr[2 * idx__10650 + 1];
    if(key_or_nil__10657 == null) {
      var n__10659 = val_or_node__10658.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10659 === val_or_node__10658) {
        return inode__10648
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__10647.bitmap, cljs.core.clone_and_set.call(null, this__10647.arr, 2 * idx__10650 + 1, n__10659))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10657)) {
        if(val === val_or_node__10658) {
          return inode__10648
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__10647.bitmap, cljs.core.clone_and_set.call(null, this__10647.arr, 2 * idx__10650 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__10647.bitmap, cljs.core.clone_and_set.call(null, this__10647.arr, 2 * idx__10650, null, 2 * idx__10650 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__10657, val_or_node__10658, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10660 = this;
  var inode__10661 = this;
  var bit__10662 = 1 << (hash >>> shift & 31);
  if((this__10660.bitmap & bit__10662) === 0) {
    return not_found
  }else {
    var idx__10663 = cljs.core.bitmap_indexed_node_index.call(null, this__10660.bitmap, bit__10662);
    var key_or_nil__10664 = this__10660.arr[2 * idx__10663];
    var val_or_node__10665 = this__10660.arr[2 * idx__10663 + 1];
    if(key_or_nil__10664 == null) {
      return val_or_node__10665.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10664)) {
        return val_or_node__10665
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__10681 = array_node.arr;
  var len__10682 = 2 * (array_node.cnt - 1);
  var new_arr__10683 = cljs.core.make_array.call(null, len__10682);
  var i__10684 = 0;
  var j__10685 = 1;
  var bitmap__10686 = 0;
  while(true) {
    if(i__10684 < len__10682) {
      if(function() {
        var and__3822__auto____10687 = !(i__10684 === idx);
        if(and__3822__auto____10687) {
          return!(arr__10681[i__10684] == null)
        }else {
          return and__3822__auto____10687
        }
      }()) {
        new_arr__10683[j__10685] = arr__10681[i__10684];
        var G__10688 = i__10684 + 1;
        var G__10689 = j__10685 + 2;
        var G__10690 = bitmap__10686 | 1 << i__10684;
        i__10684 = G__10688;
        j__10685 = G__10689;
        bitmap__10686 = G__10690;
        continue
      }else {
        var G__10691 = i__10684 + 1;
        var G__10692 = j__10685;
        var G__10693 = bitmap__10686;
        i__10684 = G__10691;
        j__10685 = G__10692;
        bitmap__10686 = G__10693;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__10686, new_arr__10683)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10694 = this;
  var inode__10695 = this;
  var idx__10696 = hash >>> shift & 31;
  var node__10697 = this__10694.arr[idx__10696];
  if(node__10697 == null) {
    var editable__10698 = cljs.core.edit_and_set.call(null, inode__10695, edit, idx__10696, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__10698.cnt = editable__10698.cnt + 1;
    return editable__10698
  }else {
    var n__10699 = node__10697.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10699 === node__10697) {
      return inode__10695
    }else {
      return cljs.core.edit_and_set.call(null, inode__10695, edit, idx__10696, n__10699)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10700 = this;
  var inode__10701 = this;
  return cljs.core.create_array_node_seq.call(null, this__10700.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10702 = this;
  var inode__10703 = this;
  var idx__10704 = hash >>> shift & 31;
  var node__10705 = this__10702.arr[idx__10704];
  if(node__10705 == null) {
    return inode__10703
  }else {
    var n__10706 = node__10705.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10706 === node__10705) {
      return inode__10703
    }else {
      if(n__10706 == null) {
        if(this__10702.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10703, edit, idx__10704)
        }else {
          var editable__10707 = cljs.core.edit_and_set.call(null, inode__10703, edit, idx__10704, n__10706);
          editable__10707.cnt = editable__10707.cnt - 1;
          return editable__10707
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10703, edit, idx__10704, n__10706)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10708 = this;
  var inode__10709 = this;
  if(e === this__10708.edit) {
    return inode__10709
  }else {
    return new cljs.core.ArrayNode(e, this__10708.cnt, this__10708.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10710 = this;
  var inode__10711 = this;
  var len__10712 = this__10710.arr.length;
  var i__10713 = 0;
  var init__10714 = init;
  while(true) {
    if(i__10713 < len__10712) {
      var node__10715 = this__10710.arr[i__10713];
      if(!(node__10715 == null)) {
        var init__10716 = node__10715.kv_reduce(f, init__10714);
        if(cljs.core.reduced_QMARK_.call(null, init__10716)) {
          return cljs.core.deref.call(null, init__10716)
        }else {
          var G__10735 = i__10713 + 1;
          var G__10736 = init__10716;
          i__10713 = G__10735;
          init__10714 = G__10736;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10714
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10717 = this;
  var inode__10718 = this;
  var idx__10719 = hash >>> shift & 31;
  var node__10720 = this__10717.arr[idx__10719];
  if(!(node__10720 == null)) {
    return node__10720.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10721 = this;
  var inode__10722 = this;
  var idx__10723 = hash >>> shift & 31;
  var node__10724 = this__10721.arr[idx__10723];
  if(!(node__10724 == null)) {
    var n__10725 = node__10724.inode_without(shift + 5, hash, key);
    if(n__10725 === node__10724) {
      return inode__10722
    }else {
      if(n__10725 == null) {
        if(this__10721.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10722, null, idx__10723)
        }else {
          return new cljs.core.ArrayNode(null, this__10721.cnt - 1, cljs.core.clone_and_set.call(null, this__10721.arr, idx__10723, n__10725))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10721.cnt, cljs.core.clone_and_set.call(null, this__10721.arr, idx__10723, n__10725))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10722
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10726 = this;
  var inode__10727 = this;
  var idx__10728 = hash >>> shift & 31;
  var node__10729 = this__10726.arr[idx__10728];
  if(node__10729 == null) {
    return new cljs.core.ArrayNode(null, this__10726.cnt + 1, cljs.core.clone_and_set.call(null, this__10726.arr, idx__10728, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10730 = node__10729.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10730 === node__10729) {
      return inode__10727
    }else {
      return new cljs.core.ArrayNode(null, this__10726.cnt, cljs.core.clone_and_set.call(null, this__10726.arr, idx__10728, n__10730))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10731 = this;
  var inode__10732 = this;
  var idx__10733 = hash >>> shift & 31;
  var node__10734 = this__10731.arr[idx__10733];
  if(!(node__10734 == null)) {
    return node__10734.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10739 = 2 * cnt;
  var i__10740 = 0;
  while(true) {
    if(i__10740 < lim__10739) {
      if(cljs.core.key_test.call(null, key, arr[i__10740])) {
        return i__10740
      }else {
        var G__10741 = i__10740 + 2;
        i__10740 = G__10741;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10742 = this;
  var inode__10743 = this;
  if(hash === this__10742.collision_hash) {
    var idx__10744 = cljs.core.hash_collision_node_find_index.call(null, this__10742.arr, this__10742.cnt, key);
    if(idx__10744 === -1) {
      if(this__10742.arr.length > 2 * this__10742.cnt) {
        var editable__10745 = cljs.core.edit_and_set.call(null, inode__10743, edit, 2 * this__10742.cnt, key, 2 * this__10742.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10745.cnt = editable__10745.cnt + 1;
        return editable__10745
      }else {
        var len__10746 = this__10742.arr.length;
        var new_arr__10747 = cljs.core.make_array.call(null, len__10746 + 2);
        cljs.core.array_copy.call(null, this__10742.arr, 0, new_arr__10747, 0, len__10746);
        new_arr__10747[len__10746] = key;
        new_arr__10747[len__10746 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10743.ensure_editable_array(edit, this__10742.cnt + 1, new_arr__10747)
      }
    }else {
      if(this__10742.arr[idx__10744 + 1] === val) {
        return inode__10743
      }else {
        return cljs.core.edit_and_set.call(null, inode__10743, edit, idx__10744 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10742.collision_hash >>> shift & 31), [null, inode__10743, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10748 = this;
  var inode__10749 = this;
  return cljs.core.create_inode_seq.call(null, this__10748.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10750 = this;
  var inode__10751 = this;
  var idx__10752 = cljs.core.hash_collision_node_find_index.call(null, this__10750.arr, this__10750.cnt, key);
  if(idx__10752 === -1) {
    return inode__10751
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10750.cnt === 1) {
      return null
    }else {
      var editable__10753 = inode__10751.ensure_editable(edit);
      var earr__10754 = editable__10753.arr;
      earr__10754[idx__10752] = earr__10754[2 * this__10750.cnt - 2];
      earr__10754[idx__10752 + 1] = earr__10754[2 * this__10750.cnt - 1];
      earr__10754[2 * this__10750.cnt - 1] = null;
      earr__10754[2 * this__10750.cnt - 2] = null;
      editable__10753.cnt = editable__10753.cnt - 1;
      return editable__10753
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10755 = this;
  var inode__10756 = this;
  if(e === this__10755.edit) {
    return inode__10756
  }else {
    var new_arr__10757 = cljs.core.make_array.call(null, 2 * (this__10755.cnt + 1));
    cljs.core.array_copy.call(null, this__10755.arr, 0, new_arr__10757, 0, 2 * this__10755.cnt);
    return new cljs.core.HashCollisionNode(e, this__10755.collision_hash, this__10755.cnt, new_arr__10757)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10758 = this;
  var inode__10759 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10758.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10760 = this;
  var inode__10761 = this;
  var idx__10762 = cljs.core.hash_collision_node_find_index.call(null, this__10760.arr, this__10760.cnt, key);
  if(idx__10762 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10760.arr[idx__10762])) {
      return cljs.core.PersistentVector.fromArray([this__10760.arr[idx__10762], this__10760.arr[idx__10762 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10763 = this;
  var inode__10764 = this;
  var idx__10765 = cljs.core.hash_collision_node_find_index.call(null, this__10763.arr, this__10763.cnt, key);
  if(idx__10765 === -1) {
    return inode__10764
  }else {
    if(this__10763.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10763.collision_hash, this__10763.cnt - 1, cljs.core.remove_pair.call(null, this__10763.arr, cljs.core.quot.call(null, idx__10765, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10766 = this;
  var inode__10767 = this;
  if(hash === this__10766.collision_hash) {
    var idx__10768 = cljs.core.hash_collision_node_find_index.call(null, this__10766.arr, this__10766.cnt, key);
    if(idx__10768 === -1) {
      var len__10769 = this__10766.arr.length;
      var new_arr__10770 = cljs.core.make_array.call(null, len__10769 + 2);
      cljs.core.array_copy.call(null, this__10766.arr, 0, new_arr__10770, 0, len__10769);
      new_arr__10770[len__10769] = key;
      new_arr__10770[len__10769 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10766.collision_hash, this__10766.cnt + 1, new_arr__10770)
    }else {
      if(cljs.core._EQ_.call(null, this__10766.arr[idx__10768], val)) {
        return inode__10767
      }else {
        return new cljs.core.HashCollisionNode(null, this__10766.collision_hash, this__10766.cnt, cljs.core.clone_and_set.call(null, this__10766.arr, idx__10768 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10766.collision_hash >>> shift & 31), [null, inode__10767])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10771 = this;
  var inode__10772 = this;
  var idx__10773 = cljs.core.hash_collision_node_find_index.call(null, this__10771.arr, this__10771.cnt, key);
  if(idx__10773 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10771.arr[idx__10773])) {
      return this__10771.arr[idx__10773 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10774 = this;
  var inode__10775 = this;
  if(e === this__10774.edit) {
    this__10774.arr = array;
    this__10774.cnt = count;
    return inode__10775
  }else {
    return new cljs.core.HashCollisionNode(this__10774.edit, this__10774.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10780 = cljs.core.hash.call(null, key1);
    if(key1hash__10780 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10780, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10781 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10780, key1, val1, added_leaf_QMARK___10781).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10781)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10782 = cljs.core.hash.call(null, key1);
    if(key1hash__10782 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10782, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10783 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10782, key1, val1, added_leaf_QMARK___10783).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10783)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10784 = this;
  var h__2239__auto____10785 = this__10784.__hash;
  if(!(h__2239__auto____10785 == null)) {
    return h__2239__auto____10785
  }else {
    var h__2239__auto____10786 = cljs.core.hash_coll.call(null, coll);
    this__10784.__hash = h__2239__auto____10786;
    return h__2239__auto____10786
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10787 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10788 = this;
  var this__10789 = this;
  return cljs.core.pr_str.call(null, this__10789)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10790 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10791 = this;
  if(this__10791.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10791.nodes[this__10791.i], this__10791.nodes[this__10791.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10791.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10792 = this;
  if(this__10792.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10792.nodes, this__10792.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10792.nodes, this__10792.i, cljs.core.next.call(null, this__10792.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10793 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10794 = this;
  return new cljs.core.NodeSeq(meta, this__10794.nodes, this__10794.i, this__10794.s, this__10794.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10795 = this;
  return this__10795.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10796 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10796.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10803 = nodes.length;
      var j__10804 = i;
      while(true) {
        if(j__10804 < len__10803) {
          if(!(nodes[j__10804] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10804, null, null)
          }else {
            var temp__3971__auto____10805 = nodes[j__10804 + 1];
            if(cljs.core.truth_(temp__3971__auto____10805)) {
              var node__10806 = temp__3971__auto____10805;
              var temp__3971__auto____10807 = node__10806.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____10807)) {
                var node_seq__10808 = temp__3971__auto____10807;
                return new cljs.core.NodeSeq(null, nodes, j__10804 + 2, node_seq__10808, null)
              }else {
                var G__10809 = j__10804 + 2;
                j__10804 = G__10809;
                continue
              }
            }else {
              var G__10810 = j__10804 + 2;
              j__10804 = G__10810;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10811 = this;
  var h__2239__auto____10812 = this__10811.__hash;
  if(!(h__2239__auto____10812 == null)) {
    return h__2239__auto____10812
  }else {
    var h__2239__auto____10813 = cljs.core.hash_coll.call(null, coll);
    this__10811.__hash = h__2239__auto____10813;
    return h__2239__auto____10813
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10814 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10815 = this;
  var this__10816 = this;
  return cljs.core.pr_str.call(null, this__10816)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10817 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10818 = this;
  return cljs.core.first.call(null, this__10818.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10819 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10819.nodes, this__10819.i, cljs.core.next.call(null, this__10819.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10820 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10821 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10821.nodes, this__10821.i, this__10821.s, this__10821.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10822 = this;
  return this__10822.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10823 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10823.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10830 = nodes.length;
      var j__10831 = i;
      while(true) {
        if(j__10831 < len__10830) {
          var temp__3971__auto____10832 = nodes[j__10831];
          if(cljs.core.truth_(temp__3971__auto____10832)) {
            var nj__10833 = temp__3971__auto____10832;
            var temp__3971__auto____10834 = nj__10833.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____10834)) {
              var ns__10835 = temp__3971__auto____10834;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10831 + 1, ns__10835, null)
            }else {
              var G__10836 = j__10831 + 1;
              j__10831 = G__10836;
              continue
            }
          }else {
            var G__10837 = j__10831 + 1;
            j__10831 = G__10837;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10840 = this;
  return new cljs.core.TransientHashMap({}, this__10840.root, this__10840.cnt, this__10840.has_nil_QMARK_, this__10840.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10841 = this;
  var h__2239__auto____10842 = this__10841.__hash;
  if(!(h__2239__auto____10842 == null)) {
    return h__2239__auto____10842
  }else {
    var h__2239__auto____10843 = cljs.core.hash_imap.call(null, coll);
    this__10841.__hash = h__2239__auto____10843;
    return h__2239__auto____10843
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10844 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10845 = this;
  if(k == null) {
    if(this__10845.has_nil_QMARK_) {
      return this__10845.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10845.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10845.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10846 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____10847 = this__10846.has_nil_QMARK_;
      if(and__3822__auto____10847) {
        return v === this__10846.nil_val
      }else {
        return and__3822__auto____10847
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10846.meta, this__10846.has_nil_QMARK_ ? this__10846.cnt : this__10846.cnt + 1, this__10846.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10848 = new cljs.core.Box(false);
    var new_root__10849 = (this__10846.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10846.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10848);
    if(new_root__10849 === this__10846.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10846.meta, added_leaf_QMARK___10848.val ? this__10846.cnt + 1 : this__10846.cnt, new_root__10849, this__10846.has_nil_QMARK_, this__10846.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10850 = this;
  if(k == null) {
    return this__10850.has_nil_QMARK_
  }else {
    if(this__10850.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10850.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10873 = null;
  var G__10873__2 = function(this_sym10851, k) {
    var this__10853 = this;
    var this_sym10851__10854 = this;
    var coll__10855 = this_sym10851__10854;
    return coll__10855.cljs$core$ILookup$_lookup$arity$2(coll__10855, k)
  };
  var G__10873__3 = function(this_sym10852, k, not_found) {
    var this__10853 = this;
    var this_sym10852__10856 = this;
    var coll__10857 = this_sym10852__10856;
    return coll__10857.cljs$core$ILookup$_lookup$arity$3(coll__10857, k, not_found)
  };
  G__10873 = function(this_sym10852, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10873__2.call(this, this_sym10852, k);
      case 3:
        return G__10873__3.call(this, this_sym10852, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10873
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10838, args10839) {
  var this__10858 = this;
  return this_sym10838.call.apply(this_sym10838, [this_sym10838].concat(args10839.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10859 = this;
  var init__10860 = this__10859.has_nil_QMARK_ ? f.call(null, init, null, this__10859.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10860)) {
    return cljs.core.deref.call(null, init__10860)
  }else {
    if(!(this__10859.root == null)) {
      return this__10859.root.kv_reduce(f, init__10860)
    }else {
      if("\ufdd0'else") {
        return init__10860
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10861 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10862 = this;
  var this__10863 = this;
  return cljs.core.pr_str.call(null, this__10863)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10864 = this;
  if(this__10864.cnt > 0) {
    var s__10865 = !(this__10864.root == null) ? this__10864.root.inode_seq() : null;
    if(this__10864.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10864.nil_val], true), s__10865)
    }else {
      return s__10865
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10866 = this;
  return this__10866.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10867 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10868 = this;
  return new cljs.core.PersistentHashMap(meta, this__10868.cnt, this__10868.root, this__10868.has_nil_QMARK_, this__10868.nil_val, this__10868.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10869 = this;
  return this__10869.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10870 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10870.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10871 = this;
  if(k == null) {
    if(this__10871.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10871.meta, this__10871.cnt - 1, this__10871.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10871.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10872 = this__10871.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10872 === this__10871.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10871.meta, this__10871.cnt - 1, new_root__10872, this__10871.has_nil_QMARK_, this__10871.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10874 = ks.length;
  var i__10875 = 0;
  var out__10876 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10875 < len__10874) {
      var G__10877 = i__10875 + 1;
      var G__10878 = cljs.core.assoc_BANG_.call(null, out__10876, ks[i__10875], vs[i__10875]);
      i__10875 = G__10877;
      out__10876 = G__10878;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10876)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10879 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10880 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10881 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10882 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10883 = this;
  if(k == null) {
    if(this__10883.has_nil_QMARK_) {
      return this__10883.nil_val
    }else {
      return null
    }
  }else {
    if(this__10883.root == null) {
      return null
    }else {
      return this__10883.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10884 = this;
  if(k == null) {
    if(this__10884.has_nil_QMARK_) {
      return this__10884.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10884.root == null) {
      return not_found
    }else {
      return this__10884.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10885 = this;
  if(this__10885.edit) {
    return this__10885.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10886 = this;
  var tcoll__10887 = this;
  if(this__10886.edit) {
    if(function() {
      var G__10888__10889 = o;
      if(G__10888__10889) {
        if(function() {
          var or__3824__auto____10890 = G__10888__10889.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10890) {
            return or__3824__auto____10890
          }else {
            return G__10888__10889.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10888__10889.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10888__10889)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10888__10889)
      }
    }()) {
      return tcoll__10887.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10891 = cljs.core.seq.call(null, o);
      var tcoll__10892 = tcoll__10887;
      while(true) {
        var temp__3971__auto____10893 = cljs.core.first.call(null, es__10891);
        if(cljs.core.truth_(temp__3971__auto____10893)) {
          var e__10894 = temp__3971__auto____10893;
          var G__10905 = cljs.core.next.call(null, es__10891);
          var G__10906 = tcoll__10892.assoc_BANG_(cljs.core.key.call(null, e__10894), cljs.core.val.call(null, e__10894));
          es__10891 = G__10905;
          tcoll__10892 = G__10906;
          continue
        }else {
          return tcoll__10892
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10895 = this;
  var tcoll__10896 = this;
  if(this__10895.edit) {
    if(k == null) {
      if(this__10895.nil_val === v) {
      }else {
        this__10895.nil_val = v
      }
      if(this__10895.has_nil_QMARK_) {
      }else {
        this__10895.count = this__10895.count + 1;
        this__10895.has_nil_QMARK_ = true
      }
      return tcoll__10896
    }else {
      var added_leaf_QMARK___10897 = new cljs.core.Box(false);
      var node__10898 = (this__10895.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10895.root).inode_assoc_BANG_(this__10895.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10897);
      if(node__10898 === this__10895.root) {
      }else {
        this__10895.root = node__10898
      }
      if(added_leaf_QMARK___10897.val) {
        this__10895.count = this__10895.count + 1
      }else {
      }
      return tcoll__10896
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10899 = this;
  var tcoll__10900 = this;
  if(this__10899.edit) {
    if(k == null) {
      if(this__10899.has_nil_QMARK_) {
        this__10899.has_nil_QMARK_ = false;
        this__10899.nil_val = null;
        this__10899.count = this__10899.count - 1;
        return tcoll__10900
      }else {
        return tcoll__10900
      }
    }else {
      if(this__10899.root == null) {
        return tcoll__10900
      }else {
        var removed_leaf_QMARK___10901 = new cljs.core.Box(false);
        var node__10902 = this__10899.root.inode_without_BANG_(this__10899.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10901);
        if(node__10902 === this__10899.root) {
        }else {
          this__10899.root = node__10902
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10901[0])) {
          this__10899.count = this__10899.count - 1
        }else {
        }
        return tcoll__10900
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10903 = this;
  var tcoll__10904 = this;
  if(this__10903.edit) {
    this__10903.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10903.count, this__10903.root, this__10903.has_nil_QMARK_, this__10903.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10909 = node;
  var stack__10910 = stack;
  while(true) {
    if(!(t__10909 == null)) {
      var G__10911 = ascending_QMARK_ ? t__10909.left : t__10909.right;
      var G__10912 = cljs.core.conj.call(null, stack__10910, t__10909);
      t__10909 = G__10911;
      stack__10910 = G__10912;
      continue
    }else {
      return stack__10910
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10913 = this;
  var h__2239__auto____10914 = this__10913.__hash;
  if(!(h__2239__auto____10914 == null)) {
    return h__2239__auto____10914
  }else {
    var h__2239__auto____10915 = cljs.core.hash_coll.call(null, coll);
    this__10913.__hash = h__2239__auto____10915;
    return h__2239__auto____10915
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10916 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10917 = this;
  var this__10918 = this;
  return cljs.core.pr_str.call(null, this__10918)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10919 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10920 = this;
  if(this__10920.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10920.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10921 = this;
  return cljs.core.peek.call(null, this__10921.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10922 = this;
  var t__10923 = cljs.core.first.call(null, this__10922.stack);
  var next_stack__10924 = cljs.core.tree_map_seq_push.call(null, this__10922.ascending_QMARK_ ? t__10923.right : t__10923.left, cljs.core.next.call(null, this__10922.stack), this__10922.ascending_QMARK_);
  if(!(next_stack__10924 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10924, this__10922.ascending_QMARK_, this__10922.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10925 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10926 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10926.stack, this__10926.ascending_QMARK_, this__10926.cnt, this__10926.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10927 = this;
  return this__10927.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____10929 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____10929) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____10929
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____10931 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____10931) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____10931
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10935 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10935)) {
    return cljs.core.deref.call(null, init__10935)
  }else {
    var init__10936 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10935) : init__10935;
    if(cljs.core.reduced_QMARK_.call(null, init__10936)) {
      return cljs.core.deref.call(null, init__10936)
    }else {
      var init__10937 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10936) : init__10936;
      if(cljs.core.reduced_QMARK_.call(null, init__10937)) {
        return cljs.core.deref.call(null, init__10937)
      }else {
        return init__10937
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10940 = this;
  var h__2239__auto____10941 = this__10940.__hash;
  if(!(h__2239__auto____10941 == null)) {
    return h__2239__auto____10941
  }else {
    var h__2239__auto____10942 = cljs.core.hash_coll.call(null, coll);
    this__10940.__hash = h__2239__auto____10942;
    return h__2239__auto____10942
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10943 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10944 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10945 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10945.key, this__10945.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10993 = null;
  var G__10993__2 = function(this_sym10946, k) {
    var this__10948 = this;
    var this_sym10946__10949 = this;
    var node__10950 = this_sym10946__10949;
    return node__10950.cljs$core$ILookup$_lookup$arity$2(node__10950, k)
  };
  var G__10993__3 = function(this_sym10947, k, not_found) {
    var this__10948 = this;
    var this_sym10947__10951 = this;
    var node__10952 = this_sym10947__10951;
    return node__10952.cljs$core$ILookup$_lookup$arity$3(node__10952, k, not_found)
  };
  G__10993 = function(this_sym10947, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10993__2.call(this, this_sym10947, k);
      case 3:
        return G__10993__3.call(this, this_sym10947, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10993
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10938, args10939) {
  var this__10953 = this;
  return this_sym10938.call.apply(this_sym10938, [this_sym10938].concat(args10939.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10954 = this;
  return cljs.core.PersistentVector.fromArray([this__10954.key, this__10954.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10955 = this;
  return this__10955.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10956 = this;
  return this__10956.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__10957 = this;
  var node__10958 = this;
  return ins.balance_right(node__10958)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__10959 = this;
  var node__10960 = this;
  return new cljs.core.RedNode(this__10959.key, this__10959.val, this__10959.left, this__10959.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__10961 = this;
  var node__10962 = this;
  return cljs.core.balance_right_del.call(null, this__10961.key, this__10961.val, this__10961.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__10963 = this;
  var node__10964 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__10965 = this;
  var node__10966 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10966, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__10967 = this;
  var node__10968 = this;
  return cljs.core.balance_left_del.call(null, this__10967.key, this__10967.val, del, this__10967.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__10969 = this;
  var node__10970 = this;
  return ins.balance_left(node__10970)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__10971 = this;
  var node__10972 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__10972, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__10994 = null;
  var G__10994__0 = function() {
    var this__10973 = this;
    var this__10975 = this;
    return cljs.core.pr_str.call(null, this__10975)
  };
  G__10994 = function() {
    switch(arguments.length) {
      case 0:
        return G__10994__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10994
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__10976 = this;
  var node__10977 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10977, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__10978 = this;
  var node__10979 = this;
  return node__10979
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10980 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10981 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10982 = this;
  return cljs.core.list.call(null, this__10982.key, this__10982.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10983 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10984 = this;
  return this__10984.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10985 = this;
  return cljs.core.PersistentVector.fromArray([this__10985.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10986 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10986.key, this__10986.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10987 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10988 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10988.key, this__10988.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10989 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10990 = this;
  if(n === 0) {
    return this__10990.key
  }else {
    if(n === 1) {
      return this__10990.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10991 = this;
  if(n === 0) {
    return this__10991.key
  }else {
    if(n === 1) {
      return this__10991.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10992 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10997 = this;
  var h__2239__auto____10998 = this__10997.__hash;
  if(!(h__2239__auto____10998 == null)) {
    return h__2239__auto____10998
  }else {
    var h__2239__auto____10999 = cljs.core.hash_coll.call(null, coll);
    this__10997.__hash = h__2239__auto____10999;
    return h__2239__auto____10999
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__11000 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__11001 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__11002 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__11002.key, this__11002.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__11050 = null;
  var G__11050__2 = function(this_sym11003, k) {
    var this__11005 = this;
    var this_sym11003__11006 = this;
    var node__11007 = this_sym11003__11006;
    return node__11007.cljs$core$ILookup$_lookup$arity$2(node__11007, k)
  };
  var G__11050__3 = function(this_sym11004, k, not_found) {
    var this__11005 = this;
    var this_sym11004__11008 = this;
    var node__11009 = this_sym11004__11008;
    return node__11009.cljs$core$ILookup$_lookup$arity$3(node__11009, k, not_found)
  };
  G__11050 = function(this_sym11004, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11050__2.call(this, this_sym11004, k);
      case 3:
        return G__11050__3.call(this, this_sym11004, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11050
}();
cljs.core.RedNode.prototype.apply = function(this_sym10995, args10996) {
  var this__11010 = this;
  return this_sym10995.call.apply(this_sym10995, [this_sym10995].concat(args10996.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__11011 = this;
  return cljs.core.PersistentVector.fromArray([this__11011.key, this__11011.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__11012 = this;
  return this__11012.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__11013 = this;
  return this__11013.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__11014 = this;
  var node__11015 = this;
  return new cljs.core.RedNode(this__11014.key, this__11014.val, this__11014.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__11016 = this;
  var node__11017 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__11018 = this;
  var node__11019 = this;
  return new cljs.core.RedNode(this__11018.key, this__11018.val, this__11018.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__11020 = this;
  var node__11021 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__11022 = this;
  var node__11023 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__11023, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__11024 = this;
  var node__11025 = this;
  return new cljs.core.RedNode(this__11024.key, this__11024.val, del, this__11024.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__11026 = this;
  var node__11027 = this;
  return new cljs.core.RedNode(this__11026.key, this__11026.val, ins, this__11026.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__11028 = this;
  var node__11029 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11028.left)) {
    return new cljs.core.RedNode(this__11028.key, this__11028.val, this__11028.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__11028.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11028.right)) {
      return new cljs.core.RedNode(this__11028.right.key, this__11028.right.val, new cljs.core.BlackNode(this__11028.key, this__11028.val, this__11028.left, this__11028.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__11028.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__11029, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__11051 = null;
  var G__11051__0 = function() {
    var this__11030 = this;
    var this__11032 = this;
    return cljs.core.pr_str.call(null, this__11032)
  };
  G__11051 = function() {
    switch(arguments.length) {
      case 0:
        return G__11051__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11051
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__11033 = this;
  var node__11034 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11033.right)) {
    return new cljs.core.RedNode(this__11033.key, this__11033.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__11033.left, null), this__11033.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11033.left)) {
      return new cljs.core.RedNode(this__11033.left.key, this__11033.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__11033.left.left, null), new cljs.core.BlackNode(this__11033.key, this__11033.val, this__11033.left.right, this__11033.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__11034, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__11035 = this;
  var node__11036 = this;
  return new cljs.core.BlackNode(this__11035.key, this__11035.val, this__11035.left, this__11035.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__11037 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__11038 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__11039 = this;
  return cljs.core.list.call(null, this__11039.key, this__11039.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__11040 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__11041 = this;
  return this__11041.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__11042 = this;
  return cljs.core.PersistentVector.fromArray([this__11042.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__11043 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__11043.key, this__11043.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11044 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__11045 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__11045.key, this__11045.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__11046 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__11047 = this;
  if(n === 0) {
    return this__11047.key
  }else {
    if(n === 1) {
      return this__11047.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__11048 = this;
  if(n === 0) {
    return this__11048.key
  }else {
    if(n === 1) {
      return this__11048.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__11049 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__11055 = comp.call(null, k, tree.key);
    if(c__11055 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__11055 < 0) {
        var ins__11056 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__11056 == null)) {
          return tree.add_left(ins__11056)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__11057 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__11057 == null)) {
            return tree.add_right(ins__11057)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__11060 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__11060)) {
            return new cljs.core.RedNode(app__11060.key, app__11060.val, new cljs.core.RedNode(left.key, left.val, left.left, app__11060.left, null), new cljs.core.RedNode(right.key, right.val, app__11060.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__11060, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__11061 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__11061)) {
              return new cljs.core.RedNode(app__11061.key, app__11061.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__11061.left, null), new cljs.core.BlackNode(right.key, right.val, app__11061.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__11061, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__11067 = comp.call(null, k, tree.key);
    if(c__11067 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__11067 < 0) {
        var del__11068 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____11069 = !(del__11068 == null);
          if(or__3824__auto____11069) {
            return or__3824__auto____11069
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__11068, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__11068, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__11070 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____11071 = !(del__11070 == null);
            if(or__3824__auto____11071) {
              return or__3824__auto____11071
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__11070)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__11070, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__11074 = tree.key;
  var c__11075 = comp.call(null, k, tk__11074);
  if(c__11075 === 0) {
    return tree.replace(tk__11074, v, tree.left, tree.right)
  }else {
    if(c__11075 < 0) {
      return tree.replace(tk__11074, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__11074, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11078 = this;
  var h__2239__auto____11079 = this__11078.__hash;
  if(!(h__2239__auto____11079 == null)) {
    return h__2239__auto____11079
  }else {
    var h__2239__auto____11080 = cljs.core.hash_imap.call(null, coll);
    this__11078.__hash = h__2239__auto____11080;
    return h__2239__auto____11080
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11081 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11082 = this;
  var n__11083 = coll.entry_at(k);
  if(!(n__11083 == null)) {
    return n__11083.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11084 = this;
  var found__11085 = [null];
  var t__11086 = cljs.core.tree_map_add.call(null, this__11084.comp, this__11084.tree, k, v, found__11085);
  if(t__11086 == null) {
    var found_node__11087 = cljs.core.nth.call(null, found__11085, 0);
    if(cljs.core._EQ_.call(null, v, found_node__11087.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__11084.comp, cljs.core.tree_map_replace.call(null, this__11084.comp, this__11084.tree, k, v), this__11084.cnt, this__11084.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__11084.comp, t__11086.blacken(), this__11084.cnt + 1, this__11084.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11088 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11122 = null;
  var G__11122__2 = function(this_sym11089, k) {
    var this__11091 = this;
    var this_sym11089__11092 = this;
    var coll__11093 = this_sym11089__11092;
    return coll__11093.cljs$core$ILookup$_lookup$arity$2(coll__11093, k)
  };
  var G__11122__3 = function(this_sym11090, k, not_found) {
    var this__11091 = this;
    var this_sym11090__11094 = this;
    var coll__11095 = this_sym11090__11094;
    return coll__11095.cljs$core$ILookup$_lookup$arity$3(coll__11095, k, not_found)
  };
  G__11122 = function(this_sym11090, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11122__2.call(this, this_sym11090, k);
      case 3:
        return G__11122__3.call(this, this_sym11090, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11122
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym11076, args11077) {
  var this__11096 = this;
  return this_sym11076.call.apply(this_sym11076, [this_sym11076].concat(args11077.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__11097 = this;
  if(!(this__11097.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__11097.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11098 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11099 = this;
  if(this__11099.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11099.tree, false, this__11099.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__11100 = this;
  var this__11101 = this;
  return cljs.core.pr_str.call(null, this__11101)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__11102 = this;
  var coll__11103 = this;
  var t__11104 = this__11102.tree;
  while(true) {
    if(!(t__11104 == null)) {
      var c__11105 = this__11102.comp.call(null, k, t__11104.key);
      if(c__11105 === 0) {
        return t__11104
      }else {
        if(c__11105 < 0) {
          var G__11123 = t__11104.left;
          t__11104 = G__11123;
          continue
        }else {
          if("\ufdd0'else") {
            var G__11124 = t__11104.right;
            t__11104 = G__11124;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__11106 = this;
  if(this__11106.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11106.tree, ascending_QMARK_, this__11106.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__11107 = this;
  if(this__11107.cnt > 0) {
    var stack__11108 = null;
    var t__11109 = this__11107.tree;
    while(true) {
      if(!(t__11109 == null)) {
        var c__11110 = this__11107.comp.call(null, k, t__11109.key);
        if(c__11110 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__11108, t__11109), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__11110 < 0) {
              var G__11125 = cljs.core.conj.call(null, stack__11108, t__11109);
              var G__11126 = t__11109.left;
              stack__11108 = G__11125;
              t__11109 = G__11126;
              continue
            }else {
              var G__11127 = stack__11108;
              var G__11128 = t__11109.right;
              stack__11108 = G__11127;
              t__11109 = G__11128;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__11110 > 0) {
                var G__11129 = cljs.core.conj.call(null, stack__11108, t__11109);
                var G__11130 = t__11109.right;
                stack__11108 = G__11129;
                t__11109 = G__11130;
                continue
              }else {
                var G__11131 = stack__11108;
                var G__11132 = t__11109.left;
                stack__11108 = G__11131;
                t__11109 = G__11132;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__11108 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__11108, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__11111 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__11112 = this;
  return this__11112.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11113 = this;
  if(this__11113.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11113.tree, true, this__11113.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11114 = this;
  return this__11114.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11115 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11116 = this;
  return new cljs.core.PersistentTreeMap(this__11116.comp, this__11116.tree, this__11116.cnt, meta, this__11116.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11117 = this;
  return this__11117.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11118 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__11118.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11119 = this;
  var found__11120 = [null];
  var t__11121 = cljs.core.tree_map_remove.call(null, this__11119.comp, this__11119.tree, k, found__11120);
  if(t__11121 == null) {
    if(cljs.core.nth.call(null, found__11120, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__11119.comp, null, 0, this__11119.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__11119.comp, t__11121.blacken(), this__11119.cnt - 1, this__11119.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__11135 = cljs.core.seq.call(null, keyvals);
    var out__11136 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__11135) {
        var G__11137 = cljs.core.nnext.call(null, in__11135);
        var G__11138 = cljs.core.assoc_BANG_.call(null, out__11136, cljs.core.first.call(null, in__11135), cljs.core.second.call(null, in__11135));
        in__11135 = G__11137;
        out__11136 = G__11138;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__11136)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__11139) {
    var keyvals = cljs.core.seq(arglist__11139);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__11140) {
    var keyvals = cljs.core.seq(arglist__11140);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__11144 = [];
    var obj__11145 = {};
    var kvs__11146 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__11146) {
        ks__11144.push(cljs.core.first.call(null, kvs__11146));
        obj__11145[cljs.core.first.call(null, kvs__11146)] = cljs.core.second.call(null, kvs__11146);
        var G__11147 = cljs.core.nnext.call(null, kvs__11146);
        kvs__11146 = G__11147;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__11144, obj__11145)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__11148) {
    var keyvals = cljs.core.seq(arglist__11148);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__11151 = cljs.core.seq.call(null, keyvals);
    var out__11152 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__11151) {
        var G__11153 = cljs.core.nnext.call(null, in__11151);
        var G__11154 = cljs.core.assoc.call(null, out__11152, cljs.core.first.call(null, in__11151), cljs.core.second.call(null, in__11151));
        in__11151 = G__11153;
        out__11152 = G__11154;
        continue
      }else {
        return out__11152
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__11155) {
    var keyvals = cljs.core.seq(arglist__11155);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__11158 = cljs.core.seq.call(null, keyvals);
    var out__11159 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__11158) {
        var G__11160 = cljs.core.nnext.call(null, in__11158);
        var G__11161 = cljs.core.assoc.call(null, out__11159, cljs.core.first.call(null, in__11158), cljs.core.second.call(null, in__11158));
        in__11158 = G__11160;
        out__11159 = G__11161;
        continue
      }else {
        return out__11159
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__11162) {
    var comparator = cljs.core.first(arglist__11162);
    var keyvals = cljs.core.rest(arglist__11162);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__11163_SHARP_, p2__11164_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____11166 = p1__11163_SHARP_;
          if(cljs.core.truth_(or__3824__auto____11166)) {
            return or__3824__auto____11166
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__11164_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__11167) {
    var maps = cljs.core.seq(arglist__11167);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__11175 = function(m, e) {
        var k__11173 = cljs.core.first.call(null, e);
        var v__11174 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__11173)) {
          return cljs.core.assoc.call(null, m, k__11173, f.call(null, cljs.core._lookup.call(null, m, k__11173, null), v__11174))
        }else {
          return cljs.core.assoc.call(null, m, k__11173, v__11174)
        }
      };
      var merge2__11177 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__11175, function() {
          var or__3824__auto____11176 = m1;
          if(cljs.core.truth_(or__3824__auto____11176)) {
            return or__3824__auto____11176
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__11177, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__11178) {
    var f = cljs.core.first(arglist__11178);
    var maps = cljs.core.rest(arglist__11178);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__11183 = cljs.core.ObjMap.EMPTY;
  var keys__11184 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__11184) {
      var key__11185 = cljs.core.first.call(null, keys__11184);
      var entry__11186 = cljs.core._lookup.call(null, map, key__11185, "\ufdd0'user/not-found");
      var G__11187 = cljs.core.not_EQ_.call(null, entry__11186, "\ufdd0'user/not-found") ? cljs.core.assoc.call(null, ret__11183, key__11185, entry__11186) : ret__11183;
      var G__11188 = cljs.core.next.call(null, keys__11184);
      ret__11183 = G__11187;
      keys__11184 = G__11188;
      continue
    }else {
      return ret__11183
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11192 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__11192.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11193 = this;
  var h__2239__auto____11194 = this__11193.__hash;
  if(!(h__2239__auto____11194 == null)) {
    return h__2239__auto____11194
  }else {
    var h__2239__auto____11195 = cljs.core.hash_iset.call(null, coll);
    this__11193.__hash = h__2239__auto____11195;
    return h__2239__auto____11195
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__11196 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__11197 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__11197.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11218 = null;
  var G__11218__2 = function(this_sym11198, k) {
    var this__11200 = this;
    var this_sym11198__11201 = this;
    var coll__11202 = this_sym11198__11201;
    return coll__11202.cljs$core$ILookup$_lookup$arity$2(coll__11202, k)
  };
  var G__11218__3 = function(this_sym11199, k, not_found) {
    var this__11200 = this;
    var this_sym11199__11203 = this;
    var coll__11204 = this_sym11199__11203;
    return coll__11204.cljs$core$ILookup$_lookup$arity$3(coll__11204, k, not_found)
  };
  G__11218 = function(this_sym11199, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11218__2.call(this, this_sym11199, k);
      case 3:
        return G__11218__3.call(this, this_sym11199, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11218
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym11190, args11191) {
  var this__11205 = this;
  return this_sym11190.call.apply(this_sym11190, [this_sym11190].concat(args11191.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11206 = this;
  return new cljs.core.PersistentHashSet(this__11206.meta, cljs.core.assoc.call(null, this__11206.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__11207 = this;
  var this__11208 = this;
  return cljs.core.pr_str.call(null, this__11208)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11209 = this;
  return cljs.core.keys.call(null, this__11209.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__11210 = this;
  return new cljs.core.PersistentHashSet(this__11210.meta, cljs.core.dissoc.call(null, this__11210.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11211 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11212 = this;
  var and__3822__auto____11213 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____11213) {
    var and__3822__auto____11214 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____11214) {
      return cljs.core.every_QMARK_.call(null, function(p1__11189_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__11189_SHARP_)
      }, other)
    }else {
      return and__3822__auto____11214
    }
  }else {
    return and__3822__auto____11213
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11215 = this;
  return new cljs.core.PersistentHashSet(meta, this__11215.hash_map, this__11215.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11216 = this;
  return this__11216.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11217 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__11217.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__11219 = cljs.core.count.call(null, items);
  var i__11220 = 0;
  var out__11221 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__11220 < len__11219) {
      var G__11222 = i__11220 + 1;
      var G__11223 = cljs.core.conj_BANG_.call(null, out__11221, items[i__11220]);
      i__11220 = G__11222;
      out__11221 = G__11223;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__11221)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11241 = null;
  var G__11241__2 = function(this_sym11227, k) {
    var this__11229 = this;
    var this_sym11227__11230 = this;
    var tcoll__11231 = this_sym11227__11230;
    if(cljs.core._lookup.call(null, this__11229.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__11241__3 = function(this_sym11228, k, not_found) {
    var this__11229 = this;
    var this_sym11228__11232 = this;
    var tcoll__11233 = this_sym11228__11232;
    if(cljs.core._lookup.call(null, this__11229.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__11241 = function(this_sym11228, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11241__2.call(this, this_sym11228, k);
      case 3:
        return G__11241__3.call(this, this_sym11228, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11241
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym11225, args11226) {
  var this__11234 = this;
  return this_sym11225.call.apply(this_sym11225, [this_sym11225].concat(args11226.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__11235 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__11236 = this;
  if(cljs.core._lookup.call(null, this__11236.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__11237 = this;
  return cljs.core.count.call(null, this__11237.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__11238 = this;
  this__11238.transient_map = cljs.core.dissoc_BANG_.call(null, this__11238.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__11239 = this;
  this__11239.transient_map = cljs.core.assoc_BANG_.call(null, this__11239.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11240 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__11240.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11244 = this;
  var h__2239__auto____11245 = this__11244.__hash;
  if(!(h__2239__auto____11245 == null)) {
    return h__2239__auto____11245
  }else {
    var h__2239__auto____11246 = cljs.core.hash_iset.call(null, coll);
    this__11244.__hash = h__2239__auto____11246;
    return h__2239__auto____11246
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__11247 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__11248 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__11248.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11274 = null;
  var G__11274__2 = function(this_sym11249, k) {
    var this__11251 = this;
    var this_sym11249__11252 = this;
    var coll__11253 = this_sym11249__11252;
    return coll__11253.cljs$core$ILookup$_lookup$arity$2(coll__11253, k)
  };
  var G__11274__3 = function(this_sym11250, k, not_found) {
    var this__11251 = this;
    var this_sym11250__11254 = this;
    var coll__11255 = this_sym11250__11254;
    return coll__11255.cljs$core$ILookup$_lookup$arity$3(coll__11255, k, not_found)
  };
  G__11274 = function(this_sym11250, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11274__2.call(this, this_sym11250, k);
      case 3:
        return G__11274__3.call(this, this_sym11250, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11274
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym11242, args11243) {
  var this__11256 = this;
  return this_sym11242.call.apply(this_sym11242, [this_sym11242].concat(args11243.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11257 = this;
  return new cljs.core.PersistentTreeSet(this__11257.meta, cljs.core.assoc.call(null, this__11257.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11258 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__11258.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__11259 = this;
  var this__11260 = this;
  return cljs.core.pr_str.call(null, this__11260)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__11261 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__11261.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__11262 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__11262.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__11263 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__11264 = this;
  return cljs.core._comparator.call(null, this__11264.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11265 = this;
  return cljs.core.keys.call(null, this__11265.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__11266 = this;
  return new cljs.core.PersistentTreeSet(this__11266.meta, cljs.core.dissoc.call(null, this__11266.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11267 = this;
  return cljs.core.count.call(null, this__11267.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11268 = this;
  var and__3822__auto____11269 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____11269) {
    var and__3822__auto____11270 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____11270) {
      return cljs.core.every_QMARK_.call(null, function(p1__11224_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__11224_SHARP_)
      }, other)
    }else {
      return and__3822__auto____11270
    }
  }else {
    return and__3822__auto____11269
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11271 = this;
  return new cljs.core.PersistentTreeSet(meta, this__11271.tree_map, this__11271.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11272 = this;
  return this__11272.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11273 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__11273.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__11279__delegate = function(keys) {
      var in__11277 = cljs.core.seq.call(null, keys);
      var out__11278 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__11277)) {
          var G__11280 = cljs.core.next.call(null, in__11277);
          var G__11281 = cljs.core.conj_BANG_.call(null, out__11278, cljs.core.first.call(null, in__11277));
          in__11277 = G__11280;
          out__11278 = G__11281;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__11278)
        }
        break
      }
    };
    var G__11279 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11279__delegate.call(this, keys)
    };
    G__11279.cljs$lang$maxFixedArity = 0;
    G__11279.cljs$lang$applyTo = function(arglist__11282) {
      var keys = cljs.core.seq(arglist__11282);
      return G__11279__delegate(keys)
    };
    G__11279.cljs$lang$arity$variadic = G__11279__delegate;
    return G__11279
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__11283) {
    var keys = cljs.core.seq(arglist__11283);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__11285) {
    var comparator = cljs.core.first(arglist__11285);
    var keys = cljs.core.rest(arglist__11285);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__11291 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____11292 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____11292)) {
        var e__11293 = temp__3971__auto____11292;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__11293))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__11291, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__11284_SHARP_) {
      var temp__3971__auto____11294 = cljs.core.find.call(null, smap, p1__11284_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____11294)) {
        var e__11295 = temp__3971__auto____11294;
        return cljs.core.second.call(null, e__11295)
      }else {
        return p1__11284_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__11325 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__11318, seen) {
        while(true) {
          var vec__11319__11320 = p__11318;
          var f__11321 = cljs.core.nth.call(null, vec__11319__11320, 0, null);
          var xs__11322 = vec__11319__11320;
          var temp__3974__auto____11323 = cljs.core.seq.call(null, xs__11322);
          if(temp__3974__auto____11323) {
            var s__11324 = temp__3974__auto____11323;
            if(cljs.core.contains_QMARK_.call(null, seen, f__11321)) {
              var G__11326 = cljs.core.rest.call(null, s__11324);
              var G__11327 = seen;
              p__11318 = G__11326;
              seen = G__11327;
              continue
            }else {
              return cljs.core.cons.call(null, f__11321, step.call(null, cljs.core.rest.call(null, s__11324), cljs.core.conj.call(null, seen, f__11321)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__11325.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__11330 = cljs.core.PersistentVector.EMPTY;
  var s__11331 = s;
  while(true) {
    if(cljs.core.next.call(null, s__11331)) {
      var G__11332 = cljs.core.conj.call(null, ret__11330, cljs.core.first.call(null, s__11331));
      var G__11333 = cljs.core.next.call(null, s__11331);
      ret__11330 = G__11332;
      s__11331 = G__11333;
      continue
    }else {
      return cljs.core.seq.call(null, ret__11330)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____11336 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____11336) {
        return or__3824__auto____11336
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__11337 = x.lastIndexOf("/");
      if(i__11337 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__11337 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____11340 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____11340) {
      return or__3824__auto____11340
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__11341 = x.lastIndexOf("/");
    if(i__11341 > -1) {
      return cljs.core.subs.call(null, x, 2, i__11341)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__11348 = cljs.core.ObjMap.EMPTY;
  var ks__11349 = cljs.core.seq.call(null, keys);
  var vs__11350 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____11351 = ks__11349;
      if(and__3822__auto____11351) {
        return vs__11350
      }else {
        return and__3822__auto____11351
      }
    }()) {
      var G__11352 = cljs.core.assoc.call(null, map__11348, cljs.core.first.call(null, ks__11349), cljs.core.first.call(null, vs__11350));
      var G__11353 = cljs.core.next.call(null, ks__11349);
      var G__11354 = cljs.core.next.call(null, vs__11350);
      map__11348 = G__11352;
      ks__11349 = G__11353;
      vs__11350 = G__11354;
      continue
    }else {
      return map__11348
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__11357__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11342_SHARP_, p2__11343_SHARP_) {
        return max_key.call(null, k, p1__11342_SHARP_, p2__11343_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__11357 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11357__delegate.call(this, k, x, y, more)
    };
    G__11357.cljs$lang$maxFixedArity = 3;
    G__11357.cljs$lang$applyTo = function(arglist__11358) {
      var k = cljs.core.first(arglist__11358);
      var x = cljs.core.first(cljs.core.next(arglist__11358));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11358)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11358)));
      return G__11357__delegate(k, x, y, more)
    };
    G__11357.cljs$lang$arity$variadic = G__11357__delegate;
    return G__11357
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__11359__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11355_SHARP_, p2__11356_SHARP_) {
        return min_key.call(null, k, p1__11355_SHARP_, p2__11356_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__11359 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11359__delegate.call(this, k, x, y, more)
    };
    G__11359.cljs$lang$maxFixedArity = 3;
    G__11359.cljs$lang$applyTo = function(arglist__11360) {
      var k = cljs.core.first(arglist__11360);
      var x = cljs.core.first(cljs.core.next(arglist__11360));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11360)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11360)));
      return G__11359__delegate(k, x, y, more)
    };
    G__11359.cljs$lang$arity$variadic = G__11359__delegate;
    return G__11359
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11363 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11363) {
        var s__11364 = temp__3974__auto____11363;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__11364), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__11364)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11367 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11367) {
      var s__11368 = temp__3974__auto____11367;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__11368)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__11368), take_while.call(null, pred, cljs.core.rest.call(null, s__11368)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__11370 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__11370.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__11382 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____11383 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____11383)) {
        var vec__11384__11385 = temp__3974__auto____11383;
        var e__11386 = cljs.core.nth.call(null, vec__11384__11385, 0, null);
        var s__11387 = vec__11384__11385;
        if(cljs.core.truth_(include__11382.call(null, e__11386))) {
          return s__11387
        }else {
          return cljs.core.next.call(null, s__11387)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11382, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11388 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____11388)) {
      var vec__11389__11390 = temp__3974__auto____11388;
      var e__11391 = cljs.core.nth.call(null, vec__11389__11390, 0, null);
      var s__11392 = vec__11389__11390;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__11391)) ? s__11392 : cljs.core.next.call(null, s__11392))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__11404 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____11405 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____11405)) {
        var vec__11406__11407 = temp__3974__auto____11405;
        var e__11408 = cljs.core.nth.call(null, vec__11406__11407, 0, null);
        var s__11409 = vec__11406__11407;
        if(cljs.core.truth_(include__11404.call(null, e__11408))) {
          return s__11409
        }else {
          return cljs.core.next.call(null, s__11409)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11404, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11410 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____11410)) {
      var vec__11411__11412 = temp__3974__auto____11410;
      var e__11413 = cljs.core.nth.call(null, vec__11411__11412, 0, null);
      var s__11414 = vec__11411__11412;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__11413)) ? s__11414 : cljs.core.next.call(null, s__11414))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__11415 = this;
  var h__2239__auto____11416 = this__11415.__hash;
  if(!(h__2239__auto____11416 == null)) {
    return h__2239__auto____11416
  }else {
    var h__2239__auto____11417 = cljs.core.hash_coll.call(null, rng);
    this__11415.__hash = h__2239__auto____11417;
    return h__2239__auto____11417
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__11418 = this;
  if(this__11418.step > 0) {
    if(this__11418.start + this__11418.step < this__11418.end) {
      return new cljs.core.Range(this__11418.meta, this__11418.start + this__11418.step, this__11418.end, this__11418.step, null)
    }else {
      return null
    }
  }else {
    if(this__11418.start + this__11418.step > this__11418.end) {
      return new cljs.core.Range(this__11418.meta, this__11418.start + this__11418.step, this__11418.end, this__11418.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__11419 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__11420 = this;
  var this__11421 = this;
  return cljs.core.pr_str.call(null, this__11421)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__11422 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__11423 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__11424 = this;
  if(this__11424.step > 0) {
    if(this__11424.start < this__11424.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__11424.start > this__11424.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__11425 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__11425.end - this__11425.start) / this__11425.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__11426 = this;
  return this__11426.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__11427 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__11427.meta, this__11427.start + this__11427.step, this__11427.end, this__11427.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__11428 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__11429 = this;
  return new cljs.core.Range(meta, this__11429.start, this__11429.end, this__11429.step, this__11429.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__11430 = this;
  return this__11430.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__11431 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11431.start + n * this__11431.step
  }else {
    if(function() {
      var and__3822__auto____11432 = this__11431.start > this__11431.end;
      if(and__3822__auto____11432) {
        return this__11431.step === 0
      }else {
        return and__3822__auto____11432
      }
    }()) {
      return this__11431.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__11433 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11433.start + n * this__11433.step
  }else {
    if(function() {
      var and__3822__auto____11434 = this__11433.start > this__11433.end;
      if(and__3822__auto____11434) {
        return this__11433.step === 0
      }else {
        return and__3822__auto____11434
      }
    }()) {
      return this__11433.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__11435 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11435.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11438 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11438) {
      var s__11439 = temp__3974__auto____11438;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__11439), take_nth.call(null, n, cljs.core.drop.call(null, n, s__11439)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11446 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11446) {
      var s__11447 = temp__3974__auto____11446;
      var fst__11448 = cljs.core.first.call(null, s__11447);
      var fv__11449 = f.call(null, fst__11448);
      var run__11450 = cljs.core.cons.call(null, fst__11448, cljs.core.take_while.call(null, function(p1__11440_SHARP_) {
        return cljs.core._EQ_.call(null, fv__11449, f.call(null, p1__11440_SHARP_))
      }, cljs.core.next.call(null, s__11447)));
      return cljs.core.cons.call(null, run__11450, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__11450), s__11447))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____11465 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____11465) {
        var s__11466 = temp__3971__auto____11465;
        return reductions.call(null, f, cljs.core.first.call(null, s__11466), cljs.core.rest.call(null, s__11466))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11467 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11467) {
        var s__11468 = temp__3974__auto____11467;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__11468)), cljs.core.rest.call(null, s__11468))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11471 = null;
      var G__11471__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__11471__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__11471__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__11471__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__11471__4 = function() {
        var G__11472__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__11472 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11472__delegate.call(this, x, y, z, args)
        };
        G__11472.cljs$lang$maxFixedArity = 3;
        G__11472.cljs$lang$applyTo = function(arglist__11473) {
          var x = cljs.core.first(arglist__11473);
          var y = cljs.core.first(cljs.core.next(arglist__11473));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11473)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11473)));
          return G__11472__delegate(x, y, z, args)
        };
        G__11472.cljs$lang$arity$variadic = G__11472__delegate;
        return G__11472
      }();
      G__11471 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11471__0.call(this);
          case 1:
            return G__11471__1.call(this, x);
          case 2:
            return G__11471__2.call(this, x, y);
          case 3:
            return G__11471__3.call(this, x, y, z);
          default:
            return G__11471__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11471.cljs$lang$maxFixedArity = 3;
      G__11471.cljs$lang$applyTo = G__11471__4.cljs$lang$applyTo;
      return G__11471
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11474 = null;
      var G__11474__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__11474__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__11474__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__11474__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__11474__4 = function() {
        var G__11475__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__11475 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11475__delegate.call(this, x, y, z, args)
        };
        G__11475.cljs$lang$maxFixedArity = 3;
        G__11475.cljs$lang$applyTo = function(arglist__11476) {
          var x = cljs.core.first(arglist__11476);
          var y = cljs.core.first(cljs.core.next(arglist__11476));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11476)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11476)));
          return G__11475__delegate(x, y, z, args)
        };
        G__11475.cljs$lang$arity$variadic = G__11475__delegate;
        return G__11475
      }();
      G__11474 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11474__0.call(this);
          case 1:
            return G__11474__1.call(this, x);
          case 2:
            return G__11474__2.call(this, x, y);
          case 3:
            return G__11474__3.call(this, x, y, z);
          default:
            return G__11474__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11474.cljs$lang$maxFixedArity = 3;
      G__11474.cljs$lang$applyTo = G__11474__4.cljs$lang$applyTo;
      return G__11474
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11477 = null;
      var G__11477__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__11477__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__11477__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__11477__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__11477__4 = function() {
        var G__11478__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__11478 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11478__delegate.call(this, x, y, z, args)
        };
        G__11478.cljs$lang$maxFixedArity = 3;
        G__11478.cljs$lang$applyTo = function(arglist__11479) {
          var x = cljs.core.first(arglist__11479);
          var y = cljs.core.first(cljs.core.next(arglist__11479));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11479)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11479)));
          return G__11478__delegate(x, y, z, args)
        };
        G__11478.cljs$lang$arity$variadic = G__11478__delegate;
        return G__11478
      }();
      G__11477 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11477__0.call(this);
          case 1:
            return G__11477__1.call(this, x);
          case 2:
            return G__11477__2.call(this, x, y);
          case 3:
            return G__11477__3.call(this, x, y, z);
          default:
            return G__11477__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11477.cljs$lang$maxFixedArity = 3;
      G__11477.cljs$lang$applyTo = G__11477__4.cljs$lang$applyTo;
      return G__11477
    }()
  };
  var juxt__4 = function() {
    var G__11480__delegate = function(f, g, h, fs) {
      var fs__11470 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__11481 = null;
        var G__11481__0 = function() {
          return cljs.core.reduce.call(null, function(p1__11451_SHARP_, p2__11452_SHARP_) {
            return cljs.core.conj.call(null, p1__11451_SHARP_, p2__11452_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__11470)
        };
        var G__11481__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__11453_SHARP_, p2__11454_SHARP_) {
            return cljs.core.conj.call(null, p1__11453_SHARP_, p2__11454_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__11470)
        };
        var G__11481__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__11455_SHARP_, p2__11456_SHARP_) {
            return cljs.core.conj.call(null, p1__11455_SHARP_, p2__11456_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__11470)
        };
        var G__11481__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__11457_SHARP_, p2__11458_SHARP_) {
            return cljs.core.conj.call(null, p1__11457_SHARP_, p2__11458_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__11470)
        };
        var G__11481__4 = function() {
          var G__11482__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__11459_SHARP_, p2__11460_SHARP_) {
              return cljs.core.conj.call(null, p1__11459_SHARP_, cljs.core.apply.call(null, p2__11460_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__11470)
          };
          var G__11482 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__11482__delegate.call(this, x, y, z, args)
          };
          G__11482.cljs$lang$maxFixedArity = 3;
          G__11482.cljs$lang$applyTo = function(arglist__11483) {
            var x = cljs.core.first(arglist__11483);
            var y = cljs.core.first(cljs.core.next(arglist__11483));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11483)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11483)));
            return G__11482__delegate(x, y, z, args)
          };
          G__11482.cljs$lang$arity$variadic = G__11482__delegate;
          return G__11482
        }();
        G__11481 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__11481__0.call(this);
            case 1:
              return G__11481__1.call(this, x);
            case 2:
              return G__11481__2.call(this, x, y);
            case 3:
              return G__11481__3.call(this, x, y, z);
            default:
              return G__11481__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__11481.cljs$lang$maxFixedArity = 3;
        G__11481.cljs$lang$applyTo = G__11481__4.cljs$lang$applyTo;
        return G__11481
      }()
    };
    var G__11480 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11480__delegate.call(this, f, g, h, fs)
    };
    G__11480.cljs$lang$maxFixedArity = 3;
    G__11480.cljs$lang$applyTo = function(arglist__11484) {
      var f = cljs.core.first(arglist__11484);
      var g = cljs.core.first(cljs.core.next(arglist__11484));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11484)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11484)));
      return G__11480__delegate(f, g, h, fs)
    };
    G__11480.cljs$lang$arity$variadic = G__11480__delegate;
    return G__11480
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__11487 = cljs.core.next.call(null, coll);
        coll = G__11487;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____11486 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____11486) {
          return n > 0
        }else {
          return and__3822__auto____11486
        }
      }())) {
        var G__11488 = n - 1;
        var G__11489 = cljs.core.next.call(null, coll);
        n = G__11488;
        coll = G__11489;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__11491 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__11491), s)) {
    if(cljs.core.count.call(null, matches__11491) === 1) {
      return cljs.core.first.call(null, matches__11491)
    }else {
      return cljs.core.vec.call(null, matches__11491)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__11493 = re.exec(s);
  if(matches__11493 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__11493) === 1) {
      return cljs.core.first.call(null, matches__11493)
    }else {
      return cljs.core.vec.call(null, matches__11493)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__11498 = cljs.core.re_find.call(null, re, s);
  var match_idx__11499 = s.search(re);
  var match_str__11500 = cljs.core.coll_QMARK_.call(null, match_data__11498) ? cljs.core.first.call(null, match_data__11498) : match_data__11498;
  var post_match__11501 = cljs.core.subs.call(null, s, match_idx__11499 + cljs.core.count.call(null, match_str__11500));
  if(cljs.core.truth_(match_data__11498)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__11498, re_seq.call(null, re, post_match__11501))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11508__11509 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___11510 = cljs.core.nth.call(null, vec__11508__11509, 0, null);
  var flags__11511 = cljs.core.nth.call(null, vec__11508__11509, 1, null);
  var pattern__11512 = cljs.core.nth.call(null, vec__11508__11509, 2, null);
  return new RegExp(pattern__11512, flags__11511)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__11502_SHARP_) {
    return print_one.call(null, p1__11502_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____11522 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____11522)) {
            var and__3822__auto____11526 = function() {
              var G__11523__11524 = obj;
              if(G__11523__11524) {
                if(function() {
                  var or__3824__auto____11525 = G__11523__11524.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____11525) {
                    return or__3824__auto____11525
                  }else {
                    return G__11523__11524.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11523__11524.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11523__11524)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11523__11524)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____11526)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____11526
            }
          }else {
            return and__3822__auto____11522
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____11527 = !(obj == null);
          if(and__3822__auto____11527) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____11527
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__11528__11529 = obj;
          if(G__11528__11529) {
            if(function() {
              var or__3824__auto____11530 = G__11528__11529.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____11530) {
                return or__3824__auto____11530
              }else {
                return G__11528__11529.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__11528__11529.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11528__11529)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11528__11529)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__11550 = new goog.string.StringBuffer;
  var G__11551__11552 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11551__11552) {
    var string__11553 = cljs.core.first.call(null, G__11551__11552);
    var G__11551__11554 = G__11551__11552;
    while(true) {
      sb__11550.append(string__11553);
      var temp__3974__auto____11555 = cljs.core.next.call(null, G__11551__11554);
      if(temp__3974__auto____11555) {
        var G__11551__11556 = temp__3974__auto____11555;
        var G__11569 = cljs.core.first.call(null, G__11551__11556);
        var G__11570 = G__11551__11556;
        string__11553 = G__11569;
        G__11551__11554 = G__11570;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11557__11558 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11557__11558) {
    var obj__11559 = cljs.core.first.call(null, G__11557__11558);
    var G__11557__11560 = G__11557__11558;
    while(true) {
      sb__11550.append(" ");
      var G__11561__11562 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11559, opts));
      if(G__11561__11562) {
        var string__11563 = cljs.core.first.call(null, G__11561__11562);
        var G__11561__11564 = G__11561__11562;
        while(true) {
          sb__11550.append(string__11563);
          var temp__3974__auto____11565 = cljs.core.next.call(null, G__11561__11564);
          if(temp__3974__auto____11565) {
            var G__11561__11566 = temp__3974__auto____11565;
            var G__11571 = cljs.core.first.call(null, G__11561__11566);
            var G__11572 = G__11561__11566;
            string__11563 = G__11571;
            G__11561__11564 = G__11572;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11567 = cljs.core.next.call(null, G__11557__11560);
      if(temp__3974__auto____11567) {
        var G__11557__11568 = temp__3974__auto____11567;
        var G__11573 = cljs.core.first.call(null, G__11557__11568);
        var G__11574 = G__11557__11568;
        obj__11559 = G__11573;
        G__11557__11560 = G__11574;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__11550
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__11576 = cljs.core.pr_sb.call(null, objs, opts);
  sb__11576.append("\n");
  return[cljs.core.str(sb__11576)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__11595__11596 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11595__11596) {
    var string__11597 = cljs.core.first.call(null, G__11595__11596);
    var G__11595__11598 = G__11595__11596;
    while(true) {
      cljs.core.string_print.call(null, string__11597);
      var temp__3974__auto____11599 = cljs.core.next.call(null, G__11595__11598);
      if(temp__3974__auto____11599) {
        var G__11595__11600 = temp__3974__auto____11599;
        var G__11613 = cljs.core.first.call(null, G__11595__11600);
        var G__11614 = G__11595__11600;
        string__11597 = G__11613;
        G__11595__11598 = G__11614;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11601__11602 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11601__11602) {
    var obj__11603 = cljs.core.first.call(null, G__11601__11602);
    var G__11601__11604 = G__11601__11602;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__11605__11606 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11603, opts));
      if(G__11605__11606) {
        var string__11607 = cljs.core.first.call(null, G__11605__11606);
        var G__11605__11608 = G__11605__11606;
        while(true) {
          cljs.core.string_print.call(null, string__11607);
          var temp__3974__auto____11609 = cljs.core.next.call(null, G__11605__11608);
          if(temp__3974__auto____11609) {
            var G__11605__11610 = temp__3974__auto____11609;
            var G__11615 = cljs.core.first.call(null, G__11605__11610);
            var G__11616 = G__11605__11610;
            string__11607 = G__11615;
            G__11605__11608 = G__11616;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11611 = cljs.core.next.call(null, G__11601__11604);
      if(temp__3974__auto____11611) {
        var G__11601__11612 = temp__3974__auto____11611;
        var G__11617 = cljs.core.first.call(null, G__11601__11612);
        var G__11618 = G__11601__11612;
        obj__11603 = G__11617;
        G__11601__11604 = G__11618;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11619) {
    var objs = cljs.core.seq(arglist__11619);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11620) {
    var objs = cljs.core.seq(arglist__11620);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11621) {
    var objs = cljs.core.seq(arglist__11621);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11622) {
    var objs = cljs.core.seq(arglist__11622);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11623) {
    var objs = cljs.core.seq(arglist__11623);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11624) {
    var objs = cljs.core.seq(arglist__11624);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11625) {
    var objs = cljs.core.seq(arglist__11625);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11626) {
    var objs = cljs.core.seq(arglist__11626);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__11627) {
    var fmt = cljs.core.first(arglist__11627);
    var args = cljs.core.rest(arglist__11627);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11628 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11628, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11629 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11629, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11630 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11630, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____11631 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____11631)) {
        var nspc__11632 = temp__3974__auto____11631;
        return[cljs.core.str(nspc__11632), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____11633 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____11633)) {
          var nspc__11634 = temp__3974__auto____11633;
          return[cljs.core.str(nspc__11634), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11635 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11635, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__11637 = function(n, len) {
    var ns__11636 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11636) < len) {
        var G__11639 = [cljs.core.str("0"), cljs.core.str(ns__11636)].join("");
        ns__11636 = G__11639;
        continue
      }else {
        return ns__11636
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__11637.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__11637.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__11637.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11637.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11637.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__11637.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11638 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11638, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11640 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11641 = this;
  var G__11642__11643 = cljs.core.seq.call(null, this__11641.watches);
  if(G__11642__11643) {
    var G__11645__11647 = cljs.core.first.call(null, G__11642__11643);
    var vec__11646__11648 = G__11645__11647;
    var key__11649 = cljs.core.nth.call(null, vec__11646__11648, 0, null);
    var f__11650 = cljs.core.nth.call(null, vec__11646__11648, 1, null);
    var G__11642__11651 = G__11642__11643;
    var G__11645__11652 = G__11645__11647;
    var G__11642__11653 = G__11642__11651;
    while(true) {
      var vec__11654__11655 = G__11645__11652;
      var key__11656 = cljs.core.nth.call(null, vec__11654__11655, 0, null);
      var f__11657 = cljs.core.nth.call(null, vec__11654__11655, 1, null);
      var G__11642__11658 = G__11642__11653;
      f__11657.call(null, key__11656, this$, oldval, newval);
      var temp__3974__auto____11659 = cljs.core.next.call(null, G__11642__11658);
      if(temp__3974__auto____11659) {
        var G__11642__11660 = temp__3974__auto____11659;
        var G__11667 = cljs.core.first.call(null, G__11642__11660);
        var G__11668 = G__11642__11660;
        G__11645__11652 = G__11667;
        G__11642__11653 = G__11668;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11661 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11661.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11662 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11662.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11663 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__11663.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__11664 = this;
  return this__11664.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11665 = this;
  return this__11665.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11666 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__11680__delegate = function(x, p__11669) {
      var map__11675__11676 = p__11669;
      var map__11675__11677 = cljs.core.seq_QMARK_.call(null, map__11675__11676) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11675__11676) : map__11675__11676;
      var validator__11678 = cljs.core._lookup.call(null, map__11675__11677, "\ufdd0'validator", null);
      var meta__11679 = cljs.core._lookup.call(null, map__11675__11677, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__11679, validator__11678, null)
    };
    var G__11680 = function(x, var_args) {
      var p__11669 = null;
      if(goog.isDef(var_args)) {
        p__11669 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11680__delegate.call(this, x, p__11669)
    };
    G__11680.cljs$lang$maxFixedArity = 1;
    G__11680.cljs$lang$applyTo = function(arglist__11681) {
      var x = cljs.core.first(arglist__11681);
      var p__11669 = cljs.core.rest(arglist__11681);
      return G__11680__delegate(x, p__11669)
    };
    G__11680.cljs$lang$arity$variadic = G__11680__delegate;
    return G__11680
  }();
  atom = function(x, var_args) {
    var p__11669 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____11685 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____11685)) {
    var validate__11686 = temp__3974__auto____11685;
    if(cljs.core.truth_(validate__11686.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__11687 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__11687, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__11688__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__11688 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11688__delegate.call(this, a, f, x, y, z, more)
    };
    G__11688.cljs$lang$maxFixedArity = 5;
    G__11688.cljs$lang$applyTo = function(arglist__11689) {
      var a = cljs.core.first(arglist__11689);
      var f = cljs.core.first(cljs.core.next(arglist__11689));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11689)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11689))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11689)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11689)))));
      return G__11688__delegate(a, f, x, y, z, more)
    };
    G__11688.cljs$lang$arity$variadic = G__11688__delegate;
    return G__11688
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11690) {
    var iref = cljs.core.first(arglist__11690);
    var f = cljs.core.first(cljs.core.next(arglist__11690));
    var args = cljs.core.rest(cljs.core.next(arglist__11690));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__11691 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__11691.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11692 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__11692.state, function(p__11693) {
    var map__11694__11695 = p__11693;
    var map__11694__11696 = cljs.core.seq_QMARK_.call(null, map__11694__11695) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11694__11695) : map__11694__11695;
    var curr_state__11697 = map__11694__11696;
    var done__11698 = cljs.core._lookup.call(null, map__11694__11696, "\ufdd0'done", null);
    if(cljs.core.truth_(done__11698)) {
      return curr_state__11697
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__11692.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11719__11720 = options;
    var map__11719__11721 = cljs.core.seq_QMARK_.call(null, map__11719__11720) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11719__11720) : map__11719__11720;
    var keywordize_keys__11722 = cljs.core._lookup.call(null, map__11719__11721, "\ufdd0'keywordize-keys", null);
    var keyfn__11723 = cljs.core.truth_(keywordize_keys__11722) ? cljs.core.keyword : cljs.core.str;
    var f__11738 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2509__auto____11737 = function iter__11731(s__11732) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11732__11735 = s__11732;
                    while(true) {
                      if(cljs.core.seq.call(null, s__11732__11735)) {
                        var k__11736 = cljs.core.first.call(null, s__11732__11735);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11723.call(null, k__11736), thisfn.call(null, x[k__11736])], true), iter__11731.call(null, cljs.core.rest.call(null, s__11732__11735)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2509__auto____11737.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11738.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11739) {
    var x = cljs.core.first(arglist__11739);
    var options = cljs.core.rest(arglist__11739);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11744 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11748__delegate = function(args) {
      var temp__3971__auto____11745 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11744), args, null);
      if(cljs.core.truth_(temp__3971__auto____11745)) {
        var v__11746 = temp__3971__auto____11745;
        return v__11746
      }else {
        var ret__11747 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11744, cljs.core.assoc, args, ret__11747);
        return ret__11747
      }
    };
    var G__11748 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11748__delegate.call(this, args)
    };
    G__11748.cljs$lang$maxFixedArity = 0;
    G__11748.cljs$lang$applyTo = function(arglist__11749) {
      var args = cljs.core.seq(arglist__11749);
      return G__11748__delegate(args)
    };
    G__11748.cljs$lang$arity$variadic = G__11748__delegate;
    return G__11748
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11751 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11751)) {
        var G__11752 = ret__11751;
        f = G__11752;
        continue
      }else {
        return ret__11751
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11753__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11753 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11753__delegate.call(this, f, args)
    };
    G__11753.cljs$lang$maxFixedArity = 1;
    G__11753.cljs$lang$applyTo = function(arglist__11754) {
      var f = cljs.core.first(arglist__11754);
      var args = cljs.core.rest(arglist__11754);
      return G__11753__delegate(f, args)
    };
    G__11753.cljs$lang$arity$variadic = G__11753__delegate;
    return G__11753
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11756 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11756, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11756, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____11765 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____11765) {
      return or__3824__auto____11765
    }else {
      var or__3824__auto____11766 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____11766) {
        return or__3824__auto____11766
      }else {
        var and__3822__auto____11767 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____11767) {
          var and__3822__auto____11768 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____11768) {
            var and__3822__auto____11769 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____11769) {
              var ret__11770 = true;
              var i__11771 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____11772 = cljs.core.not.call(null, ret__11770);
                  if(or__3824__auto____11772) {
                    return or__3824__auto____11772
                  }else {
                    return i__11771 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11770
                }else {
                  var G__11773 = isa_QMARK_.call(null, h, child.call(null, i__11771), parent.call(null, i__11771));
                  var G__11774 = i__11771 + 1;
                  ret__11770 = G__11773;
                  i__11771 = G__11774;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____11769
            }
          }else {
            return and__3822__auto____11768
          }
        }else {
          return and__3822__auto____11767
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__11783 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11784 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11785 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11786 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____11787 = cljs.core.contains_QMARK_.call(null, tp__11783.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11785.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11785.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11783, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__11786.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11784, parent, ta__11785), "\ufdd0'descendants":tf__11786.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__11785, tag, td__11784)})
    }();
    if(cljs.core.truth_(or__3824__auto____11787)) {
      return or__3824__auto____11787
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11792 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11793 = cljs.core.truth_(parentMap__11792.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11792.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__11794 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11793)) ? cljs.core.assoc.call(null, parentMap__11792, tag, childsParents__11793) : cljs.core.dissoc.call(null, parentMap__11792, tag);
    var deriv_seq__11795 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11775_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11775_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11775_SHARP_), cljs.core.second.call(null, p1__11775_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11794)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11792.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11776_SHARP_, p2__11777_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11776_SHARP_, p2__11777_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11795))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11803 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____11805 = cljs.core.truth_(function() {
    var and__3822__auto____11804 = xprefs__11803;
    if(cljs.core.truth_(and__3822__auto____11804)) {
      return xprefs__11803.call(null, y)
    }else {
      return and__3822__auto____11804
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____11805)) {
    return or__3824__auto____11805
  }else {
    var or__3824__auto____11807 = function() {
      var ps__11806 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11806) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11806), prefer_table))) {
          }else {
          }
          var G__11810 = cljs.core.rest.call(null, ps__11806);
          ps__11806 = G__11810;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____11807)) {
      return or__3824__auto____11807
    }else {
      var or__3824__auto____11809 = function() {
        var ps__11808 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11808) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11808), y, prefer_table))) {
            }else {
            }
            var G__11811 = cljs.core.rest.call(null, ps__11808);
            ps__11808 = G__11811;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11809)) {
        return or__3824__auto____11809
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____11813 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____11813)) {
    return or__3824__auto____11813
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11831 = cljs.core.reduce.call(null, function(be, p__11823) {
    var vec__11824__11825 = p__11823;
    var k__11826 = cljs.core.nth.call(null, vec__11824__11825, 0, null);
    var ___11827 = cljs.core.nth.call(null, vec__11824__11825, 1, null);
    var e__11828 = vec__11824__11825;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11826)) {
      var be2__11830 = cljs.core.truth_(function() {
        var or__3824__auto____11829 = be == null;
        if(or__3824__auto____11829) {
          return or__3824__auto____11829
        }else {
          return cljs.core.dominates.call(null, k__11826, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11828 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11830), k__11826, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11826), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11830)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11830
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11831)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11831));
      return cljs.core.second.call(null, best_entry__11831)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____11836 = mf;
    if(and__3822__auto____11836) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____11836
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2410__auto____11837 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11838 = cljs.core._reset[goog.typeOf(x__2410__auto____11837)];
      if(or__3824__auto____11838) {
        return or__3824__auto____11838
      }else {
        var or__3824__auto____11839 = cljs.core._reset["_"];
        if(or__3824__auto____11839) {
          return or__3824__auto____11839
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____11844 = mf;
    if(and__3822__auto____11844) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____11844
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2410__auto____11845 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11846 = cljs.core._add_method[goog.typeOf(x__2410__auto____11845)];
      if(or__3824__auto____11846) {
        return or__3824__auto____11846
      }else {
        var or__3824__auto____11847 = cljs.core._add_method["_"];
        if(or__3824__auto____11847) {
          return or__3824__auto____11847
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11852 = mf;
    if(and__3822__auto____11852) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____11852
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2410__auto____11853 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11854 = cljs.core._remove_method[goog.typeOf(x__2410__auto____11853)];
      if(or__3824__auto____11854) {
        return or__3824__auto____11854
      }else {
        var or__3824__auto____11855 = cljs.core._remove_method["_"];
        if(or__3824__auto____11855) {
          return or__3824__auto____11855
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____11860 = mf;
    if(and__3822__auto____11860) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____11860
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2410__auto____11861 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11862 = cljs.core._prefer_method[goog.typeOf(x__2410__auto____11861)];
      if(or__3824__auto____11862) {
        return or__3824__auto____11862
      }else {
        var or__3824__auto____11863 = cljs.core._prefer_method["_"];
        if(or__3824__auto____11863) {
          return or__3824__auto____11863
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11868 = mf;
    if(and__3822__auto____11868) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____11868
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2410__auto____11869 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11870 = cljs.core._get_method[goog.typeOf(x__2410__auto____11869)];
      if(or__3824__auto____11870) {
        return or__3824__auto____11870
      }else {
        var or__3824__auto____11871 = cljs.core._get_method["_"];
        if(or__3824__auto____11871) {
          return or__3824__auto____11871
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____11876 = mf;
    if(and__3822__auto____11876) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____11876
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2410__auto____11877 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11878 = cljs.core._methods[goog.typeOf(x__2410__auto____11877)];
      if(or__3824__auto____11878) {
        return or__3824__auto____11878
      }else {
        var or__3824__auto____11879 = cljs.core._methods["_"];
        if(or__3824__auto____11879) {
          return or__3824__auto____11879
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____11884 = mf;
    if(and__3822__auto____11884) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____11884
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2410__auto____11885 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11886 = cljs.core._prefers[goog.typeOf(x__2410__auto____11885)];
      if(or__3824__auto____11886) {
        return or__3824__auto____11886
      }else {
        var or__3824__auto____11887 = cljs.core._prefers["_"];
        if(or__3824__auto____11887) {
          return or__3824__auto____11887
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____11892 = mf;
    if(and__3822__auto____11892) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____11892
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2410__auto____11893 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11894 = cljs.core._dispatch[goog.typeOf(x__2410__auto____11893)];
      if(or__3824__auto____11894) {
        return or__3824__auto____11894
      }else {
        var or__3824__auto____11895 = cljs.core._dispatch["_"];
        if(or__3824__auto____11895) {
          return or__3824__auto____11895
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11898 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11899 = cljs.core._get_method.call(null, mf, dispatch_val__11898);
  if(cljs.core.truth_(target_fn__11899)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11898)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11899, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11900 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11901 = this;
  cljs.core.swap_BANG_.call(null, this__11901.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11901.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11901.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11901.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11902 = this;
  cljs.core.swap_BANG_.call(null, this__11902.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11902.method_cache, this__11902.method_table, this__11902.cached_hierarchy, this__11902.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11903 = this;
  cljs.core.swap_BANG_.call(null, this__11903.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11903.method_cache, this__11903.method_table, this__11903.cached_hierarchy, this__11903.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11904 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11904.cached_hierarchy), cljs.core.deref.call(null, this__11904.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11904.method_cache, this__11904.method_table, this__11904.cached_hierarchy, this__11904.hierarchy)
  }
  var temp__3971__auto____11905 = cljs.core.deref.call(null, this__11904.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____11905)) {
    var target_fn__11906 = temp__3971__auto____11905;
    return target_fn__11906
  }else {
    var temp__3971__auto____11907 = cljs.core.find_and_cache_best_method.call(null, this__11904.name, dispatch_val, this__11904.hierarchy, this__11904.method_table, this__11904.prefer_table, this__11904.method_cache, this__11904.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____11907)) {
      var target_fn__11908 = temp__3971__auto____11907;
      return target_fn__11908
    }else {
      return cljs.core.deref.call(null, this__11904.method_table).call(null, this__11904.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11909 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11909.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11909.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11909.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11909.method_cache, this__11909.method_table, this__11909.cached_hierarchy, this__11909.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11910 = this;
  return cljs.core.deref.call(null, this__11910.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11911 = this;
  return cljs.core.deref.call(null, this__11911.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11912 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11912.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11914__delegate = function(_, args) {
    var self__11913 = this;
    return cljs.core._dispatch.call(null, self__11913, args)
  };
  var G__11914 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11914__delegate.call(this, _, args)
  };
  G__11914.cljs$lang$maxFixedArity = 1;
  G__11914.cljs$lang$applyTo = function(arglist__11915) {
    var _ = cljs.core.first(arglist__11915);
    var args = cljs.core.rest(arglist__11915);
    return G__11914__delegate(_, args)
  };
  G__11914.cljs$lang$arity$variadic = G__11914__delegate;
  return G__11914
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11916 = this;
  return cljs.core._dispatch.call(null, self__11916, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11917 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11919, _) {
  var this__11918 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11918.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11920 = this;
  var and__3822__auto____11921 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____11921) {
    return this__11920.uuid === other.uuid
  }else {
    return and__3822__auto____11921
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__11922 = this;
  var this__11923 = this;
  return cljs.core.pr_str.call(null, this__11923)
};
cljs.core.UUID;
goog.provide("onedit.vi.core");
goog.require("cljs.core");
onedit.vi.core.mode = null;
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("onedit.core");
goog.require("cljs.core");
goog.require("goog.debug.Logger");
goog.require("goog.dom");
onedit.core.logger = goog.debug.Logger.getLogger("onedit");
onedit.core.log = function log(p1__7157_SHARP_) {
  return onedit.core.logger.info(p1__7157_SHARP_)
};
onedit.core.local = window.localStorage;
onedit.core.Mode = {};
onedit.core.action = function action(mode, editor, e) {
  if(function() {
    var and__3822__auto____7162 = mode;
    if(and__3822__auto____7162) {
      return mode.onedit$core$Mode$action$arity$3
    }else {
      return and__3822__auto____7162
    }
  }()) {
    return mode.onedit$core$Mode$action$arity$3(mode, editor, e)
  }else {
    var x__2410__auto____7163 = mode == null ? null : mode;
    return function() {
      var or__3824__auto____7164 = onedit.core.action[goog.typeOf(x__2410__auto____7163)];
      if(or__3824__auto____7164) {
        return or__3824__auto____7164
      }else {
        var or__3824__auto____7165 = onedit.core.action["_"];
        if(or__3824__auto____7165) {
          return or__3824__auto____7165
        }else {
          throw cljs.core.missing_protocol.call(null, "Mode.action", mode);
        }
      }
    }().call(null, mode, editor, e)
  }
};
onedit.core.IEditor = {};
onedit.core.mode = function mode(this$) {
  if(function() {
    var and__3822__auto____7170 = this$;
    if(and__3822__auto____7170) {
      return this$.onedit$core$IEditor$mode$arity$1
    }else {
      return and__3822__auto____7170
    }
  }()) {
    return this$.onedit$core$IEditor$mode$arity$1(this$)
  }else {
    var x__2410__auto____7171 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7172 = onedit.core.mode[goog.typeOf(x__2410__auto____7171)];
      if(or__3824__auto____7172) {
        return or__3824__auto____7172
      }else {
        var or__3824__auto____7173 = onedit.core.mode["_"];
        if(or__3824__auto____7173) {
          return or__3824__auto____7173
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditor.mode", this$);
        }
      }
    }().call(null, this$)
  }
};
onedit.core.buffer = function buffer(this$) {
  if(function() {
    var and__3822__auto____7178 = this$;
    if(and__3822__auto____7178) {
      return this$.onedit$core$IEditor$buffer$arity$1
    }else {
      return and__3822__auto____7178
    }
  }()) {
    return this$.onedit$core$IEditor$buffer$arity$1(this$)
  }else {
    var x__2410__auto____7179 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7180 = onedit.core.buffer[goog.typeOf(x__2410__auto____7179)];
      if(or__3824__auto____7180) {
        return or__3824__auto____7180
      }else {
        var or__3824__auto____7181 = onedit.core.buffer["_"];
        if(or__3824__auto____7181) {
          return or__3824__auto____7181
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditor.buffer", this$);
        }
      }
    }().call(null, this$)
  }
};
onedit.core.minibuffer = function minibuffer(this$) {
  if(function() {
    var and__3822__auto____7186 = this$;
    if(and__3822__auto____7186) {
      return this$.onedit$core$IEditor$minibuffer$arity$1
    }else {
      return and__3822__auto____7186
    }
  }()) {
    return this$.onedit$core$IEditor$minibuffer$arity$1(this$)
  }else {
    var x__2410__auto____7187 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7188 = onedit.core.minibuffer[goog.typeOf(x__2410__auto____7187)];
      if(or__3824__auto____7188) {
        return or__3824__auto____7188
      }else {
        var or__3824__auto____7189 = onedit.core.minibuffer["_"];
        if(or__3824__auto____7189) {
          return or__3824__auto____7189
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditor.minibuffer", this$);
        }
      }
    }().call(null, this$)
  }
};
onedit.core.key_handler = function key_handler(this$) {
  if(function() {
    var and__3822__auto____7194 = this$;
    if(and__3822__auto____7194) {
      return this$.onedit$core$IEditor$key_handler$arity$1
    }else {
      return and__3822__auto____7194
    }
  }()) {
    return this$.onedit$core$IEditor$key_handler$arity$1(this$)
  }else {
    var x__2410__auto____7195 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7196 = onedit.core.key_handler[goog.typeOf(x__2410__auto____7195)];
      if(or__3824__auto____7196) {
        return or__3824__auto____7196
      }else {
        var or__3824__auto____7197 = onedit.core.key_handler["_"];
        if(or__3824__auto____7197) {
          return or__3824__auto____7197
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditor.key-handler", this$);
        }
      }
    }().call(null, this$)
  }
};
onedit.core.normal = function normal(this$) {
  if(function() {
    var and__3822__auto____7202 = this$;
    if(and__3822__auto____7202) {
      return this$.onedit$core$IEditor$normal$arity$1
    }else {
      return and__3822__auto____7202
    }
  }()) {
    return this$.onedit$core$IEditor$normal$arity$1(this$)
  }else {
    var x__2410__auto____7203 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7204 = onedit.core.normal[goog.typeOf(x__2410__auto____7203)];
      if(or__3824__auto____7204) {
        return or__3824__auto____7204
      }else {
        var or__3824__auto____7205 = onedit.core.normal["_"];
        if(or__3824__auto____7205) {
          return or__3824__auto____7205
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditor.normal", this$);
        }
      }
    }().call(null, this$)
  }
};
onedit.core.cursor = function cursor(this$) {
  if(function() {
    var and__3822__auto____7210 = this$;
    if(and__3822__auto____7210) {
      return this$.onedit$core$IEditor$cursor$arity$1
    }else {
      return and__3822__auto____7210
    }
  }()) {
    return this$.onedit$core$IEditor$cursor$arity$1(this$)
  }else {
    var x__2410__auto____7211 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7212 = onedit.core.cursor[goog.typeOf(x__2410__auto____7211)];
      if(or__3824__auto____7212) {
        return or__3824__auto____7212
      }else {
        var or__3824__auto____7213 = onedit.core.cursor["_"];
        if(or__3824__auto____7213) {
          return or__3824__auto____7213
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditor.cursor", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.provide("onedit.vi.insert");
goog.require("cljs.core");
goog.require("onedit.vi.core");
goog.require("onedit.core");
onedit.vi.insert.insert = function insert() {
  onedit.vi.core.mode = "insert";
  return onedit.core.set_text_mini.call(null, "Insert Mode")
};
goog.provide("goog.dom.selection");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.selection.setStart = function(textfield, pos) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    textfield.selectionStart = pos
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(range.inRange(selectionRange)) {
        pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);
        range.collapse(true);
        range.move("character", pos);
        range.select()
      }
    }
  }
};
goog.dom.selection.getStart = function(textfield) {
  return goog.dom.selection.getEndPoints_(textfield, true)[0]
};
goog.dom.selection.getEndPointsTextareaIe_ = function(range, selRange, getOnlyStart) {
  var selectionRange = selRange.duplicate();
  var beforeSelectionText = range.text;
  var untrimmedBeforeSelectionText = beforeSelectionText;
  var selectionText = selectionRange.text;
  var untrimmedSelectionText = selectionText;
  var isRangeEndTrimmed = false;
  while(!isRangeEndTrimmed) {
    if(range.compareEndPoints("StartToEnd", range) == 0) {
      isRangeEndTrimmed = true
    }else {
      range.moveEnd("character", -1);
      if(range.text == beforeSelectionText) {
        untrimmedBeforeSelectionText += "\r\n"
      }else {
        isRangeEndTrimmed = true
      }
    }
  }
  if(getOnlyStart) {
    return[untrimmedBeforeSelectionText.length, -1]
  }
  var isSelectionRangeEndTrimmed = false;
  while(!isSelectionRangeEndTrimmed) {
    if(selectionRange.compareEndPoints("StartToEnd", selectionRange) == 0) {
      isSelectionRangeEndTrimmed = true
    }else {
      selectionRange.moveEnd("character", -1);
      if(selectionRange.text == selectionText) {
        untrimmedSelectionText += "\r\n"
      }else {
        isSelectionRangeEndTrimmed = true
      }
    }
  }
  return[untrimmedBeforeSelectionText.length, untrimmedBeforeSelectionText.length + untrimmedSelectionText.length]
};
goog.dom.selection.getEndPoints = function(textfield) {
  return goog.dom.selection.getEndPoints_(textfield, false)
};
goog.dom.selection.getEndPoints_ = function(textfield, getOnlyStart) {
  var startPos = 0;
  var endPos = 0;
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    startPos = textfield.selectionStart;
    endPos = getOnlyStart ? -1 : textfield.selectionEnd
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(range.inRange(selectionRange)) {
        range.setEndPoint("EndToStart", selectionRange);
        if(textfield.type == "textarea") {
          return goog.dom.selection.getEndPointsTextareaIe_(range, selectionRange, getOnlyStart)
        }
        startPos = range.text.length;
        if(!getOnlyStart) {
          endPos = range.text.length + selectionRange.text.length
        }else {
          endPos = -1
        }
      }
    }
  }
  return[startPos, endPos]
};
goog.dom.selection.setEnd = function(textfield, pos) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    textfield.selectionEnd = pos
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(range.inRange(selectionRange)) {
        pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);
        var startCursorPos = goog.dom.selection.canonicalizePositionIe_(textfield, goog.dom.selection.getStart(textfield));
        selectionRange.collapse(true);
        selectionRange.moveEnd("character", pos - startCursorPos);
        selectionRange.select()
      }
    }
  }
};
goog.dom.selection.getEnd = function(textfield) {
  return goog.dom.selection.getEndPoints_(textfield, false)[1]
};
goog.dom.selection.setCursorPosition = function(textfield, pos) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    textfield.selectionStart = pos;
    textfield.selectionEnd = pos
  }else {
    if(goog.userAgent.IE) {
      pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);
      var sel = textfield.createTextRange();
      sel.collapse(true);
      sel.move("character", pos);
      sel.select()
    }
  }
};
goog.dom.selection.setText = function(textfield, text) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    var value = textfield.value;
    var oldSelectionStart = textfield.selectionStart;
    var before = value.substr(0, oldSelectionStart);
    var after = value.substr(textfield.selectionEnd);
    textfield.value = before + text + after;
    textfield.selectionStart = oldSelectionStart;
    textfield.selectionEnd = oldSelectionStart + text.length
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(!range.inRange(selectionRange)) {
        return
      }
      var range2 = selectionRange.duplicate();
      selectionRange.text = text;
      selectionRange.setEndPoint("StartToStart", range2);
      selectionRange.select()
    }else {
      throw Error("Cannot set the selection end");
    }
  }
};
goog.dom.selection.getText = function(textfield) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    var s = textfield.value;
    return s.substring(textfield.selectionStart, textfield.selectionEnd)
  }
  if(goog.userAgent.IE) {
    var tmp = goog.dom.selection.getRangeIe_(textfield);
    var range = tmp[0];
    var selectionRange = tmp[1];
    if(!range.inRange(selectionRange)) {
      return""
    }else {
      if(textfield.type == "textarea") {
        return goog.dom.selection.getSelectionRangeText_(selectionRange)
      }
    }
    return selectionRange.text
  }
  throw Error("Cannot get the selection text");
};
goog.dom.selection.getSelectionRangeText_ = function(selRange) {
  var selectionRange = selRange.duplicate();
  var selectionText = selectionRange.text;
  var untrimmedSelectionText = selectionText;
  var isSelectionRangeEndTrimmed = false;
  while(!isSelectionRangeEndTrimmed) {
    if(selectionRange.compareEndPoints("StartToEnd", selectionRange) == 0) {
      isSelectionRangeEndTrimmed = true
    }else {
      selectionRange.moveEnd("character", -1);
      if(selectionRange.text == selectionText) {
        untrimmedSelectionText += "\r\n"
      }else {
        isSelectionRangeEndTrimmed = true
      }
    }
  }
  return untrimmedSelectionText
};
goog.dom.selection.getRangeIe_ = function(el) {
  var doc = el.ownerDocument || el.document;
  var selectionRange = doc.selection.createRange();
  var range;
  if(el.type == "textarea") {
    range = doc.body.createTextRange();
    range.moveToElementText(el)
  }else {
    range = el.createTextRange()
  }
  return[range, selectionRange]
};
goog.dom.selection.canonicalizePositionIe_ = function(textfield, pos) {
  if(textfield.type == "textarea") {
    var value = textfield.value.substring(0, pos);
    pos = goog.string.canonicalizeNewlines(value).length
  }
  return pos
};
goog.dom.selection.useSelectionProperties_ = function(el) {
  try {
    return typeof el.selectionStart == "number"
  }catch(e) {
    return false
  }
};
goog.provide("onedit.vi");
goog.require("cljs.core");
goog.require("goog.dom.selection");
goog.require("onedit.vi.insert");
goog.require("onedit.vi.core");
goog.require("onedit.core");
onedit.vi.insert_code = 105;
onedit.vi.escape_code = 27;
onedit.vi.command_code = 58;
onedit.vi.j = 106;
onedit.vi.k = 107;
onedit.vi.l = 108;
onedit.vi.escape = function escape() {
  onedit.vi.core.mode = null;
  return onedit.core.set_text_mini.call(null, "")
};
onedit.vi.keypress = function keypress(e) {
  var code__7319 = echarCode;
  var buffer__7320 = onedit.core.buffer.call(null);
  if(cljs.core._EQ_.call(null, onedit.vi.core.mode, "insert")) {
  }else {
    e.preventDefault()
  }
  var pred__7321__7324 = cljs.core._EQ_;
  var expr__7322__7325 = code__7319;
  if(pred__7321__7324.call(null, onedit.vi.insert_code, expr__7322__7325)) {
    onedit.vi.insert.insert.call(null)
  }else {
    if(pred__7321__7324.call(null, onedit.vi.l, expr__7322__7325)) {
      onedit.core.log.call(null, goog.dom.selection.getEnd(buffer__7320));
      goog.dom.selection.setStart(buffer__7320, goog.dom.selection.getStart(buffer__7320) + 1)
    }else {
      if(pred__7321__7324.call(null, onedit.vi.escape_code, expr__7322__7325)) {
        onedit.vi.escape.call(null)
      }else {
        if(pred__7321__7324.call(null, onedit.vi.command_code, expr__7322__7325)) {
        }else {
        }
      }
    }
  }
  return onedit.core.logger.info(code__7319)
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.dom.SavedRange");
goog.require("goog.Disposable");
goog.require("goog.debug.Logger");
goog.dom.SavedRange = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.dom.SavedRange, goog.Disposable);
goog.dom.SavedRange.logger_ = goog.debug.Logger.getLogger("goog.dom.SavedRange");
goog.dom.SavedRange.prototype.restore = function(opt_stayAlive) {
  if(this.isDisposed()) {
    goog.dom.SavedRange.logger_.severe("Disposed SavedRange objects cannot be restored.")
  }
  var range = this.restoreInternal();
  if(!opt_stayAlive) {
    this.dispose()
  }
  return range
};
goog.dom.SavedRange.prototype.restoreInternal = goog.abstractMethod;
goog.provide("goog.dom.SavedCaretRange");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.SavedRange");
goog.require("goog.dom.TagName");
goog.require("goog.string");
goog.dom.SavedCaretRange = function(range) {
  goog.dom.SavedRange.call(this);
  this.startCaretId_ = goog.string.createUniqueString();
  this.endCaretId_ = goog.string.createUniqueString();
  this.dom_ = goog.dom.getDomHelper(range.getDocument());
  range.surroundWithNodes(this.createCaret_(true), this.createCaret_(false))
};
goog.inherits(goog.dom.SavedCaretRange, goog.dom.SavedRange);
goog.dom.SavedCaretRange.prototype.toAbstractRange = function() {
  var range = null;
  var startCaret = this.getCaret(true);
  var endCaret = this.getCaret(false);
  if(startCaret && endCaret) {
    range = goog.dom.Range.createFromNodes(startCaret, 0, endCaret, 0)
  }
  return range
};
goog.dom.SavedCaretRange.prototype.getCaret = function(start) {
  return this.dom_.getElement(start ? this.startCaretId_ : this.endCaretId_)
};
goog.dom.SavedCaretRange.prototype.removeCarets = function(opt_range) {
  goog.dom.removeNode(this.getCaret(true));
  goog.dom.removeNode(this.getCaret(false));
  return opt_range
};
goog.dom.SavedCaretRange.prototype.setRestorationDocument = function(doc) {
  this.dom_.setDocument(doc)
};
goog.dom.SavedCaretRange.prototype.restoreInternal = function() {
  var range = null;
  var startCaret = this.getCaret(true);
  var endCaret = this.getCaret(false);
  if(startCaret && endCaret) {
    var startNode = startCaret.parentNode;
    var startOffset = goog.array.indexOf(startNode.childNodes, startCaret);
    var endNode = endCaret.parentNode;
    var endOffset = goog.array.indexOf(endNode.childNodes, endCaret);
    if(endNode == startNode) {
      endOffset -= 1
    }
    range = goog.dom.Range.createFromNodes(startNode, startOffset, endNode, endOffset);
    range = this.removeCarets(range);
    range.select()
  }else {
    this.removeCarets()
  }
  return range
};
goog.dom.SavedCaretRange.prototype.disposeInternal = function() {
  this.removeCarets();
  this.dom_ = null
};
goog.dom.SavedCaretRange.prototype.createCaret_ = function(start) {
  return this.dom_.createDom(goog.dom.TagName.SPAN, {"id":start ? this.startCaretId_ : this.endCaretId_})
};
goog.dom.SavedCaretRange.CARET_REGEX = /<span\s+id="?goog_\d+"?><\/span>/ig;
goog.dom.SavedCaretRange.htmlEqual = function(str1, str2) {
  return str1 == str2 || str1.replace(goog.dom.SavedCaretRange.CARET_REGEX, "") == str2.replace(goog.dom.SavedCaretRange.CARET_REGEX, "")
};
goog.provide("goog.dom.TagIterator");
goog.provide("goog.dom.TagWalkType");
goog.require("goog.dom.NodeType");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.dom.TagWalkType = {START_TAG:1, OTHER:0, END_TAG:-1};
goog.dom.TagIterator = function(opt_node, opt_reversed, opt_unconstrained, opt_tagType, opt_depth) {
  this.reversed = !!opt_reversed;
  if(opt_node) {
    this.setPosition(opt_node, opt_tagType)
  }
  this.depth = opt_depth != undefined ? opt_depth : this.tagType || 0;
  if(this.reversed) {
    this.depth *= -1
  }
  this.constrained = !opt_unconstrained
};
goog.inherits(goog.dom.TagIterator, goog.iter.Iterator);
goog.dom.TagIterator.prototype.node = null;
goog.dom.TagIterator.prototype.tagType = goog.dom.TagWalkType.OTHER;
goog.dom.TagIterator.prototype.depth;
goog.dom.TagIterator.prototype.reversed;
goog.dom.TagIterator.prototype.constrained;
goog.dom.TagIterator.prototype.started_ = false;
goog.dom.TagIterator.prototype.setPosition = function(node, opt_tagType, opt_depth) {
  this.node = node;
  if(node) {
    if(goog.isNumber(opt_tagType)) {
      this.tagType = opt_tagType
    }else {
      this.tagType = this.node.nodeType != goog.dom.NodeType.ELEMENT ? goog.dom.TagWalkType.OTHER : this.reversed ? goog.dom.TagWalkType.END_TAG : goog.dom.TagWalkType.START_TAG
    }
  }
  if(goog.isNumber(opt_depth)) {
    this.depth = opt_depth
  }
};
goog.dom.TagIterator.prototype.copyFrom = function(other) {
  this.node = other.node;
  this.tagType = other.tagType;
  this.depth = other.depth;
  this.reversed = other.reversed;
  this.constrained = other.constrained
};
goog.dom.TagIterator.prototype.clone = function() {
  return new goog.dom.TagIterator(this.node, this.reversed, !this.constrained, this.tagType, this.depth)
};
goog.dom.TagIterator.prototype.skipTag = function() {
  var check = this.reversed ? goog.dom.TagWalkType.END_TAG : goog.dom.TagWalkType.START_TAG;
  if(this.tagType == check) {
    this.tagType = check * -1;
    this.depth += this.tagType * (this.reversed ? -1 : 1)
  }
};
goog.dom.TagIterator.prototype.restartTag = function() {
  var check = this.reversed ? goog.dom.TagWalkType.START_TAG : goog.dom.TagWalkType.END_TAG;
  if(this.tagType == check) {
    this.tagType = check * -1;
    this.depth += this.tagType * (this.reversed ? -1 : 1)
  }
};
goog.dom.TagIterator.prototype.next = function() {
  var node;
  if(this.started_) {
    if(!this.node || this.constrained && this.depth == 0) {
      throw goog.iter.StopIteration;
    }
    node = this.node;
    var startType = this.reversed ? goog.dom.TagWalkType.END_TAG : goog.dom.TagWalkType.START_TAG;
    if(this.tagType == startType) {
      var child = this.reversed ? node.lastChild : node.firstChild;
      if(child) {
        this.setPosition(child)
      }else {
        this.setPosition(node, startType * -1)
      }
    }else {
      var sibling = this.reversed ? node.previousSibling : node.nextSibling;
      if(sibling) {
        this.setPosition(sibling)
      }else {
        this.setPosition(node.parentNode, startType * -1)
      }
    }
    this.depth += this.tagType * (this.reversed ? -1 : 1)
  }else {
    this.started_ = true
  }
  node = this.node;
  if(!this.node) {
    throw goog.iter.StopIteration;
  }
  return node
};
goog.dom.TagIterator.prototype.isStarted = function() {
  return this.started_
};
goog.dom.TagIterator.prototype.isStartTag = function() {
  return this.tagType == goog.dom.TagWalkType.START_TAG
};
goog.dom.TagIterator.prototype.isEndTag = function() {
  return this.tagType == goog.dom.TagWalkType.END_TAG
};
goog.dom.TagIterator.prototype.isNonElement = function() {
  return this.tagType == goog.dom.TagWalkType.OTHER
};
goog.dom.TagIterator.prototype.equals = function(other) {
  return other.node == this.node && (!this.node || other.tagType == this.tagType)
};
goog.dom.TagIterator.prototype.splice = function(var_args) {
  var node = this.node;
  this.restartTag();
  this.reversed = !this.reversed;
  goog.dom.TagIterator.prototype.next.call(this);
  this.reversed = !this.reversed;
  var arr = goog.isArrayLike(arguments[0]) ? arguments[0] : arguments;
  for(var i = arr.length - 1;i >= 0;i--) {
    goog.dom.insertSiblingAfter(arr[i], node)
  }
  goog.dom.removeNode(node)
};
goog.provide("goog.dom.AbstractRange");
goog.provide("goog.dom.RangeIterator");
goog.provide("goog.dom.RangeType");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.SavedCaretRange");
goog.require("goog.dom.TagIterator");
goog.require("goog.userAgent");
goog.dom.RangeType = {TEXT:"text", CONTROL:"control", MULTI:"mutli"};
goog.dom.AbstractRange = function() {
};
goog.dom.AbstractRange.getBrowserSelectionForWindow = function(win) {
  if(win.getSelection) {
    return win.getSelection()
  }else {
    var doc = win.document;
    var sel = doc.selection;
    if(sel) {
      try {
        var range = sel.createRange();
        if(range.parentElement) {
          if(range.parentElement().document != doc) {
            return null
          }
        }else {
          if(!range.length || range.item(0).document != doc) {
            return null
          }
        }
      }catch(e) {
        return null
      }
      return sel
    }
    return null
  }
};
goog.dom.AbstractRange.isNativeControlRange = function(range) {
  return!!range && !!range.addElement
};
goog.dom.AbstractRange.prototype.clone = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getType = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getBrowserRangeObject = goog.abstractMethod;
goog.dom.AbstractRange.prototype.setBrowserRangeObject = function(nativeRange) {
  return false
};
goog.dom.AbstractRange.prototype.getTextRangeCount = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getTextRange = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getTextRanges = function() {
  var output = [];
  for(var i = 0, len = this.getTextRangeCount();i < len;i++) {
    output.push(this.getTextRange(i))
  }
  return output
};
goog.dom.AbstractRange.prototype.getContainer = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getContainerElement = function() {
  var node = this.getContainer();
  return node.nodeType == goog.dom.NodeType.ELEMENT ? node : node.parentNode
};
goog.dom.AbstractRange.prototype.getStartNode = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getStartOffset = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getEndNode = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getEndOffset = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getAnchorNode = function() {
  return this.isReversed() ? this.getEndNode() : this.getStartNode()
};
goog.dom.AbstractRange.prototype.getAnchorOffset = function() {
  return this.isReversed() ? this.getEndOffset() : this.getStartOffset()
};
goog.dom.AbstractRange.prototype.getFocusNode = function() {
  return this.isReversed() ? this.getStartNode() : this.getEndNode()
};
goog.dom.AbstractRange.prototype.getFocusOffset = function() {
  return this.isReversed() ? this.getStartOffset() : this.getEndOffset()
};
goog.dom.AbstractRange.prototype.isReversed = function() {
  return false
};
goog.dom.AbstractRange.prototype.getDocument = function() {
  return goog.dom.getOwnerDocument(goog.userAgent.IE ? this.getContainer() : this.getStartNode())
};
goog.dom.AbstractRange.prototype.getWindow = function() {
  return goog.dom.getWindow(this.getDocument())
};
goog.dom.AbstractRange.prototype.containsRange = goog.abstractMethod;
goog.dom.AbstractRange.prototype.containsNode = function(node, opt_allowPartial) {
  return this.containsRange(goog.dom.Range.createFromNodeContents(node), opt_allowPartial)
};
goog.dom.AbstractRange.prototype.isRangeInDocument = goog.abstractMethod;
goog.dom.AbstractRange.prototype.isCollapsed = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getText = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getHtmlFragment = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getValidHtml = goog.abstractMethod;
goog.dom.AbstractRange.prototype.getPastableHtml = goog.abstractMethod;
goog.dom.AbstractRange.prototype.__iterator__ = goog.abstractMethod;
goog.dom.AbstractRange.prototype.select = goog.abstractMethod;
goog.dom.AbstractRange.prototype.removeContents = goog.abstractMethod;
goog.dom.AbstractRange.prototype.insertNode = goog.abstractMethod;
goog.dom.AbstractRange.prototype.replaceContentsWithNode = function(node) {
  if(!this.isCollapsed()) {
    this.removeContents()
  }
  return this.insertNode(node, true)
};
goog.dom.AbstractRange.prototype.surroundWithNodes = goog.abstractMethod;
goog.dom.AbstractRange.prototype.saveUsingDom = goog.abstractMethod;
goog.dom.AbstractRange.prototype.saveUsingCarets = function() {
  return this.getStartNode() && this.getEndNode() ? new goog.dom.SavedCaretRange(this) : null
};
goog.dom.AbstractRange.prototype.collapse = goog.abstractMethod;
goog.dom.RangeIterator = function(node, opt_reverse) {
  goog.dom.TagIterator.call(this, node, opt_reverse, true)
};
goog.inherits(goog.dom.RangeIterator, goog.dom.TagIterator);
goog.dom.RangeIterator.prototype.getStartTextOffset = goog.abstractMethod;
goog.dom.RangeIterator.prototype.getEndTextOffset = goog.abstractMethod;
goog.dom.RangeIterator.prototype.getStartNode = goog.abstractMethod;
goog.dom.RangeIterator.prototype.getEndNode = goog.abstractMethod;
goog.dom.RangeIterator.prototype.isLast = goog.abstractMethod;
goog.provide("goog.dom.AbstractMultiRange");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.AbstractRange");
goog.dom.AbstractMultiRange = function() {
};
goog.inherits(goog.dom.AbstractMultiRange, goog.dom.AbstractRange);
goog.dom.AbstractMultiRange.prototype.containsRange = function(otherRange, opt_allowPartial) {
  var ranges = this.getTextRanges();
  var otherRanges = otherRange.getTextRanges();
  var fn = opt_allowPartial ? goog.array.some : goog.array.every;
  return fn(otherRanges, function(otherRange) {
    return goog.array.some(ranges, function(range) {
      return range.containsRange(otherRange, opt_allowPartial)
    })
  })
};
goog.dom.AbstractMultiRange.prototype.insertNode = function(node, before) {
  if(before) {
    goog.dom.insertSiblingBefore(node, this.getStartNode())
  }else {
    goog.dom.insertSiblingAfter(node, this.getEndNode())
  }
  return node
};
goog.dom.AbstractMultiRange.prototype.surroundWithNodes = function(startNode, endNode) {
  this.insertNode(startNode, true);
  this.insertNode(endNode, false)
};
goog.provide("goog.debug.RelativeTimeProvider");
goog.debug.RelativeTimeProvider = function() {
  this.relativeTimeStart_ = goog.now()
};
goog.debug.RelativeTimeProvider.defaultInstance_ = new goog.debug.RelativeTimeProvider;
goog.debug.RelativeTimeProvider.prototype.set = function(timeStamp) {
  this.relativeTimeStart_ = timeStamp
};
goog.debug.RelativeTimeProvider.prototype.reset = function() {
  this.set(goog.now())
};
goog.debug.RelativeTimeProvider.prototype.get = function() {
  return this.relativeTimeStart_
};
goog.debug.RelativeTimeProvider.getDefaultInstance = function() {
  return goog.debug.RelativeTimeProvider.defaultInstance_
};
goog.provide("goog.debug.Formatter");
goog.provide("goog.debug.HtmlFormatter");
goog.provide("goog.debug.TextFormatter");
goog.require("goog.debug.RelativeTimeProvider");
goog.require("goog.string");
goog.debug.Formatter = function(opt_prefix) {
  this.prefix_ = opt_prefix || "";
  this.startTimeProvider_ = goog.debug.RelativeTimeProvider.getDefaultInstance()
};
goog.debug.Formatter.prototype.showAbsoluteTime = true;
goog.debug.Formatter.prototype.showRelativeTime = true;
goog.debug.Formatter.prototype.showLoggerName = true;
goog.debug.Formatter.prototype.showExceptionText = false;
goog.debug.Formatter.prototype.showSeverityLevel = false;
goog.debug.Formatter.prototype.formatRecord = goog.abstractMethod;
goog.debug.Formatter.prototype.setStartTimeProvider = function(provider) {
  this.startTimeProvider_ = provider
};
goog.debug.Formatter.prototype.getStartTimeProvider = function() {
  return this.startTimeProvider_
};
goog.debug.Formatter.prototype.resetRelativeTimeStart = function() {
  this.startTimeProvider_.reset()
};
goog.debug.Formatter.getDateTimeStamp_ = function(logRecord) {
  var time = new Date(logRecord.getMillis());
  return goog.debug.Formatter.getTwoDigitString_(time.getFullYear() - 2E3) + goog.debug.Formatter.getTwoDigitString_(time.getMonth() + 1) + goog.debug.Formatter.getTwoDigitString_(time.getDate()) + " " + goog.debug.Formatter.getTwoDigitString_(time.getHours()) + ":" + goog.debug.Formatter.getTwoDigitString_(time.getMinutes()) + ":" + goog.debug.Formatter.getTwoDigitString_(time.getSeconds()) + "." + goog.debug.Formatter.getTwoDigitString_(Math.floor(time.getMilliseconds() / 10))
};
goog.debug.Formatter.getTwoDigitString_ = function(n) {
  if(n < 10) {
    return"0" + n
  }
  return String(n)
};
goog.debug.Formatter.getRelativeTime_ = function(logRecord, relativeTimeStart) {
  var ms = logRecord.getMillis() - relativeTimeStart;
  var sec = ms / 1E3;
  var str = sec.toFixed(3);
  var spacesToPrepend = 0;
  if(sec < 1) {
    spacesToPrepend = 2
  }else {
    while(sec < 100) {
      spacesToPrepend++;
      sec *= 10
    }
  }
  while(spacesToPrepend-- > 0) {
    str = " " + str
  }
  return str
};
goog.debug.HtmlFormatter = function(opt_prefix) {
  goog.debug.Formatter.call(this, opt_prefix)
};
goog.inherits(goog.debug.HtmlFormatter, goog.debug.Formatter);
goog.debug.HtmlFormatter.prototype.showExceptionText = true;
goog.debug.HtmlFormatter.prototype.formatRecord = function(logRecord) {
  var className;
  switch(logRecord.getLevel().value) {
    case goog.debug.Logger.Level.SHOUT.value:
      className = "dbg-sh";
      break;
    case goog.debug.Logger.Level.SEVERE.value:
      className = "dbg-sev";
      break;
    case goog.debug.Logger.Level.WARNING.value:
      className = "dbg-w";
      break;
    case goog.debug.Logger.Level.INFO.value:
      className = "dbg-i";
      break;
    case goog.debug.Logger.Level.FINE.value:
    ;
    default:
      className = "dbg-f";
      break
  }
  var sb = [];
  sb.push(this.prefix_, " ");
  if(this.showAbsoluteTime) {
    sb.push("[", goog.debug.Formatter.getDateTimeStamp_(logRecord), "] ")
  }
  if(this.showRelativeTime) {
    sb.push("[", goog.string.whitespaceEscape(goog.debug.Formatter.getRelativeTime_(logRecord, this.startTimeProvider_.get())), "s] ")
  }
  if(this.showLoggerName) {
    sb.push("[", goog.string.htmlEscape(logRecord.getLoggerName()), "] ")
  }
  sb.push('<span class="', className, '">', goog.string.newLineToBr(goog.string.whitespaceEscape(goog.string.htmlEscape(logRecord.getMessage()))));
  if(this.showExceptionText && logRecord.getException()) {
    sb.push("<br>", goog.string.newLineToBr(goog.string.whitespaceEscape(logRecord.getExceptionText() || "")))
  }
  sb.push("</span><br>");
  return sb.join("")
};
goog.debug.TextFormatter = function(opt_prefix) {
  goog.debug.Formatter.call(this, opt_prefix)
};
goog.inherits(goog.debug.TextFormatter, goog.debug.Formatter);
goog.debug.TextFormatter.prototype.formatRecord = function(logRecord) {
  var sb = [];
  sb.push(this.prefix_, " ");
  if(this.showAbsoluteTime) {
    sb.push("[", goog.debug.Formatter.getDateTimeStamp_(logRecord), "] ")
  }
  if(this.showRelativeTime) {
    sb.push("[", goog.debug.Formatter.getRelativeTime_(logRecord, this.startTimeProvider_.get()), "s] ")
  }
  if(this.showLoggerName) {
    sb.push("[", logRecord.getLoggerName(), "] ")
  }
  if(this.showSeverityLevel) {
    sb.push("[", logRecord.getLevel().name, "] ")
  }
  sb.push(logRecord.getMessage(), "\n");
  if(this.showExceptionText && logRecord.getException()) {
    sb.push(logRecord.getExceptionText(), "\n")
  }
  return sb.join("")
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = []
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key)
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "visiblity:hidden;overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return":" + (this.nextId_++).toString(36)
};
goog.ui.IdGenerator.instance = goog.ui.IdGenerator.getInstance();
goog.provide("goog.ui.Component");
goog.provide("goog.ui.Component.Error");
goog.provide("goog.ui.Component.EventType");
goog.provide("goog.ui.Component.State");
goog.require("goog.array");
goog.require("goog.array.ArrayLike");
goog.require("goog.dom");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.object");
goog.require("goog.style");
goog.require("goog.ui.IdGenerator");
goog.ui.Component = function(opt_domHelper) {
  goog.events.EventTarget.call(this);
  this.dom_ = opt_domHelper || goog.dom.getDomHelper();
  this.rightToLeft_ = goog.ui.Component.defaultRightToLeft_
};
goog.inherits(goog.ui.Component, goog.events.EventTarget);
goog.ui.Component.prototype.idGenerator_ = goog.ui.IdGenerator.getInstance();
goog.ui.Component.defaultRightToLeft_ = null;
goog.ui.Component.EventType = {BEFORE_SHOW:"beforeshow", SHOW:"show", HIDE:"hide", DISABLE:"disable", ENABLE:"enable", HIGHLIGHT:"highlight", UNHIGHLIGHT:"unhighlight", ACTIVATE:"activate", DEACTIVATE:"deactivate", SELECT:"select", UNSELECT:"unselect", CHECK:"check", UNCHECK:"uncheck", FOCUS:"focus", BLUR:"blur", OPEN:"open", CLOSE:"close", ENTER:"enter", LEAVE:"leave", ACTION:"action", CHANGE:"change"};
goog.ui.Component.Error = {NOT_SUPPORTED:"Method not supported", DECORATE_INVALID:"Invalid element to decorate", ALREADY_RENDERED:"Component already rendered", PARENT_UNABLE_TO_BE_SET:"Unable to set parent component", CHILD_INDEX_OUT_OF_BOUNDS:"Child component index out of bounds", NOT_OUR_CHILD:"Child is not in parent component", NOT_IN_DOCUMENT:"Operation not supported while component is not in document", STATE_INVALID:"Invalid component state"};
goog.ui.Component.State = {ALL:255, DISABLED:1, HOVER:2, ACTIVE:4, SELECTED:8, CHECKED:16, FOCUSED:32, OPENED:64};
goog.ui.Component.getStateTransitionEvent = function(state, isEntering) {
  switch(state) {
    case goog.ui.Component.State.DISABLED:
      return isEntering ? goog.ui.Component.EventType.DISABLE : goog.ui.Component.EventType.ENABLE;
    case goog.ui.Component.State.HOVER:
      return isEntering ? goog.ui.Component.EventType.HIGHLIGHT : goog.ui.Component.EventType.UNHIGHLIGHT;
    case goog.ui.Component.State.ACTIVE:
      return isEntering ? goog.ui.Component.EventType.ACTIVATE : goog.ui.Component.EventType.DEACTIVATE;
    case goog.ui.Component.State.SELECTED:
      return isEntering ? goog.ui.Component.EventType.SELECT : goog.ui.Component.EventType.UNSELECT;
    case goog.ui.Component.State.CHECKED:
      return isEntering ? goog.ui.Component.EventType.CHECK : goog.ui.Component.EventType.UNCHECK;
    case goog.ui.Component.State.FOCUSED:
      return isEntering ? goog.ui.Component.EventType.FOCUS : goog.ui.Component.EventType.BLUR;
    case goog.ui.Component.State.OPENED:
      return isEntering ? goog.ui.Component.EventType.OPEN : goog.ui.Component.EventType.CLOSE;
    default:
  }
  throw Error(goog.ui.Component.Error.STATE_INVALID);
};
goog.ui.Component.setDefaultRightToLeft = function(rightToLeft) {
  goog.ui.Component.defaultRightToLeft_ = rightToLeft
};
goog.ui.Component.prototype.id_ = null;
goog.ui.Component.prototype.dom_;
goog.ui.Component.prototype.inDocument_ = false;
goog.ui.Component.prototype.element_ = null;
goog.ui.Component.prototype.googUiComponentHandler_;
goog.ui.Component.prototype.rightToLeft_ = null;
goog.ui.Component.prototype.model_ = null;
goog.ui.Component.prototype.parent_ = null;
goog.ui.Component.prototype.children_ = null;
goog.ui.Component.prototype.childIndex_ = null;
goog.ui.Component.prototype.wasDecorated_ = false;
goog.ui.Component.prototype.getId = function() {
  return this.id_ || (this.id_ = this.idGenerator_.getNextUniqueId())
};
goog.ui.Component.prototype.setId = function(id) {
  if(this.parent_ && this.parent_.childIndex_) {
    goog.object.remove(this.parent_.childIndex_, this.id_);
    goog.object.add(this.parent_.childIndex_, id, this)
  }
  this.id_ = id
};
goog.ui.Component.prototype.getElement = function() {
  return this.element_
};
goog.ui.Component.prototype.setElementInternal = function(element) {
  this.element_ = element
};
goog.ui.Component.prototype.getElementsByClass = function(className) {
  return this.element_ ? this.dom_.getElementsByClass(className, this.element_) : []
};
goog.ui.Component.prototype.getElementByClass = function(className) {
  return this.element_ ? this.dom_.getElementByClass(className, this.element_) : null
};
goog.ui.Component.prototype.getHandler = function() {
  return this.googUiComponentHandler_ || (this.googUiComponentHandler_ = new goog.events.EventHandler(this))
};
goog.ui.Component.prototype.setParent = function(parent) {
  if(this == parent) {
    throw Error(goog.ui.Component.Error.PARENT_UNABLE_TO_BE_SET);
  }
  if(parent && this.parent_ && this.id_ && this.parent_.getChild(this.id_) && this.parent_ != parent) {
    throw Error(goog.ui.Component.Error.PARENT_UNABLE_TO_BE_SET);
  }
  this.parent_ = parent;
  goog.ui.Component.superClass_.setParentEventTarget.call(this, parent)
};
goog.ui.Component.prototype.getParent = function() {
  return this.parent_
};
goog.ui.Component.prototype.setParentEventTarget = function(parent) {
  if(this.parent_ && this.parent_ != parent) {
    throw Error(goog.ui.Component.Error.NOT_SUPPORTED);
  }
  goog.ui.Component.superClass_.setParentEventTarget.call(this, parent)
};
goog.ui.Component.prototype.getDomHelper = function() {
  return this.dom_
};
goog.ui.Component.prototype.isInDocument = function() {
  return this.inDocument_
};
goog.ui.Component.prototype.createDom = function() {
  this.element_ = this.dom_.createElement("div")
};
goog.ui.Component.prototype.render = function(opt_parentElement) {
  this.render_(opt_parentElement)
};
goog.ui.Component.prototype.renderBefore = function(sibling) {
  this.render_(sibling.parentNode, sibling)
};
goog.ui.Component.prototype.render_ = function(opt_parentElement, opt_beforeNode) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(!this.element_) {
    this.createDom()
  }
  if(opt_parentElement) {
    opt_parentElement.insertBefore(this.element_, opt_beforeNode || null)
  }else {
    this.dom_.getDocument().body.appendChild(this.element_)
  }
  if(!this.parent_ || this.parent_.isInDocument()) {
    this.enterDocument()
  }
};
goog.ui.Component.prototype.decorate = function(element) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }else {
    if(element && this.canDecorate(element)) {
      this.wasDecorated_ = true;
      if(!this.dom_ || this.dom_.getDocument() != goog.dom.getOwnerDocument(element)) {
        this.dom_ = goog.dom.getDomHelper(element)
      }
      this.decorateInternal(element);
      this.enterDocument()
    }else {
      throw Error(goog.ui.Component.Error.DECORATE_INVALID);
    }
  }
};
goog.ui.Component.prototype.canDecorate = function(element) {
  return true
};
goog.ui.Component.prototype.wasDecorated = function() {
  return this.wasDecorated_
};
goog.ui.Component.prototype.decorateInternal = function(element) {
  this.element_ = element
};
goog.ui.Component.prototype.enterDocument = function() {
  this.inDocument_ = true;
  this.forEachChild(function(child) {
    if(!child.isInDocument() && child.getElement()) {
      child.enterDocument()
    }
  })
};
goog.ui.Component.prototype.exitDocument = function() {
  this.forEachChild(function(child) {
    if(child.isInDocument()) {
      child.exitDocument()
    }
  });
  if(this.googUiComponentHandler_) {
    this.googUiComponentHandler_.removeAll()
  }
  this.inDocument_ = false
};
goog.ui.Component.prototype.disposeInternal = function() {
  goog.ui.Component.superClass_.disposeInternal.call(this);
  if(this.inDocument_) {
    this.exitDocument()
  }
  if(this.googUiComponentHandler_) {
    this.googUiComponentHandler_.dispose();
    delete this.googUiComponentHandler_
  }
  this.forEachChild(function(child) {
    child.dispose()
  });
  if(!this.wasDecorated_ && this.element_) {
    goog.dom.removeNode(this.element_)
  }
  this.children_ = null;
  this.childIndex_ = null;
  this.element_ = null;
  this.model_ = null;
  this.parent_ = null
};
goog.ui.Component.prototype.makeId = function(idFragment) {
  return this.getId() + "." + idFragment
};
goog.ui.Component.prototype.makeIds = function(object) {
  var ids = {};
  for(var key in object) {
    ids[key] = this.makeId(object[key])
  }
  return ids
};
goog.ui.Component.prototype.getModel = function() {
  return this.model_
};
goog.ui.Component.prototype.setModel = function(obj) {
  this.model_ = obj
};
goog.ui.Component.prototype.getFragmentFromId = function(id) {
  return id.substring(this.getId().length + 1)
};
goog.ui.Component.prototype.getElementByFragment = function(idFragment) {
  if(!this.inDocument_) {
    throw Error(goog.ui.Component.Error.NOT_IN_DOCUMENT);
  }
  return this.dom_.getElement(this.makeId(idFragment))
};
goog.ui.Component.prototype.addChild = function(child, opt_render) {
  this.addChildAt(child, this.getChildCount(), opt_render)
};
goog.ui.Component.prototype.addChildAt = function(child, index, opt_render) {
  if(child.inDocument_ && (opt_render || !this.inDocument_)) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(index < 0 || index > this.getChildCount()) {
    throw Error(goog.ui.Component.Error.CHILD_INDEX_OUT_OF_BOUNDS);
  }
  if(!this.childIndex_ || !this.children_) {
    this.childIndex_ = {};
    this.children_ = []
  }
  if(child.getParent() == this) {
    goog.object.set(this.childIndex_, child.getId(), child);
    goog.array.remove(this.children_, child)
  }else {
    goog.object.add(this.childIndex_, child.getId(), child)
  }
  child.setParent(this);
  goog.array.insertAt(this.children_, child, index);
  if(child.inDocument_ && this.inDocument_ && child.getParent() == this) {
    var contentElement = this.getContentElement();
    contentElement.insertBefore(child.getElement(), contentElement.childNodes[index] || null)
  }else {
    if(opt_render) {
      if(!this.element_) {
        this.createDom()
      }
      var sibling = this.getChildAt(index + 1);
      child.render_(this.getContentElement(), sibling ? sibling.element_ : null)
    }else {
      if(this.inDocument_ && !child.inDocument_ && child.element_) {
        child.enterDocument()
      }
    }
  }
};
goog.ui.Component.prototype.getContentElement = function() {
  return this.element_
};
goog.ui.Component.prototype.isRightToLeft = function() {
  if(this.rightToLeft_ == null) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.inDocument_ ? this.element_ : this.dom_.getDocument().body)
  }
  return this.rightToLeft_
};
goog.ui.Component.prototype.setRightToLeft = function(rightToLeft) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  this.rightToLeft_ = rightToLeft
};
goog.ui.Component.prototype.hasChildren = function() {
  return!!this.children_ && this.children_.length != 0
};
goog.ui.Component.prototype.getChildCount = function() {
  return this.children_ ? this.children_.length : 0
};
goog.ui.Component.prototype.getChildIds = function() {
  var ids = [];
  this.forEachChild(function(child) {
    ids.push(child.getId())
  });
  return ids
};
goog.ui.Component.prototype.getChild = function(id) {
  return this.childIndex_ && id ? goog.object.get(this.childIndex_, id) || null : null
};
goog.ui.Component.prototype.getChildAt = function(index) {
  return this.children_ ? this.children_[index] || null : null
};
goog.ui.Component.prototype.forEachChild = function(f, opt_obj) {
  if(this.children_) {
    goog.array.forEach(this.children_, f, opt_obj)
  }
};
goog.ui.Component.prototype.indexOfChild = function(child) {
  return this.children_ && child ? goog.array.indexOf(this.children_, child) : -1
};
goog.ui.Component.prototype.removeChild = function(child, opt_unrender) {
  if(child) {
    var id = goog.isString(child) ? child : child.getId();
    child = this.getChild(id);
    if(id && child) {
      goog.object.remove(this.childIndex_, id);
      goog.array.remove(this.children_, child);
      if(opt_unrender) {
        child.exitDocument();
        if(child.element_) {
          goog.dom.removeNode(child.element_)
        }
      }
      child.setParent(null)
    }
  }
  if(!child) {
    throw Error(goog.ui.Component.Error.NOT_OUR_CHILD);
  }
  return child
};
goog.ui.Component.prototype.removeChildAt = function(index, opt_unrender) {
  return this.removeChild(this.getChildAt(index), opt_unrender)
};
goog.ui.Component.prototype.removeChildren = function(opt_unrender) {
  while(this.hasChildren()) {
    this.removeChildAt(0, opt_unrender)
  }
};
goog.provide("goog.ui.FormPost");
goog.require("goog.array");
goog.require("goog.dom.TagName");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
goog.require("goog.ui.Component");
goog.ui.FormPost = function(opt_dom) {
  goog.ui.Component.call(this, opt_dom)
};
goog.inherits(goog.ui.FormPost, goog.ui.Component);
goog.ui.FormPost.prototype.createDom = function() {
  this.setElementInternal(this.getDomHelper().createDom(goog.dom.TagName.FORM, {"method":"POST", "style":"display:none"}))
};
goog.ui.FormPost.prototype.post = function(parameters, opt_url, opt_target) {
  var form = this.getElement();
  if(!form) {
    this.render();
    form = this.getElement()
  }
  form.action = opt_url || "";
  form.target = opt_target || "";
  this.setParameters_(form, parameters);
  form.submit()
};
goog.ui.FormPost.prototype.setParameters_ = function(form, parameters) {
  var name, value, sb = new goog.string.StringBuffer;
  for(name in parameters) {
    value = parameters[name];
    if(goog.isArrayLike(value)) {
      goog.array.forEach(value, goog.bind(this.appendInput_, this, sb, name))
    }else {
      this.appendInput_(sb, name, value)
    }
  }
  form.innerHTML = sb.toString()
};
goog.ui.FormPost.prototype.appendInput_ = function(out, name, value) {
  out.append('<input type="hidden" name="', goog.string.htmlEscape(name), '" value="', goog.string.htmlEscape(value), '">')
};
goog.provide("onedit.file");
goog.require("cljs.core");
goog.require("goog.ui.FormPost");
goog.require("goog.events");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("onedit.core");
onedit.file.file_form = function() {
  var submit__7259 = goog.dom.createDom("input", {"type":"submit"});
  var file__7262 = function() {
    var G__7260__7261 = goog.dom.createDom("input", {"type":"file", "name":"file"});
    goog.events.listen(G__7260__7261, goog.events.EventType.CHANGE, function() {
      return submit__7259.click()
    });
    return G__7260__7261
  }();
  goog.dom.createDom("form", {"method":"POST", "action":"/open", "enctype":"multipart/form-data"}, file__7262, submit__7259);
  return file__7262
}();
onedit.file.open = function open(editor) {
  return onedit.file.file_form.click()
};
onedit.file.form_post = new goog.ui.FormPost;
onedit.file.save = function save(editor) {
  var text__7264 = goog.dom.getRawTextContent(editorbuffer);
  if(cljs.core.empty_QMARK_.call(null, text__7264)) {
    return null
  }else {
    return onedit.file.form_post.post({"content":text__7264}, [cljs.core.str("/save/"), cljs.core.str(document.title)].join(""))
  }
};
goog.provide("goog.dom.NodeIterator");
goog.require("goog.dom.TagIterator");
goog.dom.NodeIterator = function(opt_node, opt_reversed, opt_unconstrained, opt_depth) {
  goog.dom.TagIterator.call(this, opt_node, opt_reversed, opt_unconstrained, null, opt_depth)
};
goog.inherits(goog.dom.NodeIterator, goog.dom.TagIterator);
goog.dom.NodeIterator.prototype.next = function() {
  do {
    goog.dom.NodeIterator.superClass_.next.call(this)
  }while(this.isEndTag());
  return this.node
};
goog.provide("goog.dom.RangeEndpoint");
goog.dom.RangeEndpoint = {START:1, END:0};
goog.provide("goog.dom.TextRangeIterator");
goog.require("goog.array");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.RangeIterator");
goog.require("goog.dom.TagName");
goog.require("goog.iter.StopIteration");
goog.dom.TextRangeIterator = function(startNode, startOffset, endNode, endOffset, opt_reverse) {
  var goNext;
  if(startNode) {
    this.startNode_ = startNode;
    this.startOffset_ = startOffset;
    this.endNode_ = endNode;
    this.endOffset_ = endOffset;
    if(startNode.nodeType == goog.dom.NodeType.ELEMENT && startNode.tagName != goog.dom.TagName.BR) {
      var startChildren = startNode.childNodes;
      var candidate = startChildren[startOffset];
      if(candidate) {
        this.startNode_ = candidate;
        this.startOffset_ = 0
      }else {
        if(startChildren.length) {
          this.startNode_ = goog.array.peek(startChildren)
        }
        goNext = true
      }
    }
    if(endNode.nodeType == goog.dom.NodeType.ELEMENT) {
      this.endNode_ = endNode.childNodes[endOffset];
      if(this.endNode_) {
        this.endOffset_ = 0
      }else {
        this.endNode_ = endNode
      }
    }
  }
  goog.dom.RangeIterator.call(this, opt_reverse ? this.endNode_ : this.startNode_, opt_reverse);
  if(goNext) {
    try {
      this.next()
    }catch(e) {
      if(e != goog.iter.StopIteration) {
        throw e;
      }
    }
  }
};
goog.inherits(goog.dom.TextRangeIterator, goog.dom.RangeIterator);
goog.dom.TextRangeIterator.prototype.startNode_ = null;
goog.dom.TextRangeIterator.prototype.endNode_ = null;
goog.dom.TextRangeIterator.prototype.startOffset_ = 0;
goog.dom.TextRangeIterator.prototype.endOffset_ = 0;
goog.dom.TextRangeIterator.prototype.getStartTextOffset = function() {
  return this.node.nodeType != goog.dom.NodeType.TEXT ? -1 : this.node == this.startNode_ ? this.startOffset_ : 0
};
goog.dom.TextRangeIterator.prototype.getEndTextOffset = function() {
  return this.node.nodeType != goog.dom.NodeType.TEXT ? -1 : this.node == this.endNode_ ? this.endOffset_ : this.node.nodeValue.length
};
goog.dom.TextRangeIterator.prototype.getStartNode = function() {
  return this.startNode_
};
goog.dom.TextRangeIterator.prototype.setStartNode = function(node) {
  if(!this.isStarted()) {
    this.setPosition(node)
  }
  this.startNode_ = node;
  this.startOffset_ = 0
};
goog.dom.TextRangeIterator.prototype.getEndNode = function() {
  return this.endNode_
};
goog.dom.TextRangeIterator.prototype.setEndNode = function(node) {
  this.endNode_ = node;
  this.endOffset_ = 0
};
goog.dom.TextRangeIterator.prototype.isLast = function() {
  return this.isStarted() && this.node == this.endNode_ && (!this.endOffset_ || !this.isStartTag())
};
goog.dom.TextRangeIterator.prototype.next = function() {
  if(this.isLast()) {
    throw goog.iter.StopIteration;
  }
  return goog.dom.TextRangeIterator.superClass_.next.call(this)
};
goog.dom.TextRangeIterator.prototype.skipTag = function() {
  goog.dom.TextRangeIterator.superClass_.skipTag.apply(this);
  if(goog.dom.contains(this.node, this.endNode_)) {
    throw goog.iter.StopIteration;
  }
};
goog.dom.TextRangeIterator.prototype.copyFrom = function(other) {
  this.startNode_ = other.startNode_;
  this.endNode_ = other.endNode_;
  this.startOffset_ = other.startOffset_;
  this.endOffset_ = other.endOffset_;
  this.isReversed_ = other.isReversed_;
  goog.dom.TextRangeIterator.superClass_.copyFrom.call(this, other)
};
goog.dom.TextRangeIterator.prototype.clone = function() {
  var copy = new goog.dom.TextRangeIterator(this.startNode_, this.startOffset_, this.endNode_, this.endOffset_, this.isReversed_);
  copy.copyFrom(this);
  return copy
};
goog.provide("goog.dom.browserrange.AbstractRange");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.RangeEndpoint");
goog.require("goog.dom.TagName");
goog.require("goog.dom.TextRangeIterator");
goog.require("goog.iter");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
goog.require("goog.userAgent");
goog.dom.browserrange.AbstractRange = function() {
};
goog.dom.browserrange.AbstractRange.prototype.clone = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.getBrowserRange = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.getContainer = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.getStartNode = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.getStartOffset = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.getEndNode = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.getEndOffset = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.compareBrowserRangeEndpoints = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.containsRange = function(abstractRange, opt_allowPartial) {
  var checkPartial = opt_allowPartial && !abstractRange.isCollapsed();
  var range = abstractRange.getBrowserRange();
  var start = goog.dom.RangeEndpoint.START, end = goog.dom.RangeEndpoint.END;
  try {
    if(checkPartial) {
      return this.compareBrowserRangeEndpoints(range, end, start) >= 0 && this.compareBrowserRangeEndpoints(range, start, end) <= 0
    }else {
      return this.compareBrowserRangeEndpoints(range, end, end) >= 0 && this.compareBrowserRangeEndpoints(range, start, start) <= 0
    }
  }catch(e) {
    if(!goog.userAgent.IE) {
      throw e;
    }
    return false
  }
};
goog.dom.browserrange.AbstractRange.prototype.containsNode = function(node, opt_allowPartial) {
  return this.containsRange(goog.dom.browserrange.createRangeFromNodeContents(node), opt_allowPartial)
};
goog.dom.browserrange.AbstractRange.prototype.isCollapsed = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.getText = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.getHtmlFragment = function() {
  var output = new goog.string.StringBuffer;
  goog.iter.forEach(this, function(node, ignore, it) {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      output.append(goog.string.htmlEscape(node.nodeValue.substring(it.getStartTextOffset(), it.getEndTextOffset())))
    }else {
      if(node.nodeType == goog.dom.NodeType.ELEMENT) {
        if(it.isEndTag()) {
          if(goog.dom.canHaveChildren(node)) {
            output.append("</" + node.tagName + ">")
          }
        }else {
          var shallow = node.cloneNode(false);
          var html = goog.dom.getOuterHtml(shallow);
          if(goog.userAgent.IE && node.tagName == goog.dom.TagName.LI) {
            output.append(html)
          }else {
            var index = html.lastIndexOf("<");
            output.append(index ? html.substr(0, index) : html)
          }
        }
      }
    }
  }, this);
  return output.toString()
};
goog.dom.browserrange.AbstractRange.prototype.getValidHtml = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.__iterator__ = function(opt_keys) {
  return new goog.dom.TextRangeIterator(this.getStartNode(), this.getStartOffset(), this.getEndNode(), this.getEndOffset())
};
goog.dom.browserrange.AbstractRange.prototype.select = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.removeContents = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.surroundContents = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.insertNode = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.surroundWithNodes = goog.abstractMethod;
goog.dom.browserrange.AbstractRange.prototype.collapse = goog.abstractMethod;
goog.provide("goog.dom.browserrange.IeRange");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.dom");
goog.require("goog.dom.NodeIterator");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.RangeEndpoint");
goog.require("goog.dom.TagName");
goog.require("goog.dom.browserrange.AbstractRange");
goog.require("goog.iter");
goog.require("goog.iter.StopIteration");
goog.require("goog.string");
goog.dom.browserrange.IeRange = function(range, doc) {
  this.range_ = range;
  this.doc_ = doc
};
goog.inherits(goog.dom.browserrange.IeRange, goog.dom.browserrange.AbstractRange);
goog.dom.browserrange.IeRange.logger_ = goog.debug.Logger.getLogger("goog.dom.browserrange.IeRange");
goog.dom.browserrange.IeRange.getBrowserRangeForNode_ = function(node) {
  var nodeRange = goog.dom.getOwnerDocument(node).body.createTextRange();
  if(node.nodeType == goog.dom.NodeType.ELEMENT) {
    nodeRange.moveToElementText(node);
    if(goog.dom.browserrange.canContainRangeEndpoint(node) && !node.childNodes.length) {
      nodeRange.collapse(false)
    }
  }else {
    var offset = 0;
    var sibling = node;
    while(sibling = sibling.previousSibling) {
      var nodeType = sibling.nodeType;
      if(nodeType == goog.dom.NodeType.TEXT) {
        offset += sibling.length
      }else {
        if(nodeType == goog.dom.NodeType.ELEMENT) {
          nodeRange.moveToElementText(sibling);
          break
        }
      }
    }
    if(!sibling) {
      nodeRange.moveToElementText(node.parentNode)
    }
    nodeRange.collapse(!sibling);
    if(offset) {
      nodeRange.move("character", offset)
    }
    nodeRange.moveEnd("character", node.length)
  }
  return nodeRange
};
goog.dom.browserrange.IeRange.getBrowserRangeForNodes_ = function(startNode, startOffset, endNode, endOffset) {
  var child, collapse = false;
  if(startNode.nodeType == goog.dom.NodeType.ELEMENT) {
    if(startOffset > startNode.childNodes.length) {
      goog.dom.browserrange.IeRange.logger_.severe("Cannot have startOffset > startNode child count")
    }
    child = startNode.childNodes[startOffset];
    collapse = !child;
    startNode = child || startNode.lastChild || startNode;
    startOffset = 0
  }
  var leftRange = goog.dom.browserrange.IeRange.getBrowserRangeForNode_(startNode);
  if(startOffset) {
    leftRange.move("character", startOffset)
  }
  if(startNode == endNode && startOffset == endOffset) {
    leftRange.collapse(true);
    return leftRange
  }
  if(collapse) {
    leftRange.collapse(false)
  }
  collapse = false;
  if(endNode.nodeType == goog.dom.NodeType.ELEMENT) {
    if(endOffset > endNode.childNodes.length) {
      goog.dom.browserrange.IeRange.logger_.severe("Cannot have endOffset > endNode child count")
    }
    child = endNode.childNodes[endOffset];
    endNode = child || endNode.lastChild || endNode;
    endOffset = 0;
    collapse = !child
  }
  var rightRange = goog.dom.browserrange.IeRange.getBrowserRangeForNode_(endNode);
  rightRange.collapse(!collapse);
  if(endOffset) {
    rightRange.moveEnd("character", endOffset)
  }
  leftRange.setEndPoint("EndToEnd", rightRange);
  return leftRange
};
goog.dom.browserrange.IeRange.createFromNodeContents = function(node) {
  var range = new goog.dom.browserrange.IeRange(goog.dom.browserrange.IeRange.getBrowserRangeForNode_(node), goog.dom.getOwnerDocument(node));
  if(!goog.dom.browserrange.canContainRangeEndpoint(node)) {
    range.startNode_ = range.endNode_ = range.parentNode_ = node.parentNode;
    range.startOffset_ = goog.array.indexOf(range.parentNode_.childNodes, node);
    range.endOffset_ = range.startOffset_ + 1
  }else {
    var tempNode, leaf = node;
    while((tempNode = leaf.firstChild) && goog.dom.browserrange.canContainRangeEndpoint(tempNode)) {
      leaf = tempNode
    }
    range.startNode_ = leaf;
    range.startOffset_ = 0;
    leaf = node;
    while((tempNode = leaf.lastChild) && goog.dom.browserrange.canContainRangeEndpoint(tempNode)) {
      leaf = tempNode
    }
    range.endNode_ = leaf;
    range.endOffset_ = leaf.nodeType == goog.dom.NodeType.ELEMENT ? leaf.childNodes.length : leaf.length;
    range.parentNode_ = node
  }
  return range
};
goog.dom.browserrange.IeRange.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  var range = new goog.dom.browserrange.IeRange(goog.dom.browserrange.IeRange.getBrowserRangeForNodes_(startNode, startOffset, endNode, endOffset), goog.dom.getOwnerDocument(startNode));
  range.startNode_ = startNode;
  range.startOffset_ = startOffset;
  range.endNode_ = endNode;
  range.endOffset_ = endOffset;
  return range
};
goog.dom.browserrange.IeRange.prototype.parentNode_ = null;
goog.dom.browserrange.IeRange.prototype.startNode_ = null;
goog.dom.browserrange.IeRange.prototype.endNode_ = null;
goog.dom.browserrange.IeRange.prototype.startOffset_ = -1;
goog.dom.browserrange.IeRange.prototype.endOffset_ = -1;
goog.dom.browserrange.IeRange.prototype.clone = function() {
  var range = new goog.dom.browserrange.IeRange(this.range_.duplicate(), this.doc_);
  range.parentNode_ = this.parentNode_;
  range.startNode_ = this.startNode_;
  range.endNode_ = this.endNode_;
  return range
};
goog.dom.browserrange.IeRange.prototype.getBrowserRange = function() {
  return this.range_
};
goog.dom.browserrange.IeRange.prototype.clearCachedValues_ = function() {
  this.parentNode_ = this.startNode_ = this.endNode_ = null;
  this.startOffset_ = this.endOffset_ = -1
};
goog.dom.browserrange.IeRange.prototype.getContainer = function() {
  if(!this.parentNode_) {
    var selectText = this.range_.text;
    var range = this.range_.duplicate();
    var rightTrimmedSelectText = selectText.replace(/ +$/, "");
    var numSpacesAtEnd = selectText.length - rightTrimmedSelectText.length;
    if(numSpacesAtEnd) {
      range.moveEnd("character", -numSpacesAtEnd)
    }
    var parent = range.parentElement();
    var htmlText = range.htmlText;
    var htmlTextLen = goog.string.stripNewlines(htmlText).length;
    if(this.isCollapsed() && htmlTextLen > 0) {
      return this.parentNode_ = parent
    }
    while(htmlTextLen > goog.string.stripNewlines(parent.outerHTML).length) {
      parent = parent.parentNode
    }
    while(parent.childNodes.length == 1 && parent.innerText == goog.dom.browserrange.IeRange.getNodeText_(parent.firstChild)) {
      if(!goog.dom.browserrange.canContainRangeEndpoint(parent.firstChild)) {
        break
      }
      parent = parent.firstChild
    }
    if(selectText.length == 0) {
      parent = this.findDeepestContainer_(parent)
    }
    this.parentNode_ = parent
  }
  return this.parentNode_
};
goog.dom.browserrange.IeRange.prototype.findDeepestContainer_ = function(node) {
  var childNodes = node.childNodes;
  for(var i = 0, len = childNodes.length;i < len;i++) {
    var child = childNodes[i];
    if(goog.dom.browserrange.canContainRangeEndpoint(child)) {
      var childRange = goog.dom.browserrange.IeRange.getBrowserRangeForNode_(child);
      var start = goog.dom.RangeEndpoint.START;
      var end = goog.dom.RangeEndpoint.END;
      var isChildRangeErratic = childRange.htmlText != child.outerHTML;
      var isNativeInRangeErratic = this.isCollapsed() && isChildRangeErratic;
      var inChildRange = isNativeInRangeErratic ? this.compareBrowserRangeEndpoints(childRange, start, start) >= 0 && this.compareBrowserRangeEndpoints(childRange, start, end) <= 0 : this.range_.inRange(childRange);
      if(inChildRange) {
        return this.findDeepestContainer_(child)
      }
    }
  }
  return node
};
goog.dom.browserrange.IeRange.prototype.getStartNode = function() {
  if(!this.startNode_) {
    this.startNode_ = this.getEndpointNode_(goog.dom.RangeEndpoint.START);
    if(this.isCollapsed()) {
      this.endNode_ = this.startNode_
    }
  }
  return this.startNode_
};
goog.dom.browserrange.IeRange.prototype.getStartOffset = function() {
  if(this.startOffset_ < 0) {
    this.startOffset_ = this.getOffset_(goog.dom.RangeEndpoint.START);
    if(this.isCollapsed()) {
      this.endOffset_ = this.startOffset_
    }
  }
  return this.startOffset_
};
goog.dom.browserrange.IeRange.prototype.getEndNode = function() {
  if(this.isCollapsed()) {
    return this.getStartNode()
  }
  if(!this.endNode_) {
    this.endNode_ = this.getEndpointNode_(goog.dom.RangeEndpoint.END)
  }
  return this.endNode_
};
goog.dom.browserrange.IeRange.prototype.getEndOffset = function() {
  if(this.isCollapsed()) {
    return this.getStartOffset()
  }
  if(this.endOffset_ < 0) {
    this.endOffset_ = this.getOffset_(goog.dom.RangeEndpoint.END);
    if(this.isCollapsed()) {
      this.startOffset_ = this.endOffset_
    }
  }
  return this.endOffset_
};
goog.dom.browserrange.IeRange.prototype.compareBrowserRangeEndpoints = function(range, thisEndpoint, otherEndpoint) {
  return this.range_.compareEndPoints((thisEndpoint == goog.dom.RangeEndpoint.START ? "Start" : "End") + "To" + (otherEndpoint == goog.dom.RangeEndpoint.START ? "Start" : "End"), range)
};
goog.dom.browserrange.IeRange.prototype.getEndpointNode_ = function(endpoint, opt_node) {
  var node = opt_node || this.getContainer();
  if(!node || !node.firstChild) {
    return node
  }
  var start = goog.dom.RangeEndpoint.START, end = goog.dom.RangeEndpoint.END;
  var isStartEndpoint = endpoint == start;
  for(var j = 0, length = node.childNodes.length;j < length;j++) {
    var i = isStartEndpoint ? j : length - j - 1;
    var child = node.childNodes[i];
    var childRange;
    try {
      childRange = goog.dom.browserrange.createRangeFromNodeContents(child)
    }catch(e) {
      continue
    }
    var ieRange = childRange.getBrowserRange();
    if(this.isCollapsed()) {
      if(!goog.dom.browserrange.canContainRangeEndpoint(child)) {
        if(this.compareBrowserRangeEndpoints(ieRange, start, start) == 0) {
          this.startOffset_ = this.endOffset_ = i;
          return node
        }
      }else {
        if(childRange.containsRange(this)) {
          return this.getEndpointNode_(endpoint, child)
        }
      }
    }else {
      if(this.containsRange(childRange)) {
        if(!goog.dom.browserrange.canContainRangeEndpoint(child)) {
          if(isStartEndpoint) {
            this.startOffset_ = i
          }else {
            this.endOffset_ = i + 1
          }
          return node
        }
        return this.getEndpointNode_(endpoint, child)
      }else {
        if(this.compareBrowserRangeEndpoints(ieRange, start, end) < 0 && this.compareBrowserRangeEndpoints(ieRange, end, start) > 0) {
          return this.getEndpointNode_(endpoint, child)
        }
      }
    }
  }
  return node
};
goog.dom.browserrange.IeRange.prototype.compareNodeEndpoints_ = function(node, thisEndpoint, otherEndpoint) {
  return this.range_.compareEndPoints((thisEndpoint == goog.dom.RangeEndpoint.START ? "Start" : "End") + "To" + (otherEndpoint == goog.dom.RangeEndpoint.START ? "Start" : "End"), goog.dom.browserrange.createRangeFromNodeContents(node).getBrowserRange())
};
goog.dom.browserrange.IeRange.prototype.getOffset_ = function(endpoint, opt_container) {
  var isStartEndpoint = endpoint == goog.dom.RangeEndpoint.START;
  var container = opt_container || (isStartEndpoint ? this.getStartNode() : this.getEndNode());
  if(container.nodeType == goog.dom.NodeType.ELEMENT) {
    var children = container.childNodes;
    var len = children.length;
    var edge = isStartEndpoint ? 0 : len - 1;
    var sign = isStartEndpoint ? 1 : -1;
    for(var i = edge;i >= 0 && i < len;i += sign) {
      var child = children[i];
      if(goog.dom.browserrange.canContainRangeEndpoint(child)) {
        continue
      }
      var endPointCompare = this.compareNodeEndpoints_(child, endpoint, endpoint);
      if(endPointCompare == 0) {
        return isStartEndpoint ? i : i + 1
      }
    }
    return i == -1 ? 0 : i
  }else {
    var range = this.range_.duplicate();
    var nodeRange = goog.dom.browserrange.IeRange.getBrowserRangeForNode_(container);
    range.setEndPoint(isStartEndpoint ? "EndToEnd" : "StartToStart", nodeRange);
    var rangeLength = range.text.length;
    return isStartEndpoint ? container.length - rangeLength : rangeLength
  }
};
goog.dom.browserrange.IeRange.getNodeText_ = function(node) {
  return node.nodeType == goog.dom.NodeType.TEXT ? node.nodeValue : node.innerText
};
goog.dom.browserrange.IeRange.prototype.isRangeInDocument = function() {
  var range = this.doc_.body.createTextRange();
  range.moveToElementText(this.doc_.body);
  return this.containsRange(new goog.dom.browserrange.IeRange(range, this.doc_), true)
};
goog.dom.browserrange.IeRange.prototype.isCollapsed = function() {
  return this.range_.compareEndPoints("StartToEnd", this.range_) == 0
};
goog.dom.browserrange.IeRange.prototype.getText = function() {
  return this.range_.text
};
goog.dom.browserrange.IeRange.prototype.getValidHtml = function() {
  return this.range_.htmlText
};
goog.dom.browserrange.IeRange.prototype.select = function(opt_reverse) {
  this.range_.select()
};
goog.dom.browserrange.IeRange.prototype.removeContents = function() {
  if(!this.isCollapsed() && this.range_.htmlText) {
    var startNode = this.getStartNode();
    var endNode = this.getEndNode();
    var oldText = this.range_.text;
    var clone = this.range_.duplicate();
    clone.moveStart("character", 1);
    clone.moveStart("character", -1);
    if(clone.text == oldText) {
      this.range_ = clone
    }
    this.range_.text = "";
    this.clearCachedValues_();
    var newStartNode = this.getStartNode();
    var newStartOffset = this.getStartOffset();
    try {
      var sibling = startNode.nextSibling;
      if(startNode == endNode && startNode.parentNode && startNode.nodeType == goog.dom.NodeType.TEXT && sibling && sibling.nodeType == goog.dom.NodeType.TEXT) {
        startNode.nodeValue += sibling.nodeValue;
        goog.dom.removeNode(sibling);
        this.range_ = goog.dom.browserrange.IeRange.getBrowserRangeForNode_(newStartNode);
        this.range_.move("character", newStartOffset);
        this.clearCachedValues_()
      }
    }catch(e) {
    }
  }
};
goog.dom.browserrange.IeRange.getDomHelper_ = function(range) {
  return goog.dom.getDomHelper(range.parentElement())
};
goog.dom.browserrange.IeRange.pasteElement_ = function(range, element, opt_domHelper) {
  opt_domHelper = opt_domHelper || goog.dom.browserrange.IeRange.getDomHelper_(range);
  var id;
  var originalId = id = element.id;
  if(!id) {
    id = element.id = goog.string.createUniqueString()
  }
  range.pasteHTML(element.outerHTML);
  element = opt_domHelper.getElement(id);
  if(element) {
    if(!originalId) {
      element.removeAttribute("id")
    }
  }
  return element
};
goog.dom.browserrange.IeRange.prototype.surroundContents = function(element) {
  goog.dom.removeNode(element);
  element.innerHTML = this.range_.htmlText;
  element = goog.dom.browserrange.IeRange.pasteElement_(this.range_, element);
  if(element) {
    this.range_.moveToElementText(element)
  }
  this.clearCachedValues_();
  return element
};
goog.dom.browserrange.IeRange.insertNode_ = function(clone, node, before, opt_domHelper) {
  opt_domHelper = opt_domHelper || goog.dom.browserrange.IeRange.getDomHelper_(clone);
  var isNonElement;
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    isNonElement = true;
    node = opt_domHelper.createDom(goog.dom.TagName.DIV, null, node)
  }
  clone.collapse(before);
  node = goog.dom.browserrange.IeRange.pasteElement_(clone, node, opt_domHelper);
  if(isNonElement) {
    var newNonElement = node.firstChild;
    opt_domHelper.flattenElement(node);
    node = newNonElement
  }
  return node
};
goog.dom.browserrange.IeRange.prototype.insertNode = function(node, before) {
  var output = goog.dom.browserrange.IeRange.insertNode_(this.range_.duplicate(), node, before);
  this.clearCachedValues_();
  return output
};
goog.dom.browserrange.IeRange.prototype.surroundWithNodes = function(startNode, endNode) {
  var clone1 = this.range_.duplicate();
  var clone2 = this.range_.duplicate();
  goog.dom.browserrange.IeRange.insertNode_(clone1, startNode, true);
  goog.dom.browserrange.IeRange.insertNode_(clone2, endNode, false);
  this.clearCachedValues_()
};
goog.dom.browserrange.IeRange.prototype.collapse = function(toStart) {
  this.range_.collapse(toStart);
  if(toStart) {
    this.endNode_ = this.startNode_;
    this.endOffset_ = this.startOffset_
  }else {
    this.startNode_ = this.endNode_;
    this.startOffset_ = this.endOffset_
  }
};
goog.provide("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyCodes = {MAC_ENTER:3, BACKSPACE:8, TAB:9, NUM_CENTER:12, ENTER:13, SHIFT:16, CTRL:17, ALT:18, PAUSE:19, CAPS_LOCK:20, ESC:27, SPACE:32, PAGE_UP:33, PAGE_DOWN:34, END:35, HOME:36, LEFT:37, UP:38, RIGHT:39, DOWN:40, PRINT_SCREEN:44, INSERT:45, DELETE:46, ZERO:48, ONE:49, TWO:50, THREE:51, FOUR:52, FIVE:53, SIX:54, SEVEN:55, EIGHT:56, NINE:57, FF_SEMICOLON:59, QUESTION_MARK:63, A:65, B:66, C:67, D:68, E:69, F:70, G:71, H:72, I:73, J:74, K:75, L:76, M:77, N:78, O:79, P:80, Q:81, R:82, 
S:83, T:84, U:85, V:86, W:87, X:88, Y:89, Z:90, META:91, WIN_KEY_RIGHT:92, CONTEXT_MENU:93, NUM_ZERO:96, NUM_ONE:97, NUM_TWO:98, NUM_THREE:99, NUM_FOUR:100, NUM_FIVE:101, NUM_SIX:102, NUM_SEVEN:103, NUM_EIGHT:104, NUM_NINE:105, NUM_MULTIPLY:106, NUM_PLUS:107, NUM_MINUS:109, NUM_PERIOD:110, NUM_DIVISION:111, F1:112, F2:113, F3:114, F4:115, F5:116, F6:117, F7:118, F8:119, F9:120, F10:121, F11:122, F12:123, NUMLOCK:144, SCROLL_LOCK:145, FIRST_MEDIA_KEY:166, LAST_MEDIA_KEY:183, SEMICOLON:186, DASH:189, 
EQUALS:187, COMMA:188, PERIOD:190, SLASH:191, APOSTROPHE:192, TILDE:192, SINGLE_QUOTE:222, OPEN_SQUARE_BRACKET:219, BACKSLASH:220, CLOSE_SQUARE_BRACKET:221, WIN_KEY:224, MAC_FF_META:224, WIN_IME:229, PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent = function(e) {
  if(e.altKey && !e.ctrlKey || e.metaKey || e.keyCode >= goog.events.KeyCodes.F1 && e.keyCode <= goog.events.KeyCodes.F12) {
    return false
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ALT:
    ;
    case goog.events.KeyCodes.CAPS_LOCK:
    ;
    case goog.events.KeyCodes.CONTEXT_MENU:
    ;
    case goog.events.KeyCodes.CTRL:
    ;
    case goog.events.KeyCodes.DOWN:
    ;
    case goog.events.KeyCodes.END:
    ;
    case goog.events.KeyCodes.ESC:
    ;
    case goog.events.KeyCodes.HOME:
    ;
    case goog.events.KeyCodes.INSERT:
    ;
    case goog.events.KeyCodes.LEFT:
    ;
    case goog.events.KeyCodes.MAC_FF_META:
    ;
    case goog.events.KeyCodes.META:
    ;
    case goog.events.KeyCodes.NUMLOCK:
    ;
    case goog.events.KeyCodes.NUM_CENTER:
    ;
    case goog.events.KeyCodes.PAGE_DOWN:
    ;
    case goog.events.KeyCodes.PAGE_UP:
    ;
    case goog.events.KeyCodes.PAUSE:
    ;
    case goog.events.KeyCodes.PHANTOM:
    ;
    case goog.events.KeyCodes.PRINT_SCREEN:
    ;
    case goog.events.KeyCodes.RIGHT:
    ;
    case goog.events.KeyCodes.SCROLL_LOCK:
    ;
    case goog.events.KeyCodes.SHIFT:
    ;
    case goog.events.KeyCodes.UP:
    ;
    case goog.events.KeyCodes.WIN_KEY:
    ;
    case goog.events.KeyCodes.WIN_KEY_RIGHT:
      return false;
    default:
      return e.keyCode < goog.events.KeyCodes.FIRST_MEDIA_KEY || e.keyCode > goog.events.KeyCodes.LAST_MEDIA_KEY
  }
};
goog.events.KeyCodes.firesKeyPressEvent = function(keyCode, opt_heldKeyCode, opt_shiftKey, opt_ctrlKey, opt_altKey) {
  if(!goog.userAgent.IE && !(goog.userAgent.WEBKIT && goog.userAgent.isVersion("525"))) {
    return true
  }
  if(goog.userAgent.MAC && opt_altKey) {
    return goog.events.KeyCodes.isCharacterKey(keyCode)
  }
  if(opt_altKey && !opt_ctrlKey) {
    return false
  }
  if(!opt_shiftKey && (opt_heldKeyCode == goog.events.KeyCodes.CTRL || opt_heldKeyCode == goog.events.KeyCodes.ALT)) {
    return false
  }
  if(goog.userAgent.IE && opt_ctrlKey && opt_heldKeyCode == keyCode) {
    return false
  }
  switch(keyCode) {
    case goog.events.KeyCodes.ENTER:
      return!(goog.userAgent.IE && goog.userAgent.isDocumentMode(9));
    case goog.events.KeyCodes.ESC:
      return!goog.userAgent.WEBKIT
  }
  return goog.events.KeyCodes.isCharacterKey(keyCode)
};
goog.events.KeyCodes.isCharacterKey = function(keyCode) {
  if(keyCode >= goog.events.KeyCodes.ZERO && keyCode <= goog.events.KeyCodes.NINE) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.NUM_ZERO && keyCode <= goog.events.KeyCodes.NUM_MULTIPLY) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.A && keyCode <= goog.events.KeyCodes.Z) {
    return true
  }
  if(goog.userAgent.WEBKIT && keyCode == 0) {
    return true
  }
  switch(keyCode) {
    case goog.events.KeyCodes.SPACE:
    ;
    case goog.events.KeyCodes.QUESTION_MARK:
    ;
    case goog.events.KeyCodes.NUM_PLUS:
    ;
    case goog.events.KeyCodes.NUM_MINUS:
    ;
    case goog.events.KeyCodes.NUM_PERIOD:
    ;
    case goog.events.KeyCodes.NUM_DIVISION:
    ;
    case goog.events.KeyCodes.SEMICOLON:
    ;
    case goog.events.KeyCodes.FF_SEMICOLON:
    ;
    case goog.events.KeyCodes.DASH:
    ;
    case goog.events.KeyCodes.EQUALS:
    ;
    case goog.events.KeyCodes.COMMA:
    ;
    case goog.events.KeyCodes.PERIOD:
    ;
    case goog.events.KeyCodes.SLASH:
    ;
    case goog.events.KeyCodes.APOSTROPHE:
    ;
    case goog.events.KeyCodes.SINGLE_QUOTE:
    ;
    case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
    ;
    case goog.events.KeyCodes.BACKSLASH:
    ;
    case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      return true;
    default:
      return false
  }
};
goog.provide("goog.events.KeyEvent");
goog.provide("goog.events.KeyHandler");
goog.provide("goog.events.KeyHandler.EventType");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyHandler = function(opt_element, opt_capture) {
  goog.events.EventTarget.call(this);
  if(opt_element) {
    this.attach(opt_element, opt_capture)
  }
};
goog.inherits(goog.events.KeyHandler, goog.events.EventTarget);
goog.events.KeyHandler.prototype.element_ = null;
goog.events.KeyHandler.prototype.keyPressKey_ = null;
goog.events.KeyHandler.prototype.keyDownKey_ = null;
goog.events.KeyHandler.prototype.keyUpKey_ = null;
goog.events.KeyHandler.prototype.lastKey_ = -1;
goog.events.KeyHandler.prototype.keyCode_ = -1;
goog.events.KeyHandler.EventType = {KEY:"key"};
goog.events.KeyHandler.safariKey_ = {3:goog.events.KeyCodes.ENTER, 12:goog.events.KeyCodes.NUMLOCK, 63232:goog.events.KeyCodes.UP, 63233:goog.events.KeyCodes.DOWN, 63234:goog.events.KeyCodes.LEFT, 63235:goog.events.KeyCodes.RIGHT, 63236:goog.events.KeyCodes.F1, 63237:goog.events.KeyCodes.F2, 63238:goog.events.KeyCodes.F3, 63239:goog.events.KeyCodes.F4, 63240:goog.events.KeyCodes.F5, 63241:goog.events.KeyCodes.F6, 63242:goog.events.KeyCodes.F7, 63243:goog.events.KeyCodes.F8, 63244:goog.events.KeyCodes.F9, 
63245:goog.events.KeyCodes.F10, 63246:goog.events.KeyCodes.F11, 63247:goog.events.KeyCodes.F12, 63248:goog.events.KeyCodes.PRINT_SCREEN, 63272:goog.events.KeyCodes.DELETE, 63273:goog.events.KeyCodes.HOME, 63275:goog.events.KeyCodes.END, 63276:goog.events.KeyCodes.PAGE_UP, 63277:goog.events.KeyCodes.PAGE_DOWN, 63289:goog.events.KeyCodes.NUMLOCK, 63302:goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.keyIdentifier_ = {"Up":goog.events.KeyCodes.UP, "Down":goog.events.KeyCodes.DOWN, "Left":goog.events.KeyCodes.LEFT, "Right":goog.events.KeyCodes.RIGHT, "Enter":goog.events.KeyCodes.ENTER, "F1":goog.events.KeyCodes.F1, "F2":goog.events.KeyCodes.F2, "F3":goog.events.KeyCodes.F3, "F4":goog.events.KeyCodes.F4, "F5":goog.events.KeyCodes.F5, "F6":goog.events.KeyCodes.F6, "F7":goog.events.KeyCodes.F7, "F8":goog.events.KeyCodes.F8, "F9":goog.events.KeyCodes.F9, "F10":goog.events.KeyCodes.F10, 
"F11":goog.events.KeyCodes.F11, "F12":goog.events.KeyCodes.F12, "U+007F":goog.events.KeyCodes.DELETE, "Home":goog.events.KeyCodes.HOME, "End":goog.events.KeyCodes.END, "PageUp":goog.events.KeyCodes.PAGE_UP, "PageDown":goog.events.KeyCodes.PAGE_DOWN, "Insert":goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.mozKeyCodeToKeyCodeMap_ = {61:187, 59:186};
goog.events.KeyHandler.USES_KEYDOWN_ = goog.userAgent.IE || goog.userAgent.WEBKIT && goog.userAgent.isVersion("525");
goog.events.KeyHandler.prototype.handleKeyDown_ = function(e) {
  if(goog.userAgent.WEBKIT && (this.lastKey_ == goog.events.KeyCodes.CTRL && !e.ctrlKey || this.lastKey_ == goog.events.KeyCodes.ALT && !e.altKey)) {
    this.lastKey_ = -1;
    this.keyCode_ = -1
  }
  if(goog.events.KeyHandler.USES_KEYDOWN_ && !goog.events.KeyCodes.firesKeyPressEvent(e.keyCode, this.lastKey_, e.shiftKey, e.ctrlKey, e.altKey)) {
    this.handleEvent(e)
  }else {
    if(goog.userAgent.GECKO && e.keyCode in goog.events.KeyHandler.mozKeyCodeToKeyCodeMap_) {
      this.keyCode_ = goog.events.KeyHandler.mozKeyCodeToKeyCodeMap_[e.keyCode]
    }else {
      this.keyCode_ = e.keyCode
    }
  }
};
goog.events.KeyHandler.prototype.handleKeyup_ = function(e) {
  this.lastKey_ = -1;
  this.keyCode_ = -1
};
goog.events.KeyHandler.prototype.handleEvent = function(e) {
  var be = e.getBrowserEvent();
  var keyCode, charCode;
  if(goog.userAgent.IE && e.type == goog.events.EventType.KEYPRESS) {
    keyCode = this.keyCode_;
    charCode = keyCode != goog.events.KeyCodes.ENTER && keyCode != goog.events.KeyCodes.ESC ? be.keyCode : 0
  }else {
    if(goog.userAgent.WEBKIT && e.type == goog.events.EventType.KEYPRESS) {
      keyCode = this.keyCode_;
      charCode = be.charCode >= 0 && be.charCode < 63232 && goog.events.KeyCodes.isCharacterKey(keyCode) ? be.charCode : 0
    }else {
      if(goog.userAgent.OPERA) {
        keyCode = this.keyCode_;
        charCode = goog.events.KeyCodes.isCharacterKey(keyCode) ? be.keyCode : 0
      }else {
        keyCode = be.keyCode || this.keyCode_;
        charCode = be.charCode || 0;
        if(goog.userAgent.MAC && charCode == goog.events.KeyCodes.QUESTION_MARK && !keyCode) {
          keyCode = goog.events.KeyCodes.SLASH
        }
      }
    }
  }
  var key = keyCode;
  var keyIdentifier = be.keyIdentifier;
  if(keyCode) {
    if(keyCode >= 63232 && keyCode in goog.events.KeyHandler.safariKey_) {
      key = goog.events.KeyHandler.safariKey_[keyCode]
    }else {
      if(keyCode == 25 && e.shiftKey) {
        key = 9
      }
    }
  }else {
    if(keyIdentifier && keyIdentifier in goog.events.KeyHandler.keyIdentifier_) {
      key = goog.events.KeyHandler.keyIdentifier_[keyIdentifier]
    }
  }
  var repeat = key == this.lastKey_;
  this.lastKey_ = key;
  var event = new goog.events.KeyEvent(key, charCode, repeat, be);
  try {
    this.dispatchEvent(event)
  }finally {
    event.dispose()
  }
};
goog.events.KeyHandler.prototype.getElement = function() {
  return this.element_
};
goog.events.KeyHandler.prototype.attach = function(element, opt_capture) {
  if(this.keyUpKey_) {
    this.detach()
  }
  this.element_ = element;
  this.keyPressKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYPRESS, this, opt_capture);
  this.keyDownKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYDOWN, this.handleKeyDown_, opt_capture, this);
  this.keyUpKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYUP, this.handleKeyup_, opt_capture, this)
};
goog.events.KeyHandler.prototype.detach = function() {
  if(this.keyPressKey_) {
    goog.events.unlistenByKey(this.keyPressKey_);
    goog.events.unlistenByKey(this.keyDownKey_);
    goog.events.unlistenByKey(this.keyUpKey_);
    this.keyPressKey_ = null;
    this.keyDownKey_ = null;
    this.keyUpKey_ = null
  }
  this.element_ = null;
  this.lastKey_ = -1;
  this.keyCode_ = -1
};
goog.events.KeyHandler.prototype.disposeInternal = function() {
  goog.events.KeyHandler.superClass_.disposeInternal.call(this);
  this.detach()
};
goog.events.KeyEvent = function(keyCode, charCode, repeat, browserEvent) {
  goog.events.BrowserEvent.call(this, browserEvent);
  this.type = goog.events.KeyHandler.EventType.KEY;
  this.keyCode = keyCode;
  this.charCode = charCode;
  this.repeat = repeat
};
goog.inherits(goog.events.KeyEvent, goog.events.BrowserEvent);
goog.provide("goog.dom.browserrange.W3cRange");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.RangeEndpoint");
goog.require("goog.dom.browserrange.AbstractRange");
goog.require("goog.string");
goog.dom.browserrange.W3cRange = function(range) {
  this.range_ = range
};
goog.inherits(goog.dom.browserrange.W3cRange, goog.dom.browserrange.AbstractRange);
goog.dom.browserrange.W3cRange.getBrowserRangeForNode = function(node) {
  var nodeRange = goog.dom.getOwnerDocument(node).createRange();
  if(node.nodeType == goog.dom.NodeType.TEXT) {
    nodeRange.setStart(node, 0);
    nodeRange.setEnd(node, node.length)
  }else {
    if(!goog.dom.browserrange.canContainRangeEndpoint(node)) {
      var rangeParent = node.parentNode;
      var rangeStartOffset = goog.array.indexOf(rangeParent.childNodes, node);
      nodeRange.setStart(rangeParent, rangeStartOffset);
      nodeRange.setEnd(rangeParent, rangeStartOffset + 1)
    }else {
      var tempNode, leaf = node;
      while((tempNode = leaf.firstChild) && goog.dom.browserrange.canContainRangeEndpoint(tempNode)) {
        leaf = tempNode
      }
      nodeRange.setStart(leaf, 0);
      leaf = node;
      while((tempNode = leaf.lastChild) && goog.dom.browserrange.canContainRangeEndpoint(tempNode)) {
        leaf = tempNode
      }
      nodeRange.setEnd(leaf, leaf.nodeType == goog.dom.NodeType.ELEMENT ? leaf.childNodes.length : leaf.length)
    }
  }
  return nodeRange
};
goog.dom.browserrange.W3cRange.getBrowserRangeForNodes = function(startNode, startOffset, endNode, endOffset) {
  var nodeRange = goog.dom.getOwnerDocument(startNode).createRange();
  nodeRange.setStart(startNode, startOffset);
  nodeRange.setEnd(endNode, endOffset);
  return nodeRange
};
goog.dom.browserrange.W3cRange.createFromNodeContents = function(node) {
  return new goog.dom.browserrange.W3cRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNode(node))
};
goog.dom.browserrange.W3cRange.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  return new goog.dom.browserrange.W3cRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNodes(startNode, startOffset, endNode, endOffset))
};
goog.dom.browserrange.W3cRange.prototype.clone = function() {
  return new this.constructor(this.range_.cloneRange())
};
goog.dom.browserrange.W3cRange.prototype.getBrowserRange = function() {
  return this.range_
};
goog.dom.browserrange.W3cRange.prototype.getContainer = function() {
  return this.range_.commonAncestorContainer
};
goog.dom.browserrange.W3cRange.prototype.getStartNode = function() {
  return this.range_.startContainer
};
goog.dom.browserrange.W3cRange.prototype.getStartOffset = function() {
  return this.range_.startOffset
};
goog.dom.browserrange.W3cRange.prototype.getEndNode = function() {
  return this.range_.endContainer
};
goog.dom.browserrange.W3cRange.prototype.getEndOffset = function() {
  return this.range_.endOffset
};
goog.dom.browserrange.W3cRange.prototype.compareBrowserRangeEndpoints = function(range, thisEndpoint, otherEndpoint) {
  return this.range_.compareBoundaryPoints(otherEndpoint == goog.dom.RangeEndpoint.START ? thisEndpoint == goog.dom.RangeEndpoint.START ? goog.global["Range"].START_TO_START : goog.global["Range"].START_TO_END : thisEndpoint == goog.dom.RangeEndpoint.START ? goog.global["Range"].END_TO_START : goog.global["Range"].END_TO_END, range)
};
goog.dom.browserrange.W3cRange.prototype.isCollapsed = function() {
  return this.range_.collapsed
};
goog.dom.browserrange.W3cRange.prototype.getText = function() {
  return this.range_.toString()
};
goog.dom.browserrange.W3cRange.prototype.getValidHtml = function() {
  var div = goog.dom.getDomHelper(this.range_.startContainer).createDom("div");
  div.appendChild(this.range_.cloneContents());
  var result = div.innerHTML;
  if(goog.string.startsWith(result, "<") || !this.isCollapsed() && !goog.string.contains(result, "<")) {
    return result
  }
  var container = this.getContainer();
  container = container.nodeType == goog.dom.NodeType.ELEMENT ? container : container.parentNode;
  var html = goog.dom.getOuterHtml(container.cloneNode(false));
  return html.replace(">", ">" + result)
};
goog.dom.browserrange.W3cRange.prototype.select = function(reverse) {
  var win = goog.dom.getWindow(goog.dom.getOwnerDocument(this.getStartNode()));
  this.selectInternal(win.getSelection(), reverse)
};
goog.dom.browserrange.W3cRange.prototype.selectInternal = function(selection, reverse) {
  selection.removeAllRanges();
  selection.addRange(this.range_)
};
goog.dom.browserrange.W3cRange.prototype.removeContents = function() {
  var range = this.range_;
  range.extractContents();
  if(range.startContainer.hasChildNodes()) {
    var rangeStartContainer = range.startContainer.childNodes[range.startOffset];
    if(rangeStartContainer) {
      var rangePrevious = rangeStartContainer.previousSibling;
      if(goog.dom.getRawTextContent(rangeStartContainer) == "") {
        goog.dom.removeNode(rangeStartContainer)
      }
      if(rangePrevious && goog.dom.getRawTextContent(rangePrevious) == "") {
        goog.dom.removeNode(rangePrevious)
      }
    }
  }
};
goog.dom.browserrange.W3cRange.prototype.surroundContents = function(element) {
  this.range_.surroundContents(element);
  return element
};
goog.dom.browserrange.W3cRange.prototype.insertNode = function(node, before) {
  var range = this.range_.cloneRange();
  range.collapse(before);
  range.insertNode(node);
  range.detach();
  return node
};
goog.dom.browserrange.W3cRange.prototype.surroundWithNodes = function(startNode, endNode) {
  var win = goog.dom.getWindow(goog.dom.getOwnerDocument(this.getStartNode()));
  var selectionRange = goog.dom.Range.createFromWindow(win);
  if(selectionRange) {
    var sNode = selectionRange.getStartNode();
    var eNode = selectionRange.getEndNode();
    var sOffset = selectionRange.getStartOffset();
    var eOffset = selectionRange.getEndOffset()
  }
  var clone1 = this.range_.cloneRange();
  var clone2 = this.range_.cloneRange();
  clone1.collapse(false);
  clone2.collapse(true);
  clone1.insertNode(endNode);
  clone2.insertNode(startNode);
  clone1.detach();
  clone2.detach();
  if(selectionRange) {
    var isInsertedNode = function(n) {
      return n == startNode || n == endNode
    };
    if(sNode.nodeType == goog.dom.NodeType.TEXT) {
      while(sOffset > sNode.length) {
        sOffset -= sNode.length;
        do {
          sNode = sNode.nextSibling
        }while(isInsertedNode(sNode))
      }
    }
    if(eNode.nodeType == goog.dom.NodeType.TEXT) {
      while(eOffset > eNode.length) {
        eOffset -= eNode.length;
        do {
          eNode = eNode.nextSibling
        }while(isInsertedNode(eNode))
      }
    }
    goog.dom.Range.createFromNodes(sNode, sOffset, eNode, eOffset).select()
  }
};
goog.dom.browserrange.W3cRange.prototype.collapse = function(toStart) {
  this.range_.collapse(toStart)
};
goog.provide("goog.dom.browserrange.GeckoRange");
goog.require("goog.dom.browserrange.W3cRange");
goog.dom.browserrange.GeckoRange = function(range) {
  goog.dom.browserrange.W3cRange.call(this, range)
};
goog.inherits(goog.dom.browserrange.GeckoRange, goog.dom.browserrange.W3cRange);
goog.dom.browserrange.GeckoRange.createFromNodeContents = function(node) {
  return new goog.dom.browserrange.GeckoRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNode(node))
};
goog.dom.browserrange.GeckoRange.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  return new goog.dom.browserrange.GeckoRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNodes(startNode, startOffset, endNode, endOffset))
};
goog.dom.browserrange.GeckoRange.prototype.selectInternal = function(selection, reversed) {
  var anchorNode = reversed ? this.getEndNode() : this.getStartNode();
  var anchorOffset = reversed ? this.getEndOffset() : this.getStartOffset();
  var focusNode = reversed ? this.getStartNode() : this.getEndNode();
  var focusOffset = reversed ? this.getStartOffset() : this.getEndOffset();
  selection.collapse(anchorNode, anchorOffset);
  if(anchorNode != focusNode || anchorOffset != focusOffset) {
    selection.extend(focusNode, focusOffset)
  }
};
goog.provide("goog.dom.browserrange.OperaRange");
goog.require("goog.dom.browserrange.W3cRange");
goog.dom.browserrange.OperaRange = function(range) {
  goog.dom.browserrange.W3cRange.call(this, range)
};
goog.inherits(goog.dom.browserrange.OperaRange, goog.dom.browserrange.W3cRange);
goog.dom.browserrange.OperaRange.createFromNodeContents = function(node) {
  return new goog.dom.browserrange.OperaRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNode(node))
};
goog.dom.browserrange.OperaRange.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  return new goog.dom.browserrange.OperaRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNodes(startNode, startOffset, endNode, endOffset))
};
goog.dom.browserrange.OperaRange.prototype.selectInternal = function(selection, reversed) {
  selection.collapse(this.getStartNode(), this.getStartOffset());
  if(this.getEndNode() != this.getStartNode() || this.getEndOffset() != this.getStartOffset()) {
    selection.extend(this.getEndNode(), this.getEndOffset())
  }
  if(selection.rangeCount == 0) {
    selection.addRange(this.range_)
  }
};
goog.provide("goog.dom.browserrange.WebKitRange");
goog.require("goog.dom.RangeEndpoint");
goog.require("goog.dom.browserrange.W3cRange");
goog.require("goog.userAgent");
goog.dom.browserrange.WebKitRange = function(range) {
  goog.dom.browserrange.W3cRange.call(this, range)
};
goog.inherits(goog.dom.browserrange.WebKitRange, goog.dom.browserrange.W3cRange);
goog.dom.browserrange.WebKitRange.createFromNodeContents = function(node) {
  return new goog.dom.browserrange.WebKitRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNode(node))
};
goog.dom.browserrange.WebKitRange.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  return new goog.dom.browserrange.WebKitRange(goog.dom.browserrange.W3cRange.getBrowserRangeForNodes(startNode, startOffset, endNode, endOffset))
};
goog.dom.browserrange.WebKitRange.prototype.compareBrowserRangeEndpoints = function(range, thisEndpoint, otherEndpoint) {
  if(goog.userAgent.isVersion("528")) {
    return goog.dom.browserrange.WebKitRange.superClass_.compareBrowserRangeEndpoints.call(this, range, thisEndpoint, otherEndpoint)
  }
  return this.range_.compareBoundaryPoints(otherEndpoint == goog.dom.RangeEndpoint.START ? thisEndpoint == goog.dom.RangeEndpoint.START ? goog.global["Range"].START_TO_START : goog.global["Range"].END_TO_START : thisEndpoint == goog.dom.RangeEndpoint.START ? goog.global["Range"].START_TO_END : goog.global["Range"].END_TO_END, range)
};
goog.dom.browserrange.WebKitRange.prototype.selectInternal = function(selection, reversed) {
  selection.removeAllRanges();
  if(reversed) {
    selection.setBaseAndExtent(this.getEndNode(), this.getEndOffset(), this.getStartNode(), this.getStartOffset())
  }else {
    selection.setBaseAndExtent(this.getStartNode(), this.getStartOffset(), this.getEndNode(), this.getEndOffset())
  }
};
goog.provide("goog.dom.browserrange");
goog.provide("goog.dom.browserrange.Error");
goog.require("goog.dom");
goog.require("goog.dom.browserrange.GeckoRange");
goog.require("goog.dom.browserrange.IeRange");
goog.require("goog.dom.browserrange.OperaRange");
goog.require("goog.dom.browserrange.W3cRange");
goog.require("goog.dom.browserrange.WebKitRange");
goog.require("goog.userAgent");
goog.dom.browserrange.Error = {NOT_IMPLEMENTED:"Not Implemented"};
goog.dom.browserrange.createRange = function(range) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    return new goog.dom.browserrange.IeRange(range, goog.dom.getOwnerDocument(range.parentElement()))
  }else {
    if(goog.userAgent.WEBKIT) {
      return new goog.dom.browserrange.WebKitRange(range)
    }else {
      if(goog.userAgent.GECKO) {
        return new goog.dom.browserrange.GeckoRange(range)
      }else {
        if(goog.userAgent.OPERA) {
          return new goog.dom.browserrange.OperaRange(range)
        }else {
          return new goog.dom.browserrange.W3cRange(range)
        }
      }
    }
  }
};
goog.dom.browserrange.createRangeFromNodeContents = function(node) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    return goog.dom.browserrange.IeRange.createFromNodeContents(node)
  }else {
    if(goog.userAgent.WEBKIT) {
      return goog.dom.browserrange.WebKitRange.createFromNodeContents(node)
    }else {
      if(goog.userAgent.GECKO) {
        return goog.dom.browserrange.GeckoRange.createFromNodeContents(node)
      }else {
        if(goog.userAgent.OPERA) {
          return goog.dom.browserrange.OperaRange.createFromNodeContents(node)
        }else {
          return goog.dom.browserrange.W3cRange.createFromNodeContents(node)
        }
      }
    }
  }
};
goog.dom.browserrange.createRangeFromNodes = function(startNode, startOffset, endNode, endOffset) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    return goog.dom.browserrange.IeRange.createFromNodes(startNode, startOffset, endNode, endOffset)
  }else {
    if(goog.userAgent.WEBKIT) {
      return goog.dom.browserrange.WebKitRange.createFromNodes(startNode, startOffset, endNode, endOffset)
    }else {
      if(goog.userAgent.GECKO) {
        return goog.dom.browserrange.GeckoRange.createFromNodes(startNode, startOffset, endNode, endOffset)
      }else {
        if(goog.userAgent.OPERA) {
          return goog.dom.browserrange.OperaRange.createFromNodes(startNode, startOffset, endNode, endOffset)
        }else {
          return goog.dom.browserrange.W3cRange.createFromNodes(startNode, startOffset, endNode, endOffset)
        }
      }
    }
  }
};
goog.dom.browserrange.canContainRangeEndpoint = function(node) {
  return goog.dom.canHaveChildren(node) || node.nodeType == goog.dom.NodeType.TEXT
};
goog.provide("goog.dom.TextRange");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.AbstractRange");
goog.require("goog.dom.RangeType");
goog.require("goog.dom.SavedRange");
goog.require("goog.dom.TagName");
goog.require("goog.dom.TextRangeIterator");
goog.require("goog.dom.browserrange");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.TextRange = function() {
};
goog.inherits(goog.dom.TextRange, goog.dom.AbstractRange);
goog.dom.TextRange.createFromBrowserRange = function(range, opt_isReversed) {
  return goog.dom.TextRange.createFromBrowserRangeWrapper_(goog.dom.browserrange.createRange(range), opt_isReversed)
};
goog.dom.TextRange.createFromBrowserRangeWrapper_ = function(browserRange, opt_isReversed) {
  var range = new goog.dom.TextRange;
  range.browserRangeWrapper_ = browserRange;
  range.isReversed_ = !!opt_isReversed;
  return range
};
goog.dom.TextRange.createFromNodeContents = function(node, opt_isReversed) {
  return goog.dom.TextRange.createFromBrowserRangeWrapper_(goog.dom.browserrange.createRangeFromNodeContents(node), opt_isReversed)
};
goog.dom.TextRange.createFromNodes = function(anchorNode, anchorOffset, focusNode, focusOffset) {
  var range = new goog.dom.TextRange;
  range.isReversed_ = goog.dom.Range.isReversed(anchorNode, anchorOffset, focusNode, focusOffset);
  if(anchorNode.tagName == "BR") {
    var parent = anchorNode.parentNode;
    anchorOffset = goog.array.indexOf(parent.childNodes, anchorNode);
    anchorNode = parent
  }
  if(focusNode.tagName == "BR") {
    var parent = focusNode.parentNode;
    focusOffset = goog.array.indexOf(parent.childNodes, focusNode);
    focusNode = parent
  }
  if(range.isReversed_) {
    range.startNode_ = focusNode;
    range.startOffset_ = focusOffset;
    range.endNode_ = anchorNode;
    range.endOffset_ = anchorOffset
  }else {
    range.startNode_ = anchorNode;
    range.startOffset_ = anchorOffset;
    range.endNode_ = focusNode;
    range.endOffset_ = focusOffset
  }
  return range
};
goog.dom.TextRange.prototype.browserRangeWrapper_ = null;
goog.dom.TextRange.prototype.startNode_ = null;
goog.dom.TextRange.prototype.startOffset_ = null;
goog.dom.TextRange.prototype.endNode_ = null;
goog.dom.TextRange.prototype.endOffset_ = null;
goog.dom.TextRange.prototype.isReversed_ = false;
goog.dom.TextRange.prototype.clone = function() {
  var range = new goog.dom.TextRange;
  range.browserRangeWrapper_ = this.browserRangeWrapper_;
  range.startNode_ = this.startNode_;
  range.startOffset_ = this.startOffset_;
  range.endNode_ = this.endNode_;
  range.endOffset_ = this.endOffset_;
  range.isReversed_ = this.isReversed_;
  return range
};
goog.dom.TextRange.prototype.getType = function() {
  return goog.dom.RangeType.TEXT
};
goog.dom.TextRange.prototype.getBrowserRangeObject = function() {
  return this.getBrowserRangeWrapper_().getBrowserRange()
};
goog.dom.TextRange.prototype.setBrowserRangeObject = function(nativeRange) {
  if(goog.dom.AbstractRange.isNativeControlRange(nativeRange)) {
    return false
  }
  this.browserRangeWrapper_ = goog.dom.browserrange.createRange(nativeRange);
  this.clearCachedValues_();
  return true
};
goog.dom.TextRange.prototype.clearCachedValues_ = function() {
  this.startNode_ = this.startOffset_ = this.endNode_ = this.endOffset_ = null
};
goog.dom.TextRange.prototype.getTextRangeCount = function() {
  return 1
};
goog.dom.TextRange.prototype.getTextRange = function(i) {
  return this
};
goog.dom.TextRange.prototype.getBrowserRangeWrapper_ = function() {
  return this.browserRangeWrapper_ || (this.browserRangeWrapper_ = goog.dom.browserrange.createRangeFromNodes(this.getStartNode(), this.getStartOffset(), this.getEndNode(), this.getEndOffset()))
};
goog.dom.TextRange.prototype.getContainer = function() {
  return this.getBrowserRangeWrapper_().getContainer()
};
goog.dom.TextRange.prototype.getStartNode = function() {
  return this.startNode_ || (this.startNode_ = this.getBrowserRangeWrapper_().getStartNode())
};
goog.dom.TextRange.prototype.getStartOffset = function() {
  return this.startOffset_ != null ? this.startOffset_ : this.startOffset_ = this.getBrowserRangeWrapper_().getStartOffset()
};
goog.dom.TextRange.prototype.getEndNode = function() {
  return this.endNode_ || (this.endNode_ = this.getBrowserRangeWrapper_().getEndNode())
};
goog.dom.TextRange.prototype.getEndOffset = function() {
  return this.endOffset_ != null ? this.endOffset_ : this.endOffset_ = this.getBrowserRangeWrapper_().getEndOffset()
};
goog.dom.TextRange.prototype.moveToNodes = function(startNode, startOffset, endNode, endOffset, isReversed) {
  this.startNode_ = startNode;
  this.startOffset_ = startOffset;
  this.endNode_ = endNode;
  this.endOffset_ = endOffset;
  this.isReversed_ = isReversed;
  this.browserRangeWrapper_ = null
};
goog.dom.TextRange.prototype.isReversed = function() {
  return this.isReversed_
};
goog.dom.TextRange.prototype.containsRange = function(otherRange, opt_allowPartial) {
  var otherRangeType = otherRange.getType();
  if(otherRangeType == goog.dom.RangeType.TEXT) {
    return this.getBrowserRangeWrapper_().containsRange(otherRange.getBrowserRangeWrapper_(), opt_allowPartial)
  }else {
    if(otherRangeType == goog.dom.RangeType.CONTROL) {
      var elements = otherRange.getElements();
      var fn = opt_allowPartial ? goog.array.some : goog.array.every;
      return fn(elements, function(el) {
        return this.containsNode(el, opt_allowPartial)
      }, this)
    }
  }
  return false
};
goog.dom.TextRange.isAttachedNode = function(node) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    var returnValue = false;
    try {
      returnValue = node.parentNode
    }catch(e) {
    }
    return!!returnValue
  }else {
    return goog.dom.contains(node.ownerDocument.body, node)
  }
};
goog.dom.TextRange.prototype.isRangeInDocument = function() {
  return(!this.startNode_ || goog.dom.TextRange.isAttachedNode(this.startNode_)) && (!this.endNode_ || goog.dom.TextRange.isAttachedNode(this.endNode_)) && (!(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) || this.getBrowserRangeWrapper_().isRangeInDocument())
};
goog.dom.TextRange.prototype.isCollapsed = function() {
  return this.getBrowserRangeWrapper_().isCollapsed()
};
goog.dom.TextRange.prototype.getText = function() {
  return this.getBrowserRangeWrapper_().getText()
};
goog.dom.TextRange.prototype.getHtmlFragment = function() {
  return this.getBrowserRangeWrapper_().getHtmlFragment()
};
goog.dom.TextRange.prototype.getValidHtml = function() {
  return this.getBrowserRangeWrapper_().getValidHtml()
};
goog.dom.TextRange.prototype.getPastableHtml = function() {
  var html = this.getValidHtml();
  if(html.match(/^\s*<td\b/i)) {
    html = "<table><tbody><tr>" + html + "</tr></tbody></table>"
  }else {
    if(html.match(/^\s*<tr\b/i)) {
      html = "<table><tbody>" + html + "</tbody></table>"
    }else {
      if(html.match(/^\s*<tbody\b/i)) {
        html = "<table>" + html + "</table>"
      }else {
        if(html.match(/^\s*<li\b/i)) {
          var container = this.getContainer();
          var tagType = goog.dom.TagName.UL;
          while(container) {
            if(container.tagName == goog.dom.TagName.OL) {
              tagType = goog.dom.TagName.OL;
              break
            }else {
              if(container.tagName == goog.dom.TagName.UL) {
                break
              }
            }
            container = container.parentNode
          }
          html = goog.string.buildString("<", tagType, ">", html, "</", tagType, ">")
        }
      }
    }
  }
  return html
};
goog.dom.TextRange.prototype.__iterator__ = function(opt_keys) {
  return new goog.dom.TextRangeIterator(this.getStartNode(), this.getStartOffset(), this.getEndNode(), this.getEndOffset())
};
goog.dom.TextRange.prototype.select = function() {
  this.getBrowserRangeWrapper_().select(this.isReversed_)
};
goog.dom.TextRange.prototype.removeContents = function() {
  this.getBrowserRangeWrapper_().removeContents();
  this.clearCachedValues_()
};
goog.dom.TextRange.prototype.surroundContents = function(element) {
  var output = this.getBrowserRangeWrapper_().surroundContents(element);
  this.clearCachedValues_();
  return output
};
goog.dom.TextRange.prototype.insertNode = function(node, before) {
  var output = this.getBrowserRangeWrapper_().insertNode(node, before);
  this.clearCachedValues_();
  return output
};
goog.dom.TextRange.prototype.surroundWithNodes = function(startNode, endNode) {
  this.getBrowserRangeWrapper_().surroundWithNodes(startNode, endNode);
  this.clearCachedValues_()
};
goog.dom.TextRange.prototype.saveUsingDom = function() {
  return new goog.dom.DomSavedTextRange_(this)
};
goog.dom.TextRange.prototype.collapse = function(toAnchor) {
  var toStart = this.isReversed() ? !toAnchor : toAnchor;
  if(this.browserRangeWrapper_) {
    this.browserRangeWrapper_.collapse(toStart)
  }
  if(toStart) {
    this.endNode_ = this.startNode_;
    this.endOffset_ = this.startOffset_
  }else {
    this.startNode_ = this.endNode_;
    this.startOffset_ = this.endOffset_
  }
  this.isReversed_ = false
};
goog.dom.DomSavedTextRange_ = function(range) {
  this.anchorNode_ = range.getAnchorNode();
  this.anchorOffset_ = range.getAnchorOffset();
  this.focusNode_ = range.getFocusNode();
  this.focusOffset_ = range.getFocusOffset()
};
goog.inherits(goog.dom.DomSavedTextRange_, goog.dom.SavedRange);
goog.dom.DomSavedTextRange_.prototype.restoreInternal = function() {
  return goog.dom.Range.createFromNodes(this.anchorNode_, this.anchorOffset_, this.focusNode_, this.focusOffset_)
};
goog.dom.DomSavedTextRange_.prototype.disposeInternal = function() {
  goog.dom.DomSavedTextRange_.superClass_.disposeInternal.call(this);
  this.anchorNode_ = null;
  this.focusNode_ = null
};
goog.provide("goog.dom.ControlRange");
goog.provide("goog.dom.ControlRangeIterator");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.AbstractMultiRange");
goog.require("goog.dom.AbstractRange");
goog.require("goog.dom.RangeIterator");
goog.require("goog.dom.RangeType");
goog.require("goog.dom.SavedRange");
goog.require("goog.dom.TagWalkType");
goog.require("goog.dom.TextRange");
goog.require("goog.iter.StopIteration");
goog.require("goog.userAgent");
goog.dom.ControlRange = function() {
};
goog.inherits(goog.dom.ControlRange, goog.dom.AbstractMultiRange);
goog.dom.ControlRange.createFromBrowserRange = function(controlRange) {
  var range = new goog.dom.ControlRange;
  range.range_ = controlRange;
  return range
};
goog.dom.ControlRange.createFromElements = function(var_args) {
  var range = goog.dom.getOwnerDocument(arguments[0]).body.createControlRange();
  for(var i = 0, len = arguments.length;i < len;i++) {
    range.addElement(arguments[i])
  }
  return goog.dom.ControlRange.createFromBrowserRange(range)
};
goog.dom.ControlRange.prototype.range_ = null;
goog.dom.ControlRange.prototype.elements_ = null;
goog.dom.ControlRange.prototype.sortedElements_ = null;
goog.dom.ControlRange.prototype.clearCachedValues_ = function() {
  this.elements_ = null;
  this.sortedElements_ = null
};
goog.dom.ControlRange.prototype.clone = function() {
  return goog.dom.ControlRange.createFromElements.apply(this, this.getElements())
};
goog.dom.ControlRange.prototype.getType = function() {
  return goog.dom.RangeType.CONTROL
};
goog.dom.ControlRange.prototype.getBrowserRangeObject = function() {
  return this.range_ || document.body.createControlRange()
};
goog.dom.ControlRange.prototype.setBrowserRangeObject = function(nativeRange) {
  if(!goog.dom.AbstractRange.isNativeControlRange(nativeRange)) {
    return false
  }
  this.range_ = nativeRange;
  return true
};
goog.dom.ControlRange.prototype.getTextRangeCount = function() {
  return this.range_ ? this.range_.length : 0
};
goog.dom.ControlRange.prototype.getTextRange = function(i) {
  return goog.dom.TextRange.createFromNodeContents(this.range_.item(i))
};
goog.dom.ControlRange.prototype.getContainer = function() {
  return goog.dom.findCommonAncestor.apply(null, this.getElements())
};
goog.dom.ControlRange.prototype.getStartNode = function() {
  return this.getSortedElements()[0]
};
goog.dom.ControlRange.prototype.getStartOffset = function() {
  return 0
};
goog.dom.ControlRange.prototype.getEndNode = function() {
  var sorted = this.getSortedElements();
  var startsLast = goog.array.peek(sorted);
  return goog.array.find(sorted, function(el) {
    return goog.dom.contains(el, startsLast)
  })
};
goog.dom.ControlRange.prototype.getEndOffset = function() {
  return this.getEndNode().childNodes.length
};
goog.dom.ControlRange.prototype.getElements = function() {
  if(!this.elements_) {
    this.elements_ = [];
    if(this.range_) {
      for(var i = 0;i < this.range_.length;i++) {
        this.elements_.push(this.range_.item(i))
      }
    }
  }
  return this.elements_
};
goog.dom.ControlRange.prototype.getSortedElements = function() {
  if(!this.sortedElements_) {
    this.sortedElements_ = this.getElements().concat();
    this.sortedElements_.sort(function(a, b) {
      return a.sourceIndex - b.sourceIndex
    })
  }
  return this.sortedElements_
};
goog.dom.ControlRange.prototype.isRangeInDocument = function() {
  var returnValue = false;
  try {
    returnValue = goog.array.every(this.getElements(), function(element) {
      return goog.userAgent.IE ? element.parentNode : goog.dom.contains(element.ownerDocument.body, element)
    })
  }catch(e) {
  }
  return returnValue
};
goog.dom.ControlRange.prototype.isCollapsed = function() {
  return!this.range_ || !this.range_.length
};
goog.dom.ControlRange.prototype.getText = function() {
  return""
};
goog.dom.ControlRange.prototype.getHtmlFragment = function() {
  return goog.array.map(this.getSortedElements(), goog.dom.getOuterHtml).join("")
};
goog.dom.ControlRange.prototype.getValidHtml = function() {
  return this.getHtmlFragment()
};
goog.dom.ControlRange.prototype.getPastableHtml = goog.dom.ControlRange.prototype.getValidHtml;
goog.dom.ControlRange.prototype.__iterator__ = function(opt_keys) {
  return new goog.dom.ControlRangeIterator(this)
};
goog.dom.ControlRange.prototype.select = function() {
  if(this.range_) {
    this.range_.select()
  }
};
goog.dom.ControlRange.prototype.removeContents = function() {
  if(this.range_) {
    var nodes = [];
    for(var i = 0, len = this.range_.length;i < len;i++) {
      nodes.push(this.range_.item(i))
    }
    goog.array.forEach(nodes, goog.dom.removeNode);
    this.collapse(false)
  }
};
goog.dom.ControlRange.prototype.replaceContentsWithNode = function(node) {
  var result = this.insertNode(node, true);
  if(!this.isCollapsed()) {
    this.removeContents()
  }
  return result
};
goog.dom.ControlRange.prototype.saveUsingDom = function() {
  return new goog.dom.DomSavedControlRange_(this)
};
goog.dom.ControlRange.prototype.collapse = function(toAnchor) {
  this.range_ = null;
  this.clearCachedValues_()
};
goog.dom.DomSavedControlRange_ = function(range) {
  this.elements_ = range.getElements()
};
goog.inherits(goog.dom.DomSavedControlRange_, goog.dom.SavedRange);
goog.dom.DomSavedControlRange_.prototype.restoreInternal = function() {
  var doc = this.elements_.length ? goog.dom.getOwnerDocument(this.elements_[0]) : document;
  var controlRange = doc.body.createControlRange();
  for(var i = 0, len = this.elements_.length;i < len;i++) {
    controlRange.addElement(this.elements_[i])
  }
  return goog.dom.ControlRange.createFromBrowserRange(controlRange)
};
goog.dom.DomSavedControlRange_.prototype.disposeInternal = function() {
  goog.dom.DomSavedControlRange_.superClass_.disposeInternal.call(this);
  delete this.elements_
};
goog.dom.ControlRangeIterator = function(range) {
  if(range) {
    this.elements_ = range.getSortedElements();
    this.startNode_ = this.elements_.shift();
    this.endNode_ = goog.array.peek(this.elements_) || this.startNode_
  }
  goog.dom.RangeIterator.call(this, this.startNode_, false)
};
goog.inherits(goog.dom.ControlRangeIterator, goog.dom.RangeIterator);
goog.dom.ControlRangeIterator.prototype.startNode_ = null;
goog.dom.ControlRangeIterator.prototype.endNode_ = null;
goog.dom.ControlRangeIterator.prototype.elements_ = null;
goog.dom.ControlRangeIterator.prototype.getStartTextOffset = function() {
  return 0
};
goog.dom.ControlRangeIterator.prototype.getEndTextOffset = function() {
  return 0
};
goog.dom.ControlRangeIterator.prototype.getStartNode = function() {
  return this.startNode_
};
goog.dom.ControlRangeIterator.prototype.getEndNode = function() {
  return this.endNode_
};
goog.dom.ControlRangeIterator.prototype.isLast = function() {
  return!this.depth && !this.elements_.length
};
goog.dom.ControlRangeIterator.prototype.next = function() {
  if(this.isLast()) {
    throw goog.iter.StopIteration;
  }else {
    if(!this.depth) {
      var el = this.elements_.shift();
      this.setPosition(el, goog.dom.TagWalkType.START_TAG, goog.dom.TagWalkType.START_TAG);
      return el
    }
  }
  return goog.dom.ControlRangeIterator.superClass_.next.call(this)
};
goog.dom.ControlRangeIterator.prototype.copyFrom = function(other) {
  this.elements_ = other.elements_;
  this.startNode_ = other.startNode_;
  this.endNode_ = other.endNode_;
  goog.dom.ControlRangeIterator.superClass_.copyFrom.call(this, other)
};
goog.dom.ControlRangeIterator.prototype.clone = function() {
  var copy = new goog.dom.ControlRangeIterator(null);
  copy.copyFrom(this);
  return copy
};
goog.provide("goog.dom.MultiRange");
goog.provide("goog.dom.MultiRangeIterator");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.dom.AbstractMultiRange");
goog.require("goog.dom.AbstractRange");
goog.require("goog.dom.RangeIterator");
goog.require("goog.dom.RangeType");
goog.require("goog.dom.SavedRange");
goog.require("goog.dom.TextRange");
goog.require("goog.iter.StopIteration");
goog.dom.MultiRange = function() {
  this.browserRanges_ = [];
  this.ranges_ = [];
  this.sortedRanges_ = null;
  this.container_ = null
};
goog.inherits(goog.dom.MultiRange, goog.dom.AbstractMultiRange);
goog.dom.MultiRange.createFromBrowserSelection = function(selection) {
  var range = new goog.dom.MultiRange;
  for(var i = 0, len = selection.rangeCount;i < len;i++) {
    range.browserRanges_.push(selection.getRangeAt(i))
  }
  return range
};
goog.dom.MultiRange.createFromBrowserRanges = function(browserRanges) {
  var range = new goog.dom.MultiRange;
  range.browserRanges_ = goog.array.clone(browserRanges);
  return range
};
goog.dom.MultiRange.createFromTextRanges = function(textRanges) {
  var range = new goog.dom.MultiRange;
  range.ranges_ = textRanges;
  range.browserRanges_ = goog.array.map(textRanges, function(range) {
    return range.getBrowserRangeObject()
  });
  return range
};
goog.dom.MultiRange.prototype.logger_ = goog.debug.Logger.getLogger("goog.dom.MultiRange");
goog.dom.MultiRange.prototype.clearCachedValues_ = function() {
  this.ranges_ = [];
  this.sortedRanges_ = null;
  this.container_ = null
};
goog.dom.MultiRange.prototype.clone = function() {
  return goog.dom.MultiRange.createFromBrowserRanges(this.browserRanges_)
};
goog.dom.MultiRange.prototype.getType = function() {
  return goog.dom.RangeType.MULTI
};
goog.dom.MultiRange.prototype.getBrowserRangeObject = function() {
  if(this.browserRanges_.length > 1) {
    this.logger_.warning("getBrowserRangeObject called on MultiRange with more than 1 range")
  }
  return this.browserRanges_[0]
};
goog.dom.MultiRange.prototype.setBrowserRangeObject = function(nativeRange) {
  return false
};
goog.dom.MultiRange.prototype.getTextRangeCount = function() {
  return this.browserRanges_.length
};
goog.dom.MultiRange.prototype.getTextRange = function(i) {
  if(!this.ranges_[i]) {
    this.ranges_[i] = goog.dom.TextRange.createFromBrowserRange(this.browserRanges_[i])
  }
  return this.ranges_[i]
};
goog.dom.MultiRange.prototype.getContainer = function() {
  if(!this.container_) {
    var nodes = [];
    for(var i = 0, len = this.getTextRangeCount();i < len;i++) {
      nodes.push(this.getTextRange(i).getContainer())
    }
    this.container_ = goog.dom.findCommonAncestor.apply(null, nodes)
  }
  return this.container_
};
goog.dom.MultiRange.prototype.getSortedRanges = function() {
  if(!this.sortedRanges_) {
    this.sortedRanges_ = this.getTextRanges();
    this.sortedRanges_.sort(function(a, b) {
      var aStartNode = a.getStartNode();
      var aStartOffset = a.getStartOffset();
      var bStartNode = b.getStartNode();
      var bStartOffset = b.getStartOffset();
      if(aStartNode == bStartNode && aStartOffset == bStartOffset) {
        return 0
      }
      return goog.dom.Range.isReversed(aStartNode, aStartOffset, bStartNode, bStartOffset) ? 1 : -1
    })
  }
  return this.sortedRanges_
};
goog.dom.MultiRange.prototype.getStartNode = function() {
  return this.getSortedRanges()[0].getStartNode()
};
goog.dom.MultiRange.prototype.getStartOffset = function() {
  return this.getSortedRanges()[0].getStartOffset()
};
goog.dom.MultiRange.prototype.getEndNode = function() {
  return goog.array.peek(this.getSortedRanges()).getEndNode()
};
goog.dom.MultiRange.prototype.getEndOffset = function() {
  return goog.array.peek(this.getSortedRanges()).getEndOffset()
};
goog.dom.MultiRange.prototype.isRangeInDocument = function() {
  return goog.array.every(this.getTextRanges(), function(range) {
    return range.isRangeInDocument()
  })
};
goog.dom.MultiRange.prototype.isCollapsed = function() {
  return this.browserRanges_.length == 0 || this.browserRanges_.length == 1 && this.getTextRange(0).isCollapsed()
};
goog.dom.MultiRange.prototype.getText = function() {
  return goog.array.map(this.getTextRanges(), function(range) {
    return range.getText()
  }).join("")
};
goog.dom.MultiRange.prototype.getHtmlFragment = function() {
  return this.getValidHtml()
};
goog.dom.MultiRange.prototype.getValidHtml = function() {
  return goog.array.map(this.getTextRanges(), function(range) {
    return range.getValidHtml()
  }).join("")
};
goog.dom.MultiRange.prototype.getPastableHtml = function() {
  return this.getValidHtml()
};
goog.dom.MultiRange.prototype.__iterator__ = function(opt_keys) {
  return new goog.dom.MultiRangeIterator(this)
};
goog.dom.MultiRange.prototype.select = function() {
  var selection = goog.dom.AbstractRange.getBrowserSelectionForWindow(this.getWindow());
  selection.removeAllRanges();
  for(var i = 0, len = this.getTextRangeCount();i < len;i++) {
    selection.addRange(this.getTextRange(i).getBrowserRangeObject())
  }
};
goog.dom.MultiRange.prototype.removeContents = function() {
  goog.array.forEach(this.getTextRanges(), function(range) {
    range.removeContents()
  })
};
goog.dom.MultiRange.prototype.saveUsingDom = function() {
  return new goog.dom.DomSavedMultiRange_(this)
};
goog.dom.MultiRange.prototype.collapse = function(toAnchor) {
  if(!this.isCollapsed()) {
    var range = toAnchor ? this.getTextRange(0) : this.getTextRange(this.getTextRangeCount() - 1);
    this.clearCachedValues_();
    range.collapse(toAnchor);
    this.ranges_ = [range];
    this.sortedRanges_ = [range];
    this.browserRanges_ = [range.getBrowserRangeObject()]
  }
};
goog.dom.DomSavedMultiRange_ = function(range) {
  this.savedRanges_ = goog.array.map(range.getTextRanges(), function(range) {
    return range.saveUsingDom()
  })
};
goog.inherits(goog.dom.DomSavedMultiRange_, goog.dom.SavedRange);
goog.dom.DomSavedMultiRange_.prototype.restoreInternal = function() {
  var ranges = goog.array.map(this.savedRanges_, function(savedRange) {
    return savedRange.restore()
  });
  return goog.dom.MultiRange.createFromTextRanges(ranges)
};
goog.dom.DomSavedMultiRange_.prototype.disposeInternal = function() {
  goog.dom.DomSavedMultiRange_.superClass_.disposeInternal.call(this);
  goog.array.forEach(this.savedRanges_, function(savedRange) {
    savedRange.dispose()
  });
  delete this.savedRanges_
};
goog.dom.MultiRangeIterator = function(range) {
  if(range) {
    this.iterators_ = goog.array.map(range.getSortedRanges(), function(r) {
      return goog.iter.toIterator(r)
    })
  }
  goog.dom.RangeIterator.call(this, range ? this.getStartNode() : null, false)
};
goog.inherits(goog.dom.MultiRangeIterator, goog.dom.RangeIterator);
goog.dom.MultiRangeIterator.prototype.iterators_ = null;
goog.dom.MultiRangeIterator.prototype.currentIdx_ = 0;
goog.dom.MultiRangeIterator.prototype.getStartTextOffset = function() {
  return this.iterators_[this.currentIdx_].getStartTextOffset()
};
goog.dom.MultiRangeIterator.prototype.getEndTextOffset = function() {
  return this.iterators_[this.currentIdx_].getEndTextOffset()
};
goog.dom.MultiRangeIterator.prototype.getStartNode = function() {
  return this.iterators_[0].getStartNode()
};
goog.dom.MultiRangeIterator.prototype.getEndNode = function() {
  return goog.array.peek(this.iterators_).getEndNode()
};
goog.dom.MultiRangeIterator.prototype.isLast = function() {
  return this.iterators_[this.currentIdx_].isLast()
};
goog.dom.MultiRangeIterator.prototype.next = function() {
  try {
    var it = this.iterators_[this.currentIdx_];
    var next = it.next();
    this.setPosition(it.node, it.tagType, it.depth);
    return next
  }catch(ex) {
    if(ex !== goog.iter.StopIteration || this.iterators_.length - 1 == this.currentIdx_) {
      throw ex;
    }else {
      this.currentIdx_++;
      return this.next()
    }
  }
};
goog.dom.MultiRangeIterator.prototype.copyFrom = function(other) {
  this.iterators_ = goog.array.clone(other.iterators_);
  goog.dom.MultiRangeIterator.superClass_.copyFrom.call(this, other)
};
goog.dom.MultiRangeIterator.prototype.clone = function() {
  var copy = new goog.dom.MultiRangeIterator(null);
  copy.copyFrom(this);
  return copy
};
goog.provide("goog.dom.Range");
goog.require("goog.dom");
goog.require("goog.dom.AbstractRange");
goog.require("goog.dom.ControlRange");
goog.require("goog.dom.MultiRange");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TextRange");
goog.require("goog.userAgent");
goog.dom.Range.createFromWindow = function(opt_win) {
  var sel = goog.dom.AbstractRange.getBrowserSelectionForWindow(opt_win || window);
  return sel && goog.dom.Range.createFromBrowserSelection(sel)
};
goog.dom.Range.createFromBrowserSelection = function(selection) {
  var range;
  var isReversed = false;
  if(selection.createRange) {
    try {
      range = selection.createRange()
    }catch(e) {
      return null
    }
  }else {
    if(selection.rangeCount) {
      if(selection.rangeCount > 1) {
        return goog.dom.MultiRange.createFromBrowserSelection(selection)
      }else {
        range = selection.getRangeAt(0);
        isReversed = goog.dom.Range.isReversed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset)
      }
    }else {
      return null
    }
  }
  return goog.dom.Range.createFromBrowserRange(range, isReversed)
};
goog.dom.Range.createFromBrowserRange = function(range, opt_isReversed) {
  return goog.dom.AbstractRange.isNativeControlRange(range) ? goog.dom.ControlRange.createFromBrowserRange(range) : goog.dom.TextRange.createFromBrowserRange(range, opt_isReversed)
};
goog.dom.Range.createFromNodeContents = function(node, opt_isReversed) {
  return goog.dom.TextRange.createFromNodeContents(node, opt_isReversed)
};
goog.dom.Range.createCaret = function(node, offset) {
  return goog.dom.TextRange.createFromNodes(node, offset, node, offset)
};
goog.dom.Range.createFromNodes = function(startNode, startOffset, endNode, endOffset) {
  return goog.dom.TextRange.createFromNodes(startNode, startOffset, endNode, endOffset)
};
goog.dom.Range.clearSelection = function(opt_win) {
  var sel = goog.dom.AbstractRange.getBrowserSelectionForWindow(opt_win || window);
  if(!sel) {
    return
  }
  if(sel.empty) {
    try {
      sel.empty()
    }catch(e) {
    }
  }else {
    try {
      sel.removeAllRanges()
    }catch(e) {
    }
  }
};
goog.dom.Range.hasSelection = function(opt_win) {
  var sel = goog.dom.AbstractRange.getBrowserSelectionForWindow(opt_win || window);
  return!!sel && (goog.userAgent.IE ? sel.type != "None" : !!sel.rangeCount)
};
goog.dom.Range.isReversed = function(anchorNode, anchorOffset, focusNode, focusOffset) {
  if(anchorNode == focusNode) {
    return focusOffset < anchorOffset
  }
  var child;
  if(anchorNode.nodeType == goog.dom.NodeType.ELEMENT && anchorOffset) {
    child = anchorNode.childNodes[anchorOffset];
    if(child) {
      anchorNode = child;
      anchorOffset = 0
    }else {
      if(goog.dom.contains(anchorNode, focusNode)) {
        return true
      }
    }
  }
  if(focusNode.nodeType == goog.dom.NodeType.ELEMENT && focusOffset) {
    child = focusNode.childNodes[focusOffset];
    if(child) {
      focusNode = child;
      focusOffset = 0
    }else {
      if(goog.dom.contains(focusNode, anchorNode)) {
        return false
      }
    }
  }
  return(goog.dom.compareNodeOrder(anchorNode, focusNode) || anchorOffset - focusOffset) > 0
};
goog.provide("onedit.buffer");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
goog.require("onedit.core");
onedit.buffer.key_handler = function key_handler(editor, e) {
  var mode__7156 = onedit.core.action.call(null, editormode, editor, e);
  console.log(mode__7156);
  return editormode = mode__7156
};
onedit.buffer.init = function init(editor) {
  return goog.events.listen(new goog.events.KeyHandler(editorbuffer), goog.events.KeyHandler.EventType.KEY, cljs.core.partial.call(null, onedit.buffer.key_handler, editor))
};
goog.provide("goog.editor.focus");
goog.require("goog.dom.selection");
goog.editor.focus.focusInputField = function(inputElem) {
  inputElem.focus();
  goog.dom.selection.setCursorPosition(inputElem, inputElem.value.length)
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.ui.ControlContent");
goog.ui.ControlContent;
goog.provide("goog.dom.a11y");
goog.provide("goog.dom.a11y.Announcer");
goog.provide("goog.dom.a11y.LivePriority");
goog.provide("goog.dom.a11y.Role");
goog.provide("goog.dom.a11y.State");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.object");
goog.dom.a11y.State = {ACTIVEDESCENDANT:"activedescendant", ATOMIC:"atomic", AUTOCOMPLETE:"autocomplete", BUSY:"busy", CHECKED:"checked", CONTROLS:"controls", DESCRIBEDBY:"describedby", DISABLED:"disabled", DROPEFFECT:"dropeffect", EXPANDED:"expanded", FLOWTO:"flowto", GRABBED:"grabbed", HASPOPUP:"haspopup", HIDDEN:"hidden", INVALID:"invalid", LABEL:"label", LABELLEDBY:"labelledby", LEVEL:"level", LIVE:"live", MULTILINE:"multiline", MULTISELECTABLE:"multiselectable", ORIENTATION:"orientation", OWNS:"owns", 
POSINSET:"posinset", PRESSED:"pressed", READONLY:"readonly", RELEVANT:"relevant", REQUIRED:"required", SELECTED:"selected", SETSIZE:"setsize", SORT:"sort", VALUEMAX:"valuemax", VALUEMIN:"valuemin", VALUENOW:"valuenow", VALUETEXT:"valuetext"};
goog.dom.a11y.Role = {ALERT:"alert", ALERTDIALOG:"alertdialog", APPLICATION:"application", ARTICLE:"article", BANNER:"banner", BUTTON:"button", CHECKBOX:"checkbox", COLUMNHEADER:"columnheader", COMBOBOX:"combobox", COMPLEMENTARY:"complementary", DIALOG:"dialog", DIRECTORY:"directory", DOCUMENT:"document", FORM:"form", GRID:"grid", GRIDCELL:"gridcell", GROUP:"group", HEADING:"heading", IMG:"img", LINK:"link", LIST:"list", LISTBOX:"listbox", LISTITEM:"listitem", LOG:"log", MAIN:"main", MARQUEE:"marquee", 
MATH:"math", MENU:"menu", MENUBAR:"menubar", MENU_ITEM:"menuitem", MENU_ITEM_CHECKBOX:"menuitemcheckbox", MENU_ITEM_RADIO:"menuitemradio", NAVIGATION:"navigation", NOTE:"note", OPTION:"option", PRESENTATION:"presentation", PROGRESSBAR:"progressbar", RADIO:"radio", RADIOGROUP:"radiogroup", REGION:"region", ROW:"row", ROWGROUP:"rowgroup", ROWHEADER:"rowheader", SCROLLBAR:"scrollbar", SEARCH:"search", SEPARATOR:"separator", SLIDER:"slider", SPINBUTTON:"spinbutton", STATUS:"status", TAB:"tab", TAB_LIST:"tablist", 
TAB_PANEL:"tabpanel", TEXTBOX:"textbox", TIMER:"timer", TOOLBAR:"toolbar", TOOLTIP:"tooltip", TREE:"tree", TREEGRID:"treegrid", TREEITEM:"treeitem"};
goog.dom.a11y.LivePriority = {OFF:"off", POLITE:"polite", ASSERTIVE:"assertive"};
goog.dom.a11y.setRole = function(element, roleName) {
  element.setAttribute("role", roleName);
  element.roleName = roleName
};
goog.dom.a11y.getRole = function(element) {
  return element.roleName || ""
};
goog.dom.a11y.setState = function(element, state, value) {
  element.setAttribute("aria-" + state, value)
};
goog.dom.a11y.getState = function(element, stateName) {
  var attrb = element.getAttribute("aria-" + stateName);
  if(attrb === true || attrb === false) {
    return attrb ? "true" : "false"
  }else {
    if(!attrb) {
      return""
    }else {
      return String(attrb)
    }
  }
};
goog.dom.a11y.getActiveDescendant = function(element) {
  var id = goog.dom.a11y.getState(element, goog.dom.a11y.State.ACTIVEDESCENDANT);
  return goog.dom.getOwnerDocument(element).getElementById(id)
};
goog.dom.a11y.setActiveDescendant = function(element, activeElement) {
  goog.dom.a11y.setState(element, goog.dom.a11y.State.ACTIVEDESCENDANT, activeElement ? activeElement.id : "")
};
goog.dom.a11y.Announcer = function(domHelper) {
  goog.base(this);
  this.domHelper_ = domHelper;
  this.liveRegions_ = {}
};
goog.inherits(goog.dom.a11y.Announcer, goog.Disposable);
goog.dom.a11y.Announcer.prototype.disposeInternal = function() {
  goog.object.forEach(this.liveRegions_, this.domHelper_.removeNode, this.domHelper_);
  this.liveRegions_ = null;
  this.domHelper_ = null;
  goog.base(this, "disposeInternal")
};
goog.dom.a11y.Announcer.prototype.say = function(message, opt_priority) {
  goog.dom.setTextContent(this.getLiveRegion_(opt_priority || goog.dom.a11y.LivePriority.POLITE), message)
};
goog.dom.a11y.Announcer.prototype.getLiveRegion_ = function(priority) {
  if(this.liveRegions_[priority]) {
    return this.liveRegions_[priority]
  }
  var liveRegion;
  liveRegion = this.domHelper_.createElement("div");
  liveRegion.style.position = "absolute";
  liveRegion.style.top = "-1000px";
  goog.dom.a11y.setState(liveRegion, "live", priority);
  goog.dom.a11y.setState(liveRegion, "atomic", "true");
  this.domHelper_.getDocument().body.appendChild(liveRegion);
  this.liveRegions_[priority] = liveRegion;
  return liveRegion
};
goog.provide("goog.ui.ControlRenderer");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.a11y");
goog.require("goog.dom.a11y.State");
goog.require("goog.dom.classes");
goog.require("goog.object");
goog.require("goog.style");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.ControlContent");
goog.require("goog.userAgent");
goog.ui.ControlRenderer = function() {
};
goog.addSingletonGetter(goog.ui.ControlRenderer);
goog.ui.ControlRenderer.getCustomRenderer = function(ctor, cssClassName) {
  var renderer = new ctor;
  renderer.getCssClass = function() {
    return cssClassName
  };
  return renderer
};
goog.ui.ControlRenderer.CSS_CLASS = goog.getCssName("goog-control");
goog.ui.ControlRenderer.IE6_CLASS_COMBINATIONS = [];
goog.ui.ControlRenderer.ARIA_STATE_MAP_;
goog.ui.ControlRenderer.prototype.getAriaRole = function() {
  return undefined
};
goog.ui.ControlRenderer.prototype.createDom = function(control) {
  var element = control.getDomHelper().createDom("div", this.getClassNames(control).join(" "), control.getContent());
  this.setAriaStates(control, element);
  return element
};
goog.ui.ControlRenderer.prototype.getContentElement = function(element) {
  return element
};
goog.ui.ControlRenderer.prototype.enableClassName = function(control, className, enable) {
  var element = control.getElement ? control.getElement() : control;
  if(element) {
    if(goog.userAgent.IE && !goog.userAgent.isVersion("7")) {
      var combinedClasses = this.getAppliedCombinedClassNames_(goog.dom.classes.get(element), className);
      combinedClasses.push(className);
      var f = enable ? goog.dom.classes.add : goog.dom.classes.remove;
      goog.partial(f, element).apply(null, combinedClasses)
    }else {
      goog.dom.classes.enable(element, className, enable)
    }
  }
};
goog.ui.ControlRenderer.prototype.enableExtraClassName = function(control, className, enable) {
  this.enableClassName(control, className, enable)
};
goog.ui.ControlRenderer.prototype.canDecorate = function(element) {
  return true
};
goog.ui.ControlRenderer.prototype.decorate = function(control, element) {
  if(element.id) {
    control.setId(element.id)
  }
  var contentElem = this.getContentElement(element);
  if(contentElem && contentElem.firstChild) {
    control.setContentInternal(contentElem.firstChild.nextSibling ? goog.array.clone(contentElem.childNodes) : contentElem.firstChild)
  }else {
    control.setContentInternal(null)
  }
  var state = 0;
  var rendererClassName = this.getCssClass();
  var structuralClassName = this.getStructuralCssClass();
  var hasRendererClassName = false;
  var hasStructuralClassName = false;
  var hasCombinedClassName = false;
  var classNames = goog.dom.classes.get(element);
  goog.array.forEach(classNames, function(className) {
    if(!hasRendererClassName && className == rendererClassName) {
      hasRendererClassName = true;
      if(structuralClassName == rendererClassName) {
        hasStructuralClassName = true
      }
    }else {
      if(!hasStructuralClassName && className == structuralClassName) {
        hasStructuralClassName = true
      }else {
        state |= this.getStateFromClass(className)
      }
    }
  }, this);
  control.setStateInternal(state);
  if(!hasRendererClassName) {
    classNames.push(rendererClassName);
    if(structuralClassName == rendererClassName) {
      hasStructuralClassName = true
    }
  }
  if(!hasStructuralClassName) {
    classNames.push(structuralClassName)
  }
  var extraClassNames = control.getExtraClassNames();
  if(extraClassNames) {
    classNames.push.apply(classNames, extraClassNames)
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion("7")) {
    var combinedClasses = this.getAppliedCombinedClassNames_(classNames);
    if(combinedClasses.length > 0) {
      classNames.push.apply(classNames, combinedClasses);
      hasCombinedClassName = true
    }
  }
  if(!hasRendererClassName || !hasStructuralClassName || extraClassNames || hasCombinedClassName) {
    goog.dom.classes.set(element, classNames.join(" "))
  }
  this.setAriaStates(control, element);
  return element
};
goog.ui.ControlRenderer.prototype.initializeDom = function(control) {
  if(control.isRightToLeft()) {
    this.setRightToLeft(control.getElement(), true)
  }
  if(control.isEnabled()) {
    this.setFocusable(control, control.isVisible())
  }
};
goog.ui.ControlRenderer.prototype.setAriaRole = function(element, opt_preferredRole) {
  var ariaRole = opt_preferredRole || this.getAriaRole();
  if(ariaRole) {
    goog.dom.a11y.setRole(element, ariaRole)
  }
};
goog.ui.ControlRenderer.prototype.setAriaStates = function(control, element) {
  goog.asserts.assert(control);
  goog.asserts.assert(element);
  if(!control.isEnabled()) {
    this.updateAriaState(element, goog.ui.Component.State.DISABLED, true)
  }
  if(control.isSelected()) {
    this.updateAriaState(element, goog.ui.Component.State.SELECTED, true)
  }
  if(control.isSupportedState(goog.ui.Component.State.CHECKED)) {
    this.updateAriaState(element, goog.ui.Component.State.CHECKED, control.isChecked())
  }
  if(control.isSupportedState(goog.ui.Component.State.OPENED)) {
    this.updateAriaState(element, goog.ui.Component.State.OPENED, control.isOpen())
  }
};
goog.ui.ControlRenderer.prototype.setAllowTextSelection = function(element, allow) {
  goog.style.setUnselectable(element, !allow, !goog.userAgent.IE && !goog.userAgent.OPERA)
};
goog.ui.ControlRenderer.prototype.setRightToLeft = function(element, rightToLeft) {
  this.enableClassName(element, goog.getCssName(this.getStructuralCssClass(), "rtl"), rightToLeft)
};
goog.ui.ControlRenderer.prototype.isFocusable = function(control) {
  var keyTarget;
  if(control.isSupportedState(goog.ui.Component.State.FOCUSED) && (keyTarget = control.getKeyEventTarget())) {
    return goog.dom.isFocusableTabIndex(keyTarget)
  }
  return false
};
goog.ui.ControlRenderer.prototype.setFocusable = function(control, focusable) {
  var keyTarget;
  if(control.isSupportedState(goog.ui.Component.State.FOCUSED) && (keyTarget = control.getKeyEventTarget())) {
    if(!focusable && control.isFocused()) {
      try {
        keyTarget.blur()
      }catch(e) {
      }
      if(control.isFocused()) {
        control.handleBlur(null)
      }
    }
    if(goog.dom.isFocusableTabIndex(keyTarget) != focusable) {
      goog.dom.setFocusableTabIndex(keyTarget, focusable)
    }
  }
};
goog.ui.ControlRenderer.prototype.setVisible = function(element, visible) {
  goog.style.showElement(element, visible)
};
goog.ui.ControlRenderer.prototype.setState = function(control, state, enable) {
  var element = control.getElement();
  if(element) {
    var className = this.getClassForState(state);
    if(className) {
      this.enableClassName(control, className, enable)
    }
    this.updateAriaState(element, state, enable)
  }
};
goog.ui.ControlRenderer.prototype.updateAriaState = function(element, state, enable) {
  if(!goog.ui.ControlRenderer.ARIA_STATE_MAP_) {
    goog.ui.ControlRenderer.ARIA_STATE_MAP_ = goog.object.create(goog.ui.Component.State.DISABLED, goog.dom.a11y.State.DISABLED, goog.ui.Component.State.SELECTED, goog.dom.a11y.State.SELECTED, goog.ui.Component.State.CHECKED, goog.dom.a11y.State.CHECKED, goog.ui.Component.State.OPENED, goog.dom.a11y.State.EXPANDED)
  }
  var ariaState = goog.ui.ControlRenderer.ARIA_STATE_MAP_[state];
  if(ariaState) {
    goog.dom.a11y.setState(element, ariaState, enable)
  }
};
goog.ui.ControlRenderer.prototype.setContent = function(element, content) {
  var contentElem = this.getContentElement(element);
  if(contentElem) {
    goog.dom.removeChildren(contentElem);
    if(content) {
      if(goog.isString(content)) {
        goog.dom.setTextContent(contentElem, content)
      }else {
        var childHandler = function(child) {
          if(child) {
            var doc = goog.dom.getOwnerDocument(contentElem);
            contentElem.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
          }
        };
        if(goog.isArray(content)) {
          goog.array.forEach(content, childHandler)
        }else {
          if(goog.isArrayLike(content) && !("nodeType" in content)) {
            goog.array.forEach(goog.array.clone(content), childHandler)
          }else {
            childHandler(content)
          }
        }
      }
    }
  }
};
goog.ui.ControlRenderer.prototype.getKeyEventTarget = function(control) {
  return control.getElement()
};
goog.ui.ControlRenderer.prototype.getCssClass = function() {
  return goog.ui.ControlRenderer.CSS_CLASS
};
goog.ui.ControlRenderer.prototype.getIe6ClassCombinations = function() {
  return[]
};
goog.ui.ControlRenderer.prototype.getStructuralCssClass = function() {
  return this.getCssClass()
};
goog.ui.ControlRenderer.prototype.getClassNames = function(control) {
  var cssClass = this.getCssClass();
  var classNames = [cssClass];
  var structuralCssClass = this.getStructuralCssClass();
  if(structuralCssClass != cssClass) {
    classNames.push(structuralCssClass)
  }
  var classNamesForState = this.getClassNamesForState(control.getState());
  classNames.push.apply(classNames, classNamesForState);
  var extraClassNames = control.getExtraClassNames();
  if(extraClassNames) {
    classNames.push.apply(classNames, extraClassNames)
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion("7")) {
    classNames.push.apply(classNames, this.getAppliedCombinedClassNames_(classNames))
  }
  return classNames
};
goog.ui.ControlRenderer.prototype.getAppliedCombinedClassNames_ = function(classes, opt_includedClass) {
  var toAdd = [];
  if(opt_includedClass) {
    classes = classes.concat([opt_includedClass])
  }
  goog.array.forEach(this.getIe6ClassCombinations(), function(combo) {
    if(goog.array.every(combo, goog.partial(goog.array.contains, classes)) && (!opt_includedClass || goog.array.contains(combo, opt_includedClass))) {
      toAdd.push(combo.join("_"))
    }
  });
  return toAdd
};
goog.ui.ControlRenderer.prototype.getClassNamesForState = function(state) {
  var classNames = [];
  while(state) {
    var mask = state & -state;
    classNames.push(this.getClassForState(mask));
    state &= ~mask
  }
  return classNames
};
goog.ui.ControlRenderer.prototype.getClassForState = function(state) {
  if(!this.classByState_) {
    this.createClassByStateMap_()
  }
  return this.classByState_[state]
};
goog.ui.ControlRenderer.prototype.getStateFromClass = function(className) {
  if(!this.stateByClass_) {
    this.createStateByClassMap_()
  }
  var state = parseInt(this.stateByClass_[className], 10);
  return isNaN(state) ? 0 : state
};
goog.ui.ControlRenderer.prototype.createClassByStateMap_ = function() {
  var baseClass = this.getStructuralCssClass();
  this.classByState_ = goog.object.create(goog.ui.Component.State.DISABLED, goog.getCssName(baseClass, "disabled"), goog.ui.Component.State.HOVER, goog.getCssName(baseClass, "hover"), goog.ui.Component.State.ACTIVE, goog.getCssName(baseClass, "active"), goog.ui.Component.State.SELECTED, goog.getCssName(baseClass, "selected"), goog.ui.Component.State.CHECKED, goog.getCssName(baseClass, "checked"), goog.ui.Component.State.FOCUSED, goog.getCssName(baseClass, "focused"), goog.ui.Component.State.OPENED, 
  goog.getCssName(baseClass, "open"))
};
goog.ui.ControlRenderer.prototype.createStateByClassMap_ = function() {
  if(!this.classByState_) {
    this.createClassByStateMap_()
  }
  this.stateByClass_ = goog.object.transpose(this.classByState_)
};
goog.provide("goog.ui.registry");
goog.require("goog.dom.classes");
goog.ui.registry.getDefaultRenderer = function(componentCtor) {
  var key;
  var rendererCtor;
  while(componentCtor) {
    key = goog.getUid(componentCtor);
    if(rendererCtor = goog.ui.registry.defaultRenderers_[key]) {
      break
    }
    componentCtor = componentCtor.superClass_ ? componentCtor.superClass_.constructor : null
  }
  if(rendererCtor) {
    return goog.isFunction(rendererCtor.getInstance) ? rendererCtor.getInstance() : new rendererCtor
  }
  return null
};
goog.ui.registry.setDefaultRenderer = function(componentCtor, rendererCtor) {
  if(!goog.isFunction(componentCtor)) {
    throw Error("Invalid component class " + componentCtor);
  }
  if(!goog.isFunction(rendererCtor)) {
    throw Error("Invalid renderer class " + rendererCtor);
  }
  var key = goog.getUid(componentCtor);
  goog.ui.registry.defaultRenderers_[key] = rendererCtor
};
goog.ui.registry.getDecoratorByClassName = function(className) {
  return className in goog.ui.registry.decoratorFunctions_ ? goog.ui.registry.decoratorFunctions_[className]() : null
};
goog.ui.registry.setDecoratorByClassName = function(className, decoratorFn) {
  if(!className) {
    throw Error("Invalid class name " + className);
  }
  if(!goog.isFunction(decoratorFn)) {
    throw Error("Invalid decorator function " + decoratorFn);
  }
  goog.ui.registry.decoratorFunctions_[className] = decoratorFn
};
goog.ui.registry.getDecorator = function(element) {
  var decorator;
  var classNames = goog.dom.classes.get(element);
  for(var i = 0, len = classNames.length;i < len;i++) {
    if(decorator = goog.ui.registry.getDecoratorByClassName(classNames[i])) {
      return decorator
    }
  }
  return null
};
goog.ui.registry.reset = function() {
  goog.ui.registry.defaultRenderers_ = {};
  goog.ui.registry.decoratorFunctions_ = {}
};
goog.ui.registry.defaultRenderers_ = {};
goog.ui.registry.decoratorFunctions_ = {};
goog.provide("goog.ui.decorate");
goog.require("goog.ui.registry");
goog.ui.decorate = function(element) {
  var decorator = goog.ui.registry.getDecorator(element);
  if(decorator) {
    decorator.decorate(element)
  }
  return decorator
};
goog.provide("goog.ui.Control");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.events.KeyHandler");
goog.require("goog.events.KeyHandler.EventType");
goog.require("goog.string");
goog.require("goog.ui.Component");
goog.require("goog.ui.Component.Error");
goog.require("goog.ui.Component.EventType");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.ControlContent");
goog.require("goog.ui.ControlRenderer");
goog.require("goog.ui.decorate");
goog.require("goog.ui.registry");
goog.require("goog.userAgent");
goog.ui.Control = function(content, opt_renderer, opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.renderer_ = opt_renderer || goog.ui.registry.getDefaultRenderer(this.constructor);
  this.setContentInternal(content)
};
goog.inherits(goog.ui.Control, goog.ui.Component);
goog.ui.Control.registerDecorator = goog.ui.registry.setDecoratorByClassName;
goog.ui.Control.getDecorator = goog.ui.registry.getDecorator;
goog.ui.Control.decorate = goog.ui.decorate;
goog.ui.Control.prototype.renderer_;
goog.ui.Control.prototype.content_ = null;
goog.ui.Control.prototype.state_ = 0;
goog.ui.Control.prototype.supportedStates_ = goog.ui.Component.State.DISABLED | goog.ui.Component.State.HOVER | goog.ui.Component.State.ACTIVE | goog.ui.Component.State.FOCUSED;
goog.ui.Control.prototype.autoStates_ = goog.ui.Component.State.ALL;
goog.ui.Control.prototype.statesWithTransitionEvents_ = 0;
goog.ui.Control.prototype.visible_ = true;
goog.ui.Control.prototype.keyHandler_;
goog.ui.Control.prototype.extraClassNames_ = null;
goog.ui.Control.prototype.handleMouseEvents_ = true;
goog.ui.Control.prototype.allowTextSelection_ = false;
goog.ui.Control.prototype.preferredAriaRole_ = null;
goog.ui.Control.prototype.isHandleMouseEvents = function() {
  return this.handleMouseEvents_
};
goog.ui.Control.prototype.setHandleMouseEvents = function(enable) {
  if(this.isInDocument() && enable != this.handleMouseEvents_) {
    this.enableMouseEventHandling_(enable)
  }
  this.handleMouseEvents_ = enable
};
goog.ui.Control.prototype.getKeyEventTarget = function() {
  return this.renderer_.getKeyEventTarget(this)
};
goog.ui.Control.prototype.getKeyHandler = function() {
  return this.keyHandler_ || (this.keyHandler_ = new goog.events.KeyHandler)
};
goog.ui.Control.prototype.getRenderer = function() {
  return this.renderer_
};
goog.ui.Control.prototype.setRenderer = function(renderer) {
  if(this.isInDocument()) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(this.getElement()) {
    this.setElementInternal(null)
  }
  this.renderer_ = renderer
};
goog.ui.Control.prototype.getExtraClassNames = function() {
  return this.extraClassNames_
};
goog.ui.Control.prototype.addClassName = function(className) {
  if(className) {
    if(this.extraClassNames_) {
      if(!goog.array.contains(this.extraClassNames_, className)) {
        this.extraClassNames_.push(className)
      }
    }else {
      this.extraClassNames_ = [className]
    }
    this.renderer_.enableExtraClassName(this, className, true)
  }
};
goog.ui.Control.prototype.removeClassName = function(className) {
  if(className && this.extraClassNames_) {
    goog.array.remove(this.extraClassNames_, className);
    if(this.extraClassNames_.length == 0) {
      this.extraClassNames_ = null
    }
    this.renderer_.enableExtraClassName(this, className, false)
  }
};
goog.ui.Control.prototype.enableClassName = function(className, enable) {
  if(enable) {
    this.addClassName(className)
  }else {
    this.removeClassName(className)
  }
};
goog.ui.Control.prototype.createDom = function() {
  var element = this.renderer_.createDom(this);
  this.setElementInternal(element);
  this.renderer_.setAriaRole(element, this.getPreferredAriaRole());
  if(!this.isAllowTextSelection()) {
    this.renderer_.setAllowTextSelection(element, false)
  }
  if(!this.isVisible()) {
    this.renderer_.setVisible(element, false)
  }
};
goog.ui.Control.prototype.getPreferredAriaRole = function() {
  return this.preferredAriaRole_
};
goog.ui.Control.prototype.setPreferredAriaRole = function(role) {
  this.preferredAriaRole_ = role
};
goog.ui.Control.prototype.getContentElement = function() {
  return this.renderer_.getContentElement(this.getElement())
};
goog.ui.Control.prototype.canDecorate = function(element) {
  return this.renderer_.canDecorate(element)
};
goog.ui.Control.prototype.decorateInternal = function(element) {
  element = this.renderer_.decorate(this, element);
  this.setElementInternal(element);
  this.renderer_.setAriaRole(element, this.getPreferredAriaRole());
  if(!this.isAllowTextSelection()) {
    this.renderer_.setAllowTextSelection(element, false)
  }
  this.visible_ = element.style.display != "none"
};
goog.ui.Control.prototype.enterDocument = function() {
  goog.ui.Control.superClass_.enterDocument.call(this);
  this.renderer_.initializeDom(this);
  if(this.supportedStates_ & ~goog.ui.Component.State.DISABLED) {
    if(this.isHandleMouseEvents()) {
      this.enableMouseEventHandling_(true)
    }
    if(this.isSupportedState(goog.ui.Component.State.FOCUSED)) {
      var keyTarget = this.getKeyEventTarget();
      if(keyTarget) {
        var keyHandler = this.getKeyHandler();
        keyHandler.attach(keyTarget);
        this.getHandler().listen(keyHandler, goog.events.KeyHandler.EventType.KEY, this.handleKeyEvent).listen(keyTarget, goog.events.EventType.FOCUS, this.handleFocus).listen(keyTarget, goog.events.EventType.BLUR, this.handleBlur)
      }
    }
  }
};
goog.ui.Control.prototype.enableMouseEventHandling_ = function(enable) {
  var handler = this.getHandler();
  var element = this.getElement();
  if(enable) {
    handler.listen(element, goog.events.EventType.MOUSEOVER, this.handleMouseOver).listen(element, goog.events.EventType.MOUSEDOWN, this.handleMouseDown).listen(element, goog.events.EventType.MOUSEUP, this.handleMouseUp).listen(element, goog.events.EventType.MOUSEOUT, this.handleMouseOut);
    if(goog.userAgent.IE) {
      handler.listen(element, goog.events.EventType.DBLCLICK, this.handleDblClick)
    }
  }else {
    handler.unlisten(element, goog.events.EventType.MOUSEOVER, this.handleMouseOver).unlisten(element, goog.events.EventType.MOUSEDOWN, this.handleMouseDown).unlisten(element, goog.events.EventType.MOUSEUP, this.handleMouseUp).unlisten(element, goog.events.EventType.MOUSEOUT, this.handleMouseOut);
    if(goog.userAgent.IE) {
      handler.unlisten(element, goog.events.EventType.DBLCLICK, this.handleDblClick)
    }
  }
};
goog.ui.Control.prototype.exitDocument = function() {
  goog.ui.Control.superClass_.exitDocument.call(this);
  if(this.keyHandler_) {
    this.keyHandler_.detach()
  }
  if(this.isVisible() && this.isEnabled()) {
    this.renderer_.setFocusable(this, false)
  }
};
goog.ui.Control.prototype.disposeInternal = function() {
  goog.ui.Control.superClass_.disposeInternal.call(this);
  if(this.keyHandler_) {
    this.keyHandler_.dispose();
    delete this.keyHandler_
  }
  delete this.renderer_;
  this.content_ = null;
  this.extraClassNames_ = null
};
goog.ui.Control.prototype.getContent = function() {
  return this.content_
};
goog.ui.Control.prototype.setContent = function(content) {
  this.renderer_.setContent(this.getElement(), content);
  this.setContentInternal(content)
};
goog.ui.Control.prototype.setContentInternal = function(content) {
  this.content_ = content
};
goog.ui.Control.prototype.getCaption = function() {
  var content = this.getContent();
  if(!content) {
    return""
  }
  var caption = goog.isString(content) ? content : goog.isArray(content) ? goog.array.map(content, goog.dom.getRawTextContent).join("") : goog.dom.getTextContent(content);
  return goog.string.collapseBreakingSpaces(caption)
};
goog.ui.Control.prototype.setCaption = function(caption) {
  this.setContent(caption)
};
goog.ui.Control.prototype.setRightToLeft = function(rightToLeft) {
  goog.ui.Control.superClass_.setRightToLeft.call(this, rightToLeft);
  var element = this.getElement();
  if(element) {
    this.renderer_.setRightToLeft(element, rightToLeft)
  }
};
goog.ui.Control.prototype.isAllowTextSelection = function() {
  return this.allowTextSelection_
};
goog.ui.Control.prototype.setAllowTextSelection = function(allow) {
  this.allowTextSelection_ = allow;
  var element = this.getElement();
  if(element) {
    this.renderer_.setAllowTextSelection(element, allow)
  }
};
goog.ui.Control.prototype.isVisible = function() {
  return this.visible_
};
goog.ui.Control.prototype.setVisible = function(visible, opt_force) {
  if(opt_force || this.visible_ != visible && this.dispatchEvent(visible ? goog.ui.Component.EventType.SHOW : goog.ui.Component.EventType.HIDE)) {
    var element = this.getElement();
    if(element) {
      this.renderer_.setVisible(element, visible)
    }
    if(this.isEnabled()) {
      this.renderer_.setFocusable(this, visible)
    }
    this.visible_ = visible;
    return true
  }
  return false
};
goog.ui.Control.prototype.isEnabled = function() {
  return!this.hasState(goog.ui.Component.State.DISABLED)
};
goog.ui.Control.prototype.isParentDisabled_ = function() {
  var parent = this.getParent();
  return!!parent && typeof parent.isEnabled == "function" && !parent.isEnabled()
};
goog.ui.Control.prototype.setEnabled = function(enable) {
  if(!this.isParentDisabled_() && this.isTransitionAllowed(goog.ui.Component.State.DISABLED, !enable)) {
    if(!enable) {
      this.setActive(false);
      this.setHighlighted(false)
    }
    if(this.isVisible()) {
      this.renderer_.setFocusable(this, enable)
    }
    this.setState(goog.ui.Component.State.DISABLED, !enable)
  }
};
goog.ui.Control.prototype.isHighlighted = function() {
  return this.hasState(goog.ui.Component.State.HOVER)
};
goog.ui.Control.prototype.setHighlighted = function(highlight) {
  if(this.isTransitionAllowed(goog.ui.Component.State.HOVER, highlight)) {
    this.setState(goog.ui.Component.State.HOVER, highlight)
  }
};
goog.ui.Control.prototype.isActive = function() {
  return this.hasState(goog.ui.Component.State.ACTIVE)
};
goog.ui.Control.prototype.setActive = function(active) {
  if(this.isTransitionAllowed(goog.ui.Component.State.ACTIVE, active)) {
    this.setState(goog.ui.Component.State.ACTIVE, active)
  }
};
goog.ui.Control.prototype.isSelected = function() {
  return this.hasState(goog.ui.Component.State.SELECTED)
};
goog.ui.Control.prototype.setSelected = function(select) {
  if(this.isTransitionAllowed(goog.ui.Component.State.SELECTED, select)) {
    this.setState(goog.ui.Component.State.SELECTED, select)
  }
};
goog.ui.Control.prototype.isChecked = function() {
  return this.hasState(goog.ui.Component.State.CHECKED)
};
goog.ui.Control.prototype.setChecked = function(check) {
  if(this.isTransitionAllowed(goog.ui.Component.State.CHECKED, check)) {
    this.setState(goog.ui.Component.State.CHECKED, check)
  }
};
goog.ui.Control.prototype.isFocused = function() {
  return this.hasState(goog.ui.Component.State.FOCUSED)
};
goog.ui.Control.prototype.setFocused = function(focused) {
  if(this.isTransitionAllowed(goog.ui.Component.State.FOCUSED, focused)) {
    this.setState(goog.ui.Component.State.FOCUSED, focused)
  }
};
goog.ui.Control.prototype.isOpen = function() {
  return this.hasState(goog.ui.Component.State.OPENED)
};
goog.ui.Control.prototype.setOpen = function(open) {
  if(this.isTransitionAllowed(goog.ui.Component.State.OPENED, open)) {
    this.setState(goog.ui.Component.State.OPENED, open)
  }
};
goog.ui.Control.prototype.getState = function() {
  return this.state_
};
goog.ui.Control.prototype.hasState = function(state) {
  return!!(this.state_ & state)
};
goog.ui.Control.prototype.setState = function(state, enable) {
  if(this.isSupportedState(state) && enable != this.hasState(state)) {
    this.renderer_.setState(this, state, enable);
    this.state_ = enable ? this.state_ | state : this.state_ & ~state
  }
};
goog.ui.Control.prototype.setStateInternal = function(state) {
  this.state_ = state
};
goog.ui.Control.prototype.isSupportedState = function(state) {
  return!!(this.supportedStates_ & state)
};
goog.ui.Control.prototype.setSupportedState = function(state, support) {
  if(this.isInDocument() && this.hasState(state) && !support) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(!support && this.hasState(state)) {
    this.setState(state, false)
  }
  this.supportedStates_ = support ? this.supportedStates_ | state : this.supportedStates_ & ~state
};
goog.ui.Control.prototype.isAutoState = function(state) {
  return!!(this.autoStates_ & state) && this.isSupportedState(state)
};
goog.ui.Control.prototype.setAutoStates = function(states, enable) {
  this.autoStates_ = enable ? this.autoStates_ | states : this.autoStates_ & ~states
};
goog.ui.Control.prototype.isDispatchTransitionEvents = function(state) {
  return!!(this.statesWithTransitionEvents_ & state) && this.isSupportedState(state)
};
goog.ui.Control.prototype.setDispatchTransitionEvents = function(states, enable) {
  this.statesWithTransitionEvents_ = enable ? this.statesWithTransitionEvents_ | states : this.statesWithTransitionEvents_ & ~states
};
goog.ui.Control.prototype.isTransitionAllowed = function(state, enable) {
  return this.isSupportedState(state) && this.hasState(state) != enable && (!(this.statesWithTransitionEvents_ & state) || this.dispatchEvent(goog.ui.Component.getStateTransitionEvent(state, enable))) && !this.isDisposed()
};
goog.ui.Control.prototype.handleMouseOver = function(e) {
  if(!goog.ui.Control.isMouseEventWithinElement_(e, this.getElement()) && this.dispatchEvent(goog.ui.Component.EventType.ENTER) && this.isEnabled() && this.isAutoState(goog.ui.Component.State.HOVER)) {
    this.setHighlighted(true)
  }
};
goog.ui.Control.prototype.handleMouseOut = function(e) {
  if(!goog.ui.Control.isMouseEventWithinElement_(e, this.getElement()) && this.dispatchEvent(goog.ui.Component.EventType.LEAVE)) {
    if(this.isAutoState(goog.ui.Component.State.ACTIVE)) {
      this.setActive(false)
    }
    if(this.isAutoState(goog.ui.Component.State.HOVER)) {
      this.setHighlighted(false)
    }
  }
};
goog.ui.Control.isMouseEventWithinElement_ = function(e, elem) {
  return!!e.relatedTarget && goog.dom.contains(elem, e.relatedTarget)
};
goog.ui.Control.prototype.handleMouseDown = function(e) {
  if(this.isEnabled()) {
    if(this.isAutoState(goog.ui.Component.State.HOVER)) {
      this.setHighlighted(true)
    }
    if(e.isMouseActionButton()) {
      if(this.isAutoState(goog.ui.Component.State.ACTIVE)) {
        this.setActive(true)
      }
      if(this.renderer_.isFocusable(this)) {
        this.getKeyEventTarget().focus()
      }
    }
  }
  if(!this.isAllowTextSelection() && e.isMouseActionButton()) {
    e.preventDefault()
  }
};
goog.ui.Control.prototype.handleMouseUp = function(e) {
  if(this.isEnabled()) {
    if(this.isAutoState(goog.ui.Component.State.HOVER)) {
      this.setHighlighted(true)
    }
    if(this.isActive() && this.performActionInternal(e) && this.isAutoState(goog.ui.Component.State.ACTIVE)) {
      this.setActive(false)
    }
  }
};
goog.ui.Control.prototype.handleDblClick = function(e) {
  if(this.isEnabled()) {
    this.performActionInternal(e)
  }
};
goog.ui.Control.prototype.performActionInternal = function(e) {
  if(this.isAutoState(goog.ui.Component.State.CHECKED)) {
    this.setChecked(!this.isChecked())
  }
  if(this.isAutoState(goog.ui.Component.State.SELECTED)) {
    this.setSelected(true)
  }
  if(this.isAutoState(goog.ui.Component.State.OPENED)) {
    this.setOpen(!this.isOpen())
  }
  var actionEvent = new goog.events.Event(goog.ui.Component.EventType.ACTION, this);
  if(e) {
    var properties = ["altKey", "ctrlKey", "metaKey", "shiftKey", "platformModifierKey"];
    for(var property, i = 0;property = properties[i];i++) {
      actionEvent[property] = e[property]
    }
  }
  return this.dispatchEvent(actionEvent)
};
goog.ui.Control.prototype.handleFocus = function(e) {
  if(this.isAutoState(goog.ui.Component.State.FOCUSED)) {
    this.setFocused(true)
  }
};
goog.ui.Control.prototype.handleBlur = function(e) {
  if(this.isAutoState(goog.ui.Component.State.ACTIVE)) {
    this.setActive(false)
  }
  if(this.isAutoState(goog.ui.Component.State.FOCUSED)) {
    this.setFocused(false)
  }
};
goog.ui.Control.prototype.handleKeyEvent = function(e) {
  if(this.isVisible() && this.isEnabled() && this.handleKeyEventInternal(e)) {
    e.preventDefault();
    e.stopPropagation();
    return true
  }
  return false
};
goog.ui.Control.prototype.handleKeyEventInternal = function(e) {
  return e.keyCode == goog.events.KeyCodes.ENTER && this.performActionInternal(e)
};
goog.ui.registry.setDefaultRenderer(goog.ui.Control, goog.ui.ControlRenderer);
goog.ui.registry.setDecoratorByClassName(goog.ui.ControlRenderer.CSS_CLASS, function() {
  return new goog.ui.Control(null)
});
goog.provide("goog.ui.TextareaRenderer");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.ControlRenderer");
goog.ui.TextareaRenderer = function() {
  goog.ui.ControlRenderer.call(this)
};
goog.inherits(goog.ui.TextareaRenderer, goog.ui.ControlRenderer);
goog.addSingletonGetter(goog.ui.TextareaRenderer);
goog.ui.TextareaRenderer.CSS_CLASS = goog.getCssName("goog-textarea");
goog.ui.TextareaRenderer.prototype.getAriaRole = function() {
  return undefined
};
goog.ui.TextareaRenderer.prototype.decorate = function(control, element) {
  goog.ui.TextareaRenderer.superClass_.decorate.call(this, control, element);
  control.setContentInternal(element.value);
  return element
};
goog.ui.TextareaRenderer.prototype.createDom = function(textarea) {
  this.setUpTextarea_(textarea);
  var element = textarea.getDomHelper().createDom("textarea", {"class":this.getClassNames(textarea).join(" "), "disabled":!textarea.isEnabled()}, textarea.getContent() || "");
  return element
};
goog.ui.TextareaRenderer.prototype.canDecorate = function(element) {
  return element.tagName == goog.dom.TagName.TEXTAREA
};
goog.ui.TextareaRenderer.prototype.setRightToLeft = goog.nullFunction;
goog.ui.TextareaRenderer.prototype.isFocusable = function(textarea) {
  return textarea.isEnabled()
};
goog.ui.TextareaRenderer.prototype.setFocusable = goog.nullFunction;
goog.ui.TextareaRenderer.prototype.setState = function(textarea, state, enable) {
  goog.ui.TextareaRenderer.superClass_.setState.call(this, textarea, state, enable);
  var element = textarea.getElement();
  if(element && state == goog.ui.Component.State.DISABLED) {
    element.disabled = enable
  }
};
goog.ui.TextareaRenderer.prototype.updateAriaState = goog.nullFunction;
goog.ui.TextareaRenderer.prototype.setUpTextarea_ = function(textarea) {
  textarea.setHandleMouseEvents(false);
  textarea.setAutoStates(goog.ui.Component.State.ALL, false);
  textarea.setSupportedState(goog.ui.Component.State.FOCUSED, false)
};
goog.ui.TextareaRenderer.prototype.setContent = function(element, value) {
  if(element) {
    element.value = value
  }
};
goog.ui.TextareaRenderer.prototype.getCssClass = function() {
  return goog.ui.TextareaRenderer.CSS_CLASS
};
goog.provide("goog.userAgent.product");
goog.require("goog.userAgent");
goog.userAgent.product.ASSUME_FIREFOX = false;
goog.userAgent.product.ASSUME_CAMINO = false;
goog.userAgent.product.ASSUME_IPHONE = false;
goog.userAgent.product.ASSUME_IPAD = false;
goog.userAgent.product.ASSUME_ANDROID = false;
goog.userAgent.product.ASSUME_CHROME = false;
goog.userAgent.product.ASSUME_SAFARI = false;
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_CAMINO || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.init_ = function() {
  goog.userAgent.product.detectedFirefox_ = false;
  goog.userAgent.product.detectedCamino_ = false;
  goog.userAgent.product.detectedIphone_ = false;
  goog.userAgent.product.detectedIpad_ = false;
  goog.userAgent.product.detectedAndroid_ = false;
  goog.userAgent.product.detectedChrome_ = false;
  goog.userAgent.product.detectedSafari_ = false;
  var ua = goog.userAgent.getUserAgentString();
  if(!ua) {
    return
  }
  if(ua.indexOf("Firefox") != -1) {
    goog.userAgent.product.detectedFirefox_ = true
  }else {
    if(ua.indexOf("Camino") != -1) {
      goog.userAgent.product.detectedCamino_ = true
    }else {
      if(ua.indexOf("iPhone") != -1 || ua.indexOf("iPod") != -1) {
        goog.userAgent.product.detectedIphone_ = true
      }else {
        if(ua.indexOf("iPad") != -1) {
          goog.userAgent.product.detectedIpad_ = true
        }else {
          if(ua.indexOf("Android") != -1) {
            goog.userAgent.product.detectedAndroid_ = true
          }else {
            if(ua.indexOf("Chrome") != -1) {
              goog.userAgent.product.detectedChrome_ = true
            }else {
              if(ua.indexOf("Safari") != -1) {
                goog.userAgent.product.detectedSafari_ = true
              }
            }
          }
        }
      }
    }
  }
};
if(!goog.userAgent.product.PRODUCT_KNOWN_) {
  goog.userAgent.product.init_()
}
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.userAgent.product.detectedFirefox_;
goog.userAgent.product.CAMINO = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CAMINO : goog.userAgent.product.detectedCamino_;
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.detectedIphone_;
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.userAgent.product.detectedIpad_;
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.userAgent.product.detectedAndroid_;
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.userAgent.product.detectedChrome_;
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.detectedSafari_;
goog.provide("goog.ui.Textarea");
goog.require("goog.Timer");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.style");
goog.require("goog.ui.Control");
goog.require("goog.ui.TextareaRenderer");
goog.require("goog.userAgent");
goog.require("goog.userAgent.product");
goog.ui.Textarea = function(content, opt_renderer, opt_domHelper) {
  goog.ui.Control.call(this, content, opt_renderer || goog.ui.TextareaRenderer.getInstance(), opt_domHelper);
  this.setHandleMouseEvents(false);
  this.setAllowTextSelection(true);
  if(!content) {
    this.setContentInternal("")
  }
};
goog.inherits(goog.ui.Textarea, goog.ui.Control);
goog.ui.Textarea.NEEDS_HELP_SHRINKING_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT;
goog.ui.Textarea.prototype.isResizing_ = false;
goog.ui.Textarea.prototype.height_ = 0;
goog.ui.Textarea.prototype.maxHeight_ = 0;
goog.ui.Textarea.prototype.minHeight_ = 0;
goog.ui.Textarea.prototype.hasDiscoveredTextareaCharacteristics_ = false;
goog.ui.Textarea.prototype.needsPaddingBorderFix_ = false;
goog.ui.Textarea.prototype.scrollHeightIncludesPadding_ = false;
goog.ui.Textarea.prototype.scrollHeightIncludesBorder_ = false;
goog.ui.Textarea.prototype.paddingBox_;
goog.ui.Textarea.prototype.borderBox_;
goog.ui.Textarea.prototype.getPaddingBorderBoxHeight_ = function() {
  var paddingBorderBoxHeight = this.paddingBox_.top + this.paddingBox_.bottom + this.borderBox_.top + this.borderBox_.bottom;
  return paddingBorderBoxHeight
};
goog.ui.Textarea.prototype.getMinHeight = function() {
  return this.minHeight_
};
goog.ui.Textarea.prototype.getMinHeight_ = function() {
  var minHeight = this.minHeight_;
  var textarea = this.getElement();
  if(minHeight && textarea && this.needsPaddingBorderFix_) {
    minHeight -= this.getPaddingBorderBoxHeight_()
  }
  return minHeight
};
goog.ui.Textarea.prototype.setMinHeight = function(height) {
  this.minHeight_ = height;
  this.resize()
};
goog.ui.Textarea.prototype.getMaxHeight = function() {
  return this.maxHeight_
};
goog.ui.Textarea.prototype.getMaxHeight_ = function() {
  var maxHeight = this.maxHeight_;
  var textarea = this.getElement();
  if(maxHeight && textarea && this.needsPaddingBorderFix_) {
    maxHeight -= this.getPaddingBorderBoxHeight_()
  }
  return maxHeight
};
goog.ui.Textarea.prototype.setMaxHeight = function(height) {
  this.maxHeight_ = height;
  this.resize()
};
goog.ui.Textarea.prototype.setValue = function(value) {
  this.setContent(String(value))
};
goog.ui.Textarea.prototype.getValue = function() {
  return this.getElement().value
};
goog.ui.Textarea.prototype.setContent = function(content) {
  goog.ui.Textarea.superClass_.setContent.call(this, content);
  this.resize()
};
goog.ui.Textarea.prototype.setEnabled = function(enable) {
  goog.ui.Textarea.superClass_.setEnabled.call(this, enable);
  this.getElement().disabled = !enable
};
goog.ui.Textarea.prototype.resize = function() {
  if(this.getElement()) {
    this.grow_()
  }
};
goog.ui.Textarea.prototype.enterDocument = function() {
  var textarea = this.getElement();
  goog.style.setStyle(textarea, {"overflowY":"hidden", "overflowX":"auto", "boxSizing":"border-box", "MsBoxSizing":"border-box", "WebkitBoxSizing":"border-box", "MozBoxSizing":"border-box"});
  this.paddingBox_ = goog.style.getPaddingBox(textarea);
  this.borderBox_ = goog.style.getBorderBox(textarea);
  this.getHandler().listen(textarea, goog.events.EventType.SCROLL, this.grow_).listen(textarea, goog.events.EventType.FOCUS, this.grow_).listen(textarea, goog.events.EventType.KEYUP, this.grow_).listen(textarea, goog.events.EventType.MOUSEUP, this.mouseUpListener_);
  this.resize()
};
goog.ui.Textarea.prototype.getHeight_ = function() {
  this.discoverTextareaCharacteristics_();
  var textarea = this.getElement();
  var height = this.getElement().scrollHeight + this.getHorizontalScrollBarHeight_();
  if(this.needsPaddingBorderFix_) {
    height -= this.getPaddingBorderBoxHeight_()
  }else {
    if(!this.scrollHeightIncludesPadding_) {
      var paddingBox = this.paddingBox_;
      var paddingBoxHeight = paddingBox.top + paddingBox.bottom;
      height += paddingBoxHeight
    }
    if(!this.scrollHeightIncludesBorder_) {
      var borderBox = goog.style.getBorderBox(textarea);
      var borderBoxHeight = borderBox.top + borderBox.bottom;
      height += borderBoxHeight
    }
  }
  return height
};
goog.ui.Textarea.prototype.setHeight_ = function(height) {
  if(this.height_ != height) {
    this.height_ = height;
    this.getElement().style.height = height + "px"
  }
};
goog.ui.Textarea.prototype.setHeightToEstimate_ = function() {
  var textarea = this.getElement();
  textarea.style.height = "auto";
  var newlines = textarea.value.match(/\n/g) || [];
  textarea.rows = newlines.length + 1
};
goog.ui.Textarea.prototype.getHorizontalScrollBarHeight_ = function() {
  var textarea = this.getElement();
  var height = textarea.offsetHeight - textarea.clientHeight;
  if(!this.scrollHeightIncludesPadding_) {
    var paddingBox = this.paddingBox_;
    var paddingBoxHeight = paddingBox.top + paddingBox.bottom;
    height -= paddingBoxHeight
  }
  if(!this.scrollHeightIncludesBorder_) {
    var borderBox = goog.style.getBorderBox(textarea);
    var borderBoxHeight = borderBox.top + borderBox.bottom;
    height -= borderBoxHeight
  }
  return height > 0 ? height : 0
};
goog.ui.Textarea.prototype.discoverTextareaCharacteristics_ = function() {
  if(!this.hasDiscoveredTextareaCharacteristics_) {
    var textarea = this.getElement().cloneNode(false);
    goog.style.setStyle(textarea, {"position":"absolute", "height":"auto", "top":"-9999px", "margin":"0", "padding":"1px", "border":"1px solid #000", "overflow":"hidden"});
    goog.dom.appendChild(this.getDomHelper().getDocument().body, textarea);
    var initialScrollHeight = textarea.scrollHeight;
    textarea.style.padding = "10px";
    var paddingScrollHeight = textarea.scrollHeight;
    this.scrollHeightIncludesPadding_ = paddingScrollHeight > initialScrollHeight;
    initialScrollHeight = paddingScrollHeight;
    textarea.style.borderWidth = "10px";
    var borderScrollHeight = textarea.scrollHeight;
    this.scrollHeightIncludesBorder_ = borderScrollHeight > initialScrollHeight;
    textarea.style.height = "100px";
    var offsetHeightAtHeight100 = textarea.offsetHeight;
    if(offsetHeightAtHeight100 != 100) {
      this.needsPaddingBorderFix_ = true
    }
    goog.dom.removeNode(textarea);
    this.hasDiscoveredTextareaCharacteristics_ = true
  }
};
goog.ui.Textarea.prototype.grow_ = function(opt_e) {
  if(this.isResizing_) {
    return
  }
  var shouldCallShrink = false;
  this.isResizing_ = true;
  var textarea = this.getElement();
  if(textarea.scrollHeight) {
    var setMinHeight = false;
    var setMaxHeight = false;
    var newHeight = this.getHeight_();
    var currentHeight = textarea.offsetHeight;
    var minHeight = this.getMinHeight_();
    var maxHeight = this.getMaxHeight_();
    if(minHeight && newHeight < minHeight) {
      this.setHeight_(minHeight);
      setMinHeight = true
    }else {
      if(maxHeight && newHeight > maxHeight) {
        this.setHeight_(maxHeight);
        textarea.style.overflowY = "";
        setMaxHeight = true
      }else {
        if(currentHeight != newHeight) {
          this.setHeight_(newHeight)
        }else {
          if(!this.height_) {
            this.height_ = newHeight
          }
        }
      }
    }
    if(!setMinHeight && !setMaxHeight && goog.ui.Textarea.NEEDS_HELP_SHRINKING_) {
      shouldCallShrink = true
    }
  }else {
    this.setHeightToEstimate_()
  }
  this.isResizing_ = false;
  if(shouldCallShrink) {
    this.shrink_()
  }
};
goog.ui.Textarea.prototype.shrink_ = function() {
  var textarea = this.getElement();
  if(!this.isResizing_) {
    this.isResizing_ = true;
    var isEmpty = false;
    if(!textarea.value) {
      textarea.value = " ";
      isEmpty = true
    }
    var scrollHeight = textarea.scrollHeight;
    if(!scrollHeight) {
      this.setHeightToEstimate_()
    }else {
      var currentHeight = this.getHeight_();
      var minHeight = this.getMinHeight_();
      var maxHeight = this.getMaxHeight_();
      if(!(minHeight && currentHeight <= minHeight) && !(maxHeight && currentHeight >= maxHeight)) {
        var paddingBox = this.paddingBox_;
        textarea.style.paddingBottom = paddingBox.bottom + 1 + "px";
        var heightAfterNudge = this.getHeight_();
        if(heightAfterNudge == currentHeight) {
          textarea.style.paddingBottom = paddingBox.bottom + scrollHeight + "px";
          textarea.scrollTop = 0;
          var shrinkToHeight = this.getHeight_() - scrollHeight;
          if(shrinkToHeight >= minHeight) {
            this.setHeight_(shrinkToHeight)
          }else {
            this.setHeight_(minHeight)
          }
        }
        textarea.style.paddingBottom = paddingBox.bottom + "px"
      }
    }
    if(isEmpty) {
      textarea.value = ""
    }
    this.isResizing_ = false
  }
};
goog.ui.Textarea.prototype.mouseUpListener_ = function(e) {
  var textarea = this.getElement();
  var height = textarea.offsetHeight;
  if(textarea["filters"] && textarea["filters"].length) {
    var dropShadow = textarea["filters"]["item"]("DXImageTransform.Microsoft.DropShadow");
    if(dropShadow) {
      height -= dropShadow["offX"]
    }
  }
  if(height != this.height_) {
    this.minHeight_ = height;
    this.height_ = height
  }
};
goog.provide("onedit.util");
goog.require("cljs.core");
onedit.util.collfn = function collfn(p1__7265_SHARP_) {
  return cljs.core.partial.call(null, cljs.core.apply, p1__7265_SHARP_)
};
onedit.util.sum = onedit.util.collfn.call(null, cljs.core._PLUS_);
onedit.util.join = onedit.util.collfn.call(null, cljs.core.str);
onedit.util.double$ = function double$(p1__7266_SHARP_) {
  return cljs.core.comp.call(null, p1__7266_SHARP_, p1__7266_SHARP_)
};
onedit.util.split = function split(n, s) {
  return cljs.core.PersistentVector.fromArray([cljs.core.subs.call(null, s, 0, n), cljs.core.subs.call(null, s, n, cljs.core.count.call(null, s))], true)
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__7904 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__7904, cljs.core.remove.call(null, function(p1__7902_SHARP_) {
    return max__7904 === p1__7902_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__7908__delegate = function(s1, s2, sets) {
      var bubbled_sets__7907 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__7907), cljs.core.rest.call(null, bubbled_sets__7907))
    };
    var G__7908 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7908__delegate.call(this, s1, s2, sets)
    };
    G__7908.cljs$lang$maxFixedArity = 2;
    G__7908.cljs$lang$applyTo = function(arglist__7909) {
      var s1 = cljs.core.first(arglist__7909);
      var s2 = cljs.core.first(cljs.core.next(arglist__7909));
      var sets = cljs.core.rest(cljs.core.next(arglist__7909));
      return G__7908__delegate(s1, s2, sets)
    };
    G__7908.cljs$lang$arity$variadic = G__7908__delegate;
    return G__7908
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__7912 = s2;
        var G__7913 = s1;
        s1 = G__7912;
        s2 = G__7913;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__7914__delegate = function(s1, s2, sets) {
      var bubbled_sets__7911 = clojure.set.bubble_max_key.call(null, function(p1__7905_SHARP_) {
        return-cljs.core.count.call(null, p1__7905_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__7911), cljs.core.rest.call(null, bubbled_sets__7911))
    };
    var G__7914 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7914__delegate.call(this, s1, s2, sets)
    };
    G__7914.cljs$lang$maxFixedArity = 2;
    G__7914.cljs$lang$applyTo = function(arglist__7915) {
      var s1 = cljs.core.first(arglist__7915);
      var s2 = cljs.core.first(cljs.core.next(arglist__7915));
      var sets = cljs.core.rest(cljs.core.next(arglist__7915));
      return G__7914__delegate(s1, s2, sets)
    };
    G__7914.cljs$lang$arity$variadic = G__7914__delegate;
    return G__7914
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__7916__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__7916 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7916__delegate.call(this, s1, s2, sets)
    };
    G__7916.cljs$lang$maxFixedArity = 2;
    G__7916.cljs$lang$applyTo = function(arglist__7917) {
      var s1 = cljs.core.first(arglist__7917);
      var s2 = cljs.core.first(cljs.core.next(arglist__7917));
      var sets = cljs.core.rest(cljs.core.next(arglist__7917));
      return G__7916__delegate(s1, s2, sets)
    };
    G__7916.cljs$lang$arity$variadic = G__7916__delegate;
    return G__7916
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__7918_SHARP_) {
    return cljs.core.select_keys.call(null, p1__7918_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__7926) {
    var vec__7927__7928 = p__7926;
    var old__7929 = cljs.core.nth.call(null, vec__7927__7928, 0, null);
    var new__7930 = cljs.core.nth.call(null, vec__7927__7928, 1, null);
    if(function() {
      var and__3822__auto____7931 = cljs.core.not_EQ_.call(null, old__7929, new__7930);
      if(and__3822__auto____7931) {
        return cljs.core.contains_QMARK_.call(null, m, old__7929)
      }else {
        return and__3822__auto____7931
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new__7930, cljs.core._lookup.call(null, m, old__7929, null)), old__7929)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__7919_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__7919_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__7933 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__7933, cljs.core.conj.call(null, cljs.core._lookup.call(null, m, ik__7933, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__7943) {
    var vec__7944__7945 = p__7943;
    var k__7946 = cljs.core.nth.call(null, vec__7944__7945, 0, null);
    var v__7947 = cljs.core.nth.call(null, vec__7944__7945, 1, null);
    return cljs.core.assoc.call(null, m, v__7947, k__7946)
  }, cljs.core.ObjMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(function() {
      var and__3822__auto____7964 = cljs.core.seq.call(null, xrel);
      if(and__3822__auto____7964) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____7964
      }
    }()) {
      var ks__7966 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__7965__7967 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r__7968 = cljs.core.nth.call(null, vec__7965__7967, 0, null);
      var s__7969 = cljs.core.nth.call(null, vec__7965__7967, 1, null);
      var idx__7970 = clojure.set.index.call(null, r__7968, ks__7966);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__7971 = idx__7970.call(null, cljs.core.select_keys.call(null, x, ks__7966));
        if(cljs.core.truth_(found__7971)) {
          return cljs.core.reduce.call(null, function(p1__7934_SHARP_, p2__7935_SHARP_) {
            return cljs.core.conj.call(null, p1__7934_SHARP_, cljs.core.merge.call(null, p2__7935_SHARP_, x))
          }, ret, found__7971)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s__7969)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__7972__7973 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r__7974 = cljs.core.nth.call(null, vec__7972__7973, 0, null);
    var s__7975 = cljs.core.nth.call(null, vec__7972__7973, 1, null);
    var k__7976 = cljs.core.nth.call(null, vec__7972__7973, 2, null);
    var idx__7977 = clojure.set.index.call(null, r__7974, cljs.core.vals.call(null, k__7976));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__7978 = idx__7977.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__7976)), k__7976));
      if(cljs.core.truth_(found__7978)) {
        return cljs.core.reduce.call(null, function(p1__7936_SHARP_, p2__7937_SHARP_) {
          return cljs.core.conj.call(null, p1__7936_SHARP_, cljs.core.merge.call(null, p2__7937_SHARP_, x))
        }, ret, found__7978)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s__7975)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____7981 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____7981) {
    return cljs.core.every_QMARK_.call(null, function(p1__7948_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__7948_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____7981
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____7983 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____7983) {
    return cljs.core.every_QMARK_.call(null, function(p1__7979_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__7979_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____7983
  }
};
goog.provide("cljs.core.logic");
goog.require("cljs.core");
goog.require("clojure.set");
cljs.core.logic._STAR_occurs_check_STAR_ = true;
cljs.core.logic.IUnifyTerms = {};
cljs.core.logic._unify_terms = function _unify_terms(u, v, s) {
  if(function() {
    var and__3822__auto____7330 = u;
    if(and__3822__auto____7330) {
      return u.cljs$core$logic$IUnifyTerms$_unify_terms$arity$3
    }else {
      return and__3822__auto____7330
    }
  }()) {
    return u.cljs$core$logic$IUnifyTerms$_unify_terms$arity$3(u, v, s)
  }else {
    var x__2410__auto____7331 = u == null ? null : u;
    return function() {
      var or__3824__auto____7332 = cljs.core.logic._unify_terms[goog.typeOf(x__2410__auto____7331)];
      if(or__3824__auto____7332) {
        return or__3824__auto____7332
      }else {
        var or__3824__auto____7333 = cljs.core.logic._unify_terms["_"];
        if(or__3824__auto____7333) {
          return or__3824__auto____7333
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyTerms.-unify-terms", u);
        }
      }
    }().call(null, u, v, s)
  }
};
cljs.core.logic.IUnifyWithNil = {};
cljs.core.logic._unify_with_nil = function _unify_with_nil(v, u, s) {
  if(function() {
    var and__3822__auto____7338 = v;
    if(and__3822__auto____7338) {
      return v.cljs$core$logic$IUnifyWithNil$_unify_with_nil$arity$3
    }else {
      return and__3822__auto____7338
    }
  }()) {
    return v.cljs$core$logic$IUnifyWithNil$_unify_with_nil$arity$3(v, u, s)
  }else {
    var x__2410__auto____7339 = v == null ? null : v;
    return function() {
      var or__3824__auto____7340 = cljs.core.logic._unify_with_nil[goog.typeOf(x__2410__auto____7339)];
      if(or__3824__auto____7340) {
        return or__3824__auto____7340
      }else {
        var or__3824__auto____7341 = cljs.core.logic._unify_with_nil["_"];
        if(or__3824__auto____7341) {
          return or__3824__auto____7341
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyWithNil.-unify-with-nil", v);
        }
      }
    }().call(null, v, u, s)
  }
};
cljs.core.logic.IUnifyWithObject = {};
cljs.core.logic._unify_with_object = function _unify_with_object(v, u, s) {
  if(function() {
    var and__3822__auto____7346 = v;
    if(and__3822__auto____7346) {
      return v.cljs$core$logic$IUnifyWithObject$_unify_with_object$arity$3
    }else {
      return and__3822__auto____7346
    }
  }()) {
    return v.cljs$core$logic$IUnifyWithObject$_unify_with_object$arity$3(v, u, s)
  }else {
    var x__2410__auto____7347 = v == null ? null : v;
    return function() {
      var or__3824__auto____7348 = cljs.core.logic._unify_with_object[goog.typeOf(x__2410__auto____7347)];
      if(or__3824__auto____7348) {
        return or__3824__auto____7348
      }else {
        var or__3824__auto____7349 = cljs.core.logic._unify_with_object["_"];
        if(or__3824__auto____7349) {
          return or__3824__auto____7349
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyWithObject.-unify-with-object", v);
        }
      }
    }().call(null, v, u, s)
  }
};
cljs.core.logic.IUnifyWithLVar = {};
cljs.core.logic._unify_with_lvar = function _unify_with_lvar(v, u, s) {
  if(function() {
    var and__3822__auto____7354 = v;
    if(and__3822__auto____7354) {
      return v.cljs$core$logic$IUnifyWithLVar$_unify_with_lvar$arity$3
    }else {
      return and__3822__auto____7354
    }
  }()) {
    return v.cljs$core$logic$IUnifyWithLVar$_unify_with_lvar$arity$3(v, u, s)
  }else {
    var x__2410__auto____7355 = v == null ? null : v;
    return function() {
      var or__3824__auto____7356 = cljs.core.logic._unify_with_lvar[goog.typeOf(x__2410__auto____7355)];
      if(or__3824__auto____7356) {
        return or__3824__auto____7356
      }else {
        var or__3824__auto____7357 = cljs.core.logic._unify_with_lvar["_"];
        if(or__3824__auto____7357) {
          return or__3824__auto____7357
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyWithLVar.-unify-with-lvar", v);
        }
      }
    }().call(null, v, u, s)
  }
};
cljs.core.logic.IUnifyWithLSeq = {};
cljs.core.logic._unify_with_lseq = function _unify_with_lseq(v, u, s) {
  if(function() {
    var and__3822__auto____7362 = v;
    if(and__3822__auto____7362) {
      return v.cljs$core$logic$IUnifyWithLSeq$_unify_with_lseq$arity$3
    }else {
      return and__3822__auto____7362
    }
  }()) {
    return v.cljs$core$logic$IUnifyWithLSeq$_unify_with_lseq$arity$3(v, u, s)
  }else {
    var x__2410__auto____7363 = v == null ? null : v;
    return function() {
      var or__3824__auto____7364 = cljs.core.logic._unify_with_lseq[goog.typeOf(x__2410__auto____7363)];
      if(or__3824__auto____7364) {
        return or__3824__auto____7364
      }else {
        var or__3824__auto____7365 = cljs.core.logic._unify_with_lseq["_"];
        if(or__3824__auto____7365) {
          return or__3824__auto____7365
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyWithLSeq.-unify-with-lseq", v);
        }
      }
    }().call(null, v, u, s)
  }
};
cljs.core.logic.IUnifyWithSequential = {};
cljs.core.logic._unify_with_seq = function _unify_with_seq(v, u, s) {
  if(function() {
    var and__3822__auto____7370 = v;
    if(and__3822__auto____7370) {
      return v.cljs$core$logic$IUnifyWithSequential$_unify_with_seq$arity$3
    }else {
      return and__3822__auto____7370
    }
  }()) {
    return v.cljs$core$logic$IUnifyWithSequential$_unify_with_seq$arity$3(v, u, s)
  }else {
    var x__2410__auto____7371 = v == null ? null : v;
    return function() {
      var or__3824__auto____7372 = cljs.core.logic._unify_with_seq[goog.typeOf(x__2410__auto____7371)];
      if(or__3824__auto____7372) {
        return or__3824__auto____7372
      }else {
        var or__3824__auto____7373 = cljs.core.logic._unify_with_seq["_"];
        if(or__3824__auto____7373) {
          return or__3824__auto____7373
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyWithSequential.-unify-with-seq", v);
        }
      }
    }().call(null, v, u, s)
  }
};
cljs.core.logic.IUnifyWithMap = {};
cljs.core.logic._unify_with_map = function _unify_with_map(v, u, s) {
  if(function() {
    var and__3822__auto____7378 = v;
    if(and__3822__auto____7378) {
      return v.cljs$core$logic$IUnifyWithMap$_unify_with_map$arity$3
    }else {
      return and__3822__auto____7378
    }
  }()) {
    return v.cljs$core$logic$IUnifyWithMap$_unify_with_map$arity$3(v, u, s)
  }else {
    var x__2410__auto____7379 = v == null ? null : v;
    return function() {
      var or__3824__auto____7380 = cljs.core.logic._unify_with_map[goog.typeOf(x__2410__auto____7379)];
      if(or__3824__auto____7380) {
        return or__3824__auto____7380
      }else {
        var or__3824__auto____7381 = cljs.core.logic._unify_with_map["_"];
        if(or__3824__auto____7381) {
          return or__3824__auto____7381
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyWithMap.-unify-with-map", v);
        }
      }
    }().call(null, v, u, s)
  }
};
cljs.core.logic.IUnifyWithSet = {};
cljs.core.logic._unify_with_set = function _unify_with_set(v, u, s) {
  if(function() {
    var and__3822__auto____7386 = v;
    if(and__3822__auto____7386) {
      return v.cljs$core$logic$IUnifyWithSet$_unify_with_set$arity$3
    }else {
      return and__3822__auto____7386
    }
  }()) {
    return v.cljs$core$logic$IUnifyWithSet$_unify_with_set$arity$3(v, u, s)
  }else {
    var x__2410__auto____7387 = v == null ? null : v;
    return function() {
      var or__3824__auto____7388 = cljs.core.logic._unify_with_set[goog.typeOf(x__2410__auto____7387)];
      if(or__3824__auto____7388) {
        return or__3824__auto____7388
      }else {
        var or__3824__auto____7389 = cljs.core.logic._unify_with_set["_"];
        if(or__3824__auto____7389) {
          return or__3824__auto____7389
        }else {
          throw cljs.core.missing_protocol.call(null, "IUnifyWithSet.-unify-with-set", v);
        }
      }
    }().call(null, v, u, s)
  }
};
cljs.core.logic.IReifyTerm = {};
cljs.core.logic._reify_term = function _reify_term(v, s) {
  if(function() {
    var and__3822__auto____7394 = v;
    if(and__3822__auto____7394) {
      return v.cljs$core$logic$IReifyTerm$_reify_term$arity$2
    }else {
      return and__3822__auto____7394
    }
  }()) {
    return v.cljs$core$logic$IReifyTerm$_reify_term$arity$2(v, s)
  }else {
    var x__2410__auto____7395 = v == null ? null : v;
    return function() {
      var or__3824__auto____7396 = cljs.core.logic._reify_term[goog.typeOf(x__2410__auto____7395)];
      if(or__3824__auto____7396) {
        return or__3824__auto____7396
      }else {
        var or__3824__auto____7397 = cljs.core.logic._reify_term["_"];
        if(or__3824__auto____7397) {
          return or__3824__auto____7397
        }else {
          throw cljs.core.missing_protocol.call(null, "IReifyTerm.-reify-term", v);
        }
      }
    }().call(null, v, s)
  }
};
cljs.core.logic.IWalkTerm = {};
cljs.core.logic._walk_term = function _walk_term(v, s) {
  if(function() {
    var and__3822__auto____7402 = v;
    if(and__3822__auto____7402) {
      return v.cljs$core$logic$IWalkTerm$_walk_term$arity$2
    }else {
      return and__3822__auto____7402
    }
  }()) {
    return v.cljs$core$logic$IWalkTerm$_walk_term$arity$2(v, s)
  }else {
    var x__2410__auto____7403 = v == null ? null : v;
    return function() {
      var or__3824__auto____7404 = cljs.core.logic._walk_term[goog.typeOf(x__2410__auto____7403)];
      if(or__3824__auto____7404) {
        return or__3824__auto____7404
      }else {
        var or__3824__auto____7405 = cljs.core.logic._walk_term["_"];
        if(or__3824__auto____7405) {
          return or__3824__auto____7405
        }else {
          throw cljs.core.missing_protocol.call(null, "IWalkTerm.-walk-term", v);
        }
      }
    }().call(null, v, s)
  }
};
cljs.core.logic.IOccursCheckTerm = {};
cljs.core.logic._occurs_check_term = function _occurs_check_term(v, x, s) {
  if(function() {
    var and__3822__auto____7410 = v;
    if(and__3822__auto____7410) {
      return v.cljs$core$logic$IOccursCheckTerm$_occurs_check_term$arity$3
    }else {
      return and__3822__auto____7410
    }
  }()) {
    return v.cljs$core$logic$IOccursCheckTerm$_occurs_check_term$arity$3(v, x, s)
  }else {
    var x__2410__auto____7411 = v == null ? null : v;
    return function() {
      var or__3824__auto____7412 = cljs.core.logic._occurs_check_term[goog.typeOf(x__2410__auto____7411)];
      if(or__3824__auto____7412) {
        return or__3824__auto____7412
      }else {
        var or__3824__auto____7413 = cljs.core.logic._occurs_check_term["_"];
        if(or__3824__auto____7413) {
          return or__3824__auto____7413
        }else {
          throw cljs.core.missing_protocol.call(null, "IOccursCheckTerm.-occurs-check-term", v);
        }
      }
    }().call(null, v, x, s)
  }
};
cljs.core.logic.IBuildTerm = {};
cljs.core.logic._build_term = function _build_term(u, s) {
  if(function() {
    var and__3822__auto____7418 = u;
    if(and__3822__auto____7418) {
      return u.cljs$core$logic$IBuildTerm$_build_term$arity$2
    }else {
      return and__3822__auto____7418
    }
  }()) {
    return u.cljs$core$logic$IBuildTerm$_build_term$arity$2(u, s)
  }else {
    var x__2410__auto____7419 = u == null ? null : u;
    return function() {
      var or__3824__auto____7420 = cljs.core.logic._build_term[goog.typeOf(x__2410__auto____7419)];
      if(or__3824__auto____7420) {
        return or__3824__auto____7420
      }else {
        var or__3824__auto____7421 = cljs.core.logic._build_term["_"];
        if(or__3824__auto____7421) {
          return or__3824__auto____7421
        }else {
          throw cljs.core.missing_protocol.call(null, "IBuildTerm.-build-term", u);
        }
      }
    }().call(null, u, s)
  }
};
cljs.core.logic.IBind = {};
cljs.core.logic._bind = function _bind(this$, g) {
  if(function() {
    var and__3822__auto____7426 = this$;
    if(and__3822__auto____7426) {
      return this$.cljs$core$logic$IBind$_bind$arity$2
    }else {
      return and__3822__auto____7426
    }
  }()) {
    return this$.cljs$core$logic$IBind$_bind$arity$2(this$, g)
  }else {
    var x__2410__auto____7427 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7428 = cljs.core.logic._bind[goog.typeOf(x__2410__auto____7427)];
      if(or__3824__auto____7428) {
        return or__3824__auto____7428
      }else {
        var or__3824__auto____7429 = cljs.core.logic._bind["_"];
        if(or__3824__auto____7429) {
          return or__3824__auto____7429
        }else {
          throw cljs.core.missing_protocol.call(null, "IBind.-bind", this$);
        }
      }
    }().call(null, this$, g)
  }
};
cljs.core.logic.IMPlus = {};
cljs.core.logic._mplus = function _mplus(a, f) {
  if(function() {
    var and__3822__auto____7434 = a;
    if(and__3822__auto____7434) {
      return a.cljs$core$logic$IMPlus$_mplus$arity$2
    }else {
      return and__3822__auto____7434
    }
  }()) {
    return a.cljs$core$logic$IMPlus$_mplus$arity$2(a, f)
  }else {
    var x__2410__auto____7435 = a == null ? null : a;
    return function() {
      var or__3824__auto____7436 = cljs.core.logic._mplus[goog.typeOf(x__2410__auto____7435)];
      if(or__3824__auto____7436) {
        return or__3824__auto____7436
      }else {
        var or__3824__auto____7437 = cljs.core.logic._mplus["_"];
        if(or__3824__auto____7437) {
          return or__3824__auto____7437
        }else {
          throw cljs.core.missing_protocol.call(null, "IMPlus.-mplus", a);
        }
      }
    }().call(null, a, f)
  }
};
cljs.core.logic.ITake = {};
cljs.core.logic._take_STAR_ = function _take_STAR_(a) {
  if(function() {
    var and__3822__auto____7442 = a;
    if(and__3822__auto____7442) {
      return a.cljs$core$logic$ITake$_take_STAR_$arity$1
    }else {
      return and__3822__auto____7442
    }
  }()) {
    return a.cljs$core$logic$ITake$_take_STAR_$arity$1(a)
  }else {
    var x__2410__auto____7443 = a == null ? null : a;
    return function() {
      var or__3824__auto____7444 = cljs.core.logic._take_STAR_[goog.typeOf(x__2410__auto____7443)];
      if(or__3824__auto____7444) {
        return or__3824__auto____7444
      }else {
        var or__3824__auto____7445 = cljs.core.logic._take_STAR_["_"];
        if(or__3824__auto____7445) {
          return or__3824__auto____7445
        }else {
          throw cljs.core.missing_protocol.call(null, "ITake.-take*", a);
        }
      }
    }().call(null, a)
  }
};
cljs.core.logic.IPair = {};
cljs.core.logic._lhs = function _lhs(this$) {
  if(function() {
    var and__3822__auto____7450 = this$;
    if(and__3822__auto____7450) {
      return this$.cljs$core$logic$IPair$_lhs$arity$1
    }else {
      return and__3822__auto____7450
    }
  }()) {
    return this$.cljs$core$logic$IPair$_lhs$arity$1(this$)
  }else {
    var x__2410__auto____7451 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7452 = cljs.core.logic._lhs[goog.typeOf(x__2410__auto____7451)];
      if(or__3824__auto____7452) {
        return or__3824__auto____7452
      }else {
        var or__3824__auto____7453 = cljs.core.logic._lhs["_"];
        if(or__3824__auto____7453) {
          return or__3824__auto____7453
        }else {
          throw cljs.core.missing_protocol.call(null, "IPair.-lhs", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic._rhs = function _rhs(this$) {
  if(function() {
    var and__3822__auto____7458 = this$;
    if(and__3822__auto____7458) {
      return this$.cljs$core$logic$IPair$_rhs$arity$1
    }else {
      return and__3822__auto____7458
    }
  }()) {
    return this$.cljs$core$logic$IPair$_rhs$arity$1(this$)
  }else {
    var x__2410__auto____7459 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7460 = cljs.core.logic._rhs[goog.typeOf(x__2410__auto____7459)];
      if(or__3824__auto____7460) {
        return or__3824__auto____7460
      }else {
        var or__3824__auto____7461 = cljs.core.logic._rhs["_"];
        if(or__3824__auto____7461) {
          return or__3824__auto____7461
        }else {
          throw cljs.core.missing_protocol.call(null, "IPair.-rhs", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic.Pair = function(lhs, rhs) {
  this.lhs = lhs;
  this.rhs = rhs;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 538968082
};
cljs.core.logic.Pair.cljs$lang$type = true;
cljs.core.logic.Pair.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core.logic/Pair")
};
cljs.core.logic.Pair.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, options) {
  var this__7462 = this;
  return cljs.core.list.call(null, "(", [cljs.core.str(this__7462.lhs)].join(""), " . ", [cljs.core.str(this__7462.rhs)].join(""), ")")
};
cljs.core.logic.Pair.prototype.cljs$core$logic$IPair$ = true;
cljs.core.logic.Pair.prototype.cljs$core$logic$IPair$_lhs$arity$1 = function(_) {
  var this__7463 = this;
  return this__7463.lhs
};
cljs.core.logic.Pair.prototype.cljs$core$logic$IPair$_rhs$arity$1 = function(_) {
  var this__7464 = this;
  return this__7464.rhs
};
cljs.core.logic.Pair.prototype.cljs$core$IIndexed$_nth$arity$2 = function(_, i) {
  var this__7465 = this;
  var pred__7466__7469 = cljs.core._EQ_;
  var expr__7467__7470 = i;
  if(pred__7466__7469.call(null, 0, expr__7467__7470)) {
    return this__7465.lhs
  }else {
    if(pred__7466__7469.call(null, 1, expr__7467__7470)) {
      return this__7465.rhs
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.logic.Pair.prototype.cljs$core$IIndexed$_nth$arity$3 = function(_, i, not_found) {
  var this__7471 = this;
  var pred__7472__7475 = cljs.core._EQ_;
  var expr__7473__7476 = i;
  if(pred__7472__7475.call(null, 0, expr__7473__7476)) {
    return this__7471.lhs
  }else {
    if(pred__7472__7475.call(null, 1, expr__7473__7476)) {
      return this__7471.rhs
    }else {
      return not_found
    }
  }
};
cljs.core.logic.Pair.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__7477 = this;
  return 2
};
cljs.core.logic.Pair.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this__7478 = this;
  var and__3822__auto____7479 = cljs.core._EQ_.call(null, this__7478.lhs, other.lhs);
  if(and__3822__auto____7479) {
    return cljs.core._EQ_.call(null, this__7478.rhs, other.rhs)
  }else {
    return and__3822__auto____7479
  }
};
cljs.core.logic.Pair;
cljs.core.logic.pair = function pair(lhs, rhs) {
  return new cljs.core.logic.Pair(lhs, rhs)
};
cljs.core.logic.ISubstitutions = {};
cljs.core.logic._occurs_check = function _occurs_check(this$, u, v) {
  if(function() {
    var and__3822__auto____7484 = this$;
    if(and__3822__auto____7484) {
      return this$.cljs$core$logic$ISubstitutions$_occurs_check$arity$3
    }else {
      return and__3822__auto____7484
    }
  }()) {
    return this$.cljs$core$logic$ISubstitutions$_occurs_check$arity$3(this$, u, v)
  }else {
    var x__2410__auto____7485 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7486 = cljs.core.logic._occurs_check[goog.typeOf(x__2410__auto____7485)];
      if(or__3824__auto____7486) {
        return or__3824__auto____7486
      }else {
        var or__3824__auto____7487 = cljs.core.logic._occurs_check["_"];
        if(or__3824__auto____7487) {
          return or__3824__auto____7487
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.-occurs-check", this$);
        }
      }
    }().call(null, this$, u, v)
  }
};
cljs.core.logic._ext = function _ext(this$, u, v) {
  if(function() {
    var and__3822__auto____7492 = this$;
    if(and__3822__auto____7492) {
      return this$.cljs$core$logic$ISubstitutions$_ext$arity$3
    }else {
      return and__3822__auto____7492
    }
  }()) {
    return this$.cljs$core$logic$ISubstitutions$_ext$arity$3(this$, u, v)
  }else {
    var x__2410__auto____7493 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7494 = cljs.core.logic._ext[goog.typeOf(x__2410__auto____7493)];
      if(or__3824__auto____7494) {
        return or__3824__auto____7494
      }else {
        var or__3824__auto____7495 = cljs.core.logic._ext["_"];
        if(or__3824__auto____7495) {
          return or__3824__auto____7495
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.-ext", this$);
        }
      }
    }().call(null, this$, u, v)
  }
};
cljs.core.logic._ext_no_check = function _ext_no_check(this$, u, v) {
  if(function() {
    var and__3822__auto____7500 = this$;
    if(and__3822__auto____7500) {
      return this$.cljs$core$logic$ISubstitutions$_ext_no_check$arity$3
    }else {
      return and__3822__auto____7500
    }
  }()) {
    return this$.cljs$core$logic$ISubstitutions$_ext_no_check$arity$3(this$, u, v)
  }else {
    var x__2410__auto____7501 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7502 = cljs.core.logic._ext_no_check[goog.typeOf(x__2410__auto____7501)];
      if(or__3824__auto____7502) {
        return or__3824__auto____7502
      }else {
        var or__3824__auto____7503 = cljs.core.logic._ext_no_check["_"];
        if(or__3824__auto____7503) {
          return or__3824__auto____7503
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.-ext-no-check", this$);
        }
      }
    }().call(null, this$, u, v)
  }
};
cljs.core.logic._walk = function _walk(this$, v) {
  if(function() {
    var and__3822__auto____7508 = this$;
    if(and__3822__auto____7508) {
      return this$.cljs$core$logic$ISubstitutions$_walk$arity$2
    }else {
      return and__3822__auto____7508
    }
  }()) {
    return this$.cljs$core$logic$ISubstitutions$_walk$arity$2(this$, v)
  }else {
    var x__2410__auto____7509 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7510 = cljs.core.logic._walk[goog.typeOf(x__2410__auto____7509)];
      if(or__3824__auto____7510) {
        return or__3824__auto____7510
      }else {
        var or__3824__auto____7511 = cljs.core.logic._walk["_"];
        if(or__3824__auto____7511) {
          return or__3824__auto____7511
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.-walk", this$);
        }
      }
    }().call(null, this$, v)
  }
};
cljs.core.logic._walk_STAR_ = function _walk_STAR_(this$, v) {
  if(function() {
    var and__3822__auto____7516 = this$;
    if(and__3822__auto____7516) {
      return this$.cljs$core$logic$ISubstitutions$_walk_STAR_$arity$2
    }else {
      return and__3822__auto____7516
    }
  }()) {
    return this$.cljs$core$logic$ISubstitutions$_walk_STAR_$arity$2(this$, v)
  }else {
    var x__2410__auto____7517 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7518 = cljs.core.logic._walk_STAR_[goog.typeOf(x__2410__auto____7517)];
      if(or__3824__auto____7518) {
        return or__3824__auto____7518
      }else {
        var or__3824__auto____7519 = cljs.core.logic._walk_STAR_["_"];
        if(or__3824__auto____7519) {
          return or__3824__auto____7519
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.-walk*", this$);
        }
      }
    }().call(null, this$, v)
  }
};
cljs.core.logic._unify = function _unify(this$, u, v) {
  if(function() {
    var and__3822__auto____7524 = this$;
    if(and__3822__auto____7524) {
      return this$.cljs$core$logic$ISubstitutions$_unify$arity$3
    }else {
      return and__3822__auto____7524
    }
  }()) {
    return this$.cljs$core$logic$ISubstitutions$_unify$arity$3(this$, u, v)
  }else {
    var x__2410__auto____7525 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7526 = cljs.core.logic._unify[goog.typeOf(x__2410__auto____7525)];
      if(or__3824__auto____7526) {
        return or__3824__auto____7526
      }else {
        var or__3824__auto____7527 = cljs.core.logic._unify["_"];
        if(or__3824__auto____7527) {
          return or__3824__auto____7527
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.-unify", this$);
        }
      }
    }().call(null, this$, u, v)
  }
};
cljs.core.logic._reify_lvar_name = function _reify_lvar_name(_) {
  if(function() {
    var and__3822__auto____7532 = _;
    if(and__3822__auto____7532) {
      return _.cljs$core$logic$ISubstitutions$_reify_lvar_name$arity$1
    }else {
      return and__3822__auto____7532
    }
  }()) {
    return _.cljs$core$logic$ISubstitutions$_reify_lvar_name$arity$1(_)
  }else {
    var x__2410__auto____7533 = _ == null ? null : _;
    return function() {
      var or__3824__auto____7534 = cljs.core.logic._reify_lvar_name[goog.typeOf(x__2410__auto____7533)];
      if(or__3824__auto____7534) {
        return or__3824__auto____7534
      }else {
        var or__3824__auto____7535 = cljs.core.logic._reify_lvar_name["_"];
        if(or__3824__auto____7535) {
          return or__3824__auto____7535
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.-reify-lvar-name", _);
        }
      }
    }().call(null, _)
  }
};
cljs.core.logic._reify_STAR_ = function _reify_STAR_(this$, v) {
  if(function() {
    var and__3822__auto____7540 = this$;
    if(and__3822__auto____7540) {
      return this$.cljs$core$logic$ISubstitutions$_reify_STAR_$arity$2
    }else {
      return and__3822__auto____7540
    }
  }()) {
    return this$.cljs$core$logic$ISubstitutions$_reify_STAR_$arity$2(this$, v)
  }else {
    var x__2410__auto____7541 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7542 = cljs.core.logic._reify_STAR_[goog.typeOf(x__2410__auto____7541)];
      if(or__3824__auto____7542) {
        return or__3824__auto____7542
      }else {
        var or__3824__auto____7543 = cljs.core.logic._reify_STAR_["_"];
        if(or__3824__auto____7543) {
          return or__3824__auto____7543
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.-reify*", this$);
        }
      }
    }().call(null, this$, v)
  }
};
cljs.core.logic._reify = function _reify(this$, v) {
  if(function() {
    var and__3822__auto____7548 = this$;
    if(and__3822__auto____7548) {
      return this$.cljs$core$logic$ISubstitutions$_reify$arity$2
    }else {
      return and__3822__auto____7548
    }
  }()) {
    return this$.cljs$core$logic$ISubstitutions$_reify$arity$2(this$, v)
  }else {
    var x__2410__auto____7549 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7550 = cljs.core.logic._reify[goog.typeOf(x__2410__auto____7549)];
      if(or__3824__auto____7550) {
        return or__3824__auto____7550
      }else {
        var or__3824__auto____7551 = cljs.core.logic._reify["_"];
        if(or__3824__auto____7551) {
          return or__3824__auto____7551
        }else {
          throw cljs.core.missing_protocol.call(null, "ISubstitutions.-reify", this$);
        }
      }
    }().call(null, this$, v)
  }
};
cljs.core.logic.not_found = {};
cljs.core.logic.assq = function assq(k, xs) {
  var xs__7555 = cljs.core._seq.call(null, xs);
  while(true) {
    if(xs__7555 == null) {
      return cljs.core.logic.not_found
    }else {
      var x__7556 = cljs.core._first.call(null, xs__7555);
      var lhs__7557 = x__7556.lhs;
      if(k === lhs__7557) {
        return x__7556.rhs
      }else {
        var G__7558 = cljs.core._next.call(null, xs__7555);
        xs__7555 = G__7558;
        continue
      }
    }
    break
  }
};
cljs.core.logic.Substitutions = function(s) {
  this.s = s;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 538968064
};
cljs.core.logic.Substitutions.cljs$lang$type = true;
cljs.core.logic.Substitutions.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core.logic/Substitutions")
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ITake$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ITake$_take_STAR_$arity$1 = function(this$) {
  var this__7559 = this;
  return this$
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$IMPlus$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$IMPlus$_mplus$arity$2 = function(this$, f) {
  var this__7560 = this;
  return cljs.core.logic.choice.call(null, this$, f)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$IBind$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$IBind$_bind$arity$2 = function(this$, g) {
  var this__7561 = this;
  return g.call(null, this$)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ISubstitutions$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ISubstitutions$_walk$arity$2 = function(this$, v) {
  var this__7562 = this;
  if(cljs.core.logic.lvar_QMARK_.call(null, v)) {
    var rhs__7563 = cljs.core.logic.assq.call(null, v, this__7562.s);
    var vp__7564 = this$.cljs$core$logic$ISubstitutions$_walk$arity$2(this$, rhs__7563);
    if(cljs.core.logic.not_found === vp__7564) {
      return v
    }else {
      return vp__7564
    }
  }else {
    if("\ufdd0'else") {
      return v
    }else {
      return null
    }
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ISubstitutions$_reify_STAR_$arity$2 = function(this$, v) {
  var this__7565 = this;
  var v__7566 = this$.cljs$core$logic$ISubstitutions$_walk$arity$2(this$, v);
  return cljs.core.logic._reify_term.call(null, v__7566, this$)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ISubstitutions$_walk_STAR_$arity$2 = function(this$, v) {
  var this__7567 = this;
  var v__7568 = this$.cljs$core$logic$ISubstitutions$_walk$arity$2(this$, v);
  return cljs.core.logic._walk_term.call(null, v__7568, this$)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ISubstitutions$_reify_lvar_name$arity$1 = function(this$) {
  var this__7569 = this;
  return cljs.core.symbol.call(null, [cljs.core.str("_."), cljs.core.str(cljs.core.count.call(null, this__7569.s))].join(""))
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ISubstitutions$_reify$arity$2 = function(this$, v) {
  var this__7570 = this;
  var v__7571 = this$.cljs$core$logic$ISubstitutions$_walk_STAR_$arity$2(this$, v);
  return cljs.core.logic._walk_STAR_.call(null, cljs.core.logic._reify_STAR_.call(null, cljs.core.logic.empty_s, v__7571), v__7571)
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ISubstitutions$_unify$arity$3 = function(this$, u, v) {
  var this__7572 = this;
  if(u === v) {
    return this$
  }else {
    var u__7573 = this$.cljs$core$logic$ISubstitutions$_walk$arity$2(this$, u);
    var v__7574 = this$.cljs$core$logic$ISubstitutions$_walk$arity$2(this$, v);
    if(u__7573 === v__7574) {
      return this$
    }else {
      return cljs.core.logic._unify_terms.call(null, u__7573, v__7574, this$)
    }
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ISubstitutions$_ext$arity$3 = function(this$, u, v) {
  var this__7575 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____7576 = cljs.core.logic._STAR_occurs_check_STAR_;
    if(cljs.core.truth_(and__3822__auto____7576)) {
      return this$.cljs$core$logic$ISubstitutions$_occurs_check$arity$3(this$, u, v)
    }else {
      return and__3822__auto____7576
    }
  }())) {
    return null
  }else {
    return this$.cljs$core$logic$ISubstitutions$_ext_no_check$arity$3(this$, u, v)
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ISubstitutions$_ext_no_check$arity$3 = function(this$, u, v) {
  var this__7577 = this;
  return new cljs.core.logic.Substitutions(cljs.core.conj.call(null, this__7577.s, new cljs.core.logic.Pair(u, v)))
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$ISubstitutions$_occurs_check$arity$3 = function(this$, u, v) {
  var this__7578 = this;
  var v__7579 = this$.cljs$core$logic$ISubstitutions$_walk$arity$2(this$, v);
  return cljs.core.logic._occurs_check_term.call(null, v__7579, u, this$)
};
cljs.core.logic.Substitutions.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this$, opts) {
  var this__7580 = this;
  return cljs.core._pr_seq.call(null, this__7580.s, opts)
};
cljs.core.logic.Substitutions.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, o) {
  var this__7581 = this;
  var or__3824__auto____7582 = this$ === o;
  if(or__3824__auto____7582) {
    return or__3824__auto____7582
  }else {
    var and__3822__auto____7583 = cljs.core.instance_QMARK_.call(null, cljs.core.logic.Substitutions, o);
    if(and__3822__auto____7583) {
      return cljs.core._EQ_.call(null, this__7581.s, o.s)
    }else {
      return and__3822__auto____7583
    }
  }
};
cljs.core.logic.Substitutions;
cljs.core.logic.make_s = function make_s(s) {
  return new cljs.core.logic.Substitutions(s)
};
cljs.core.logic.empty_s = cljs.core.logic.make_s.call(null, cljs.core.List.EMPTY);
cljs.core.logic.subst_QMARK_ = function subst_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.logic.Substitutions, x)
};
cljs.core.logic.to_s = function to_s(v) {
  var s__7595 = cljs.core.reduce.call(null, function(l, p__7590) {
    var vec__7591__7592 = p__7590;
    var k__7593 = cljs.core.nth.call(null, vec__7591__7592, 0, null);
    var v__7594 = cljs.core.nth.call(null, vec__7591__7592, 1, null);
    return cljs.core.cons.call(null, cljs.core.logic.pair.call(null, k__7593, v__7594), l)
  }, cljs.core.List.EMPTY, v);
  return cljs.core.logic.make_s.call(null, s__7595)
};
cljs.core.logic.LVar = function(name, meta) {
  this.name = name;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543555584
};
cljs.core.logic.LVar.cljs$lang$type = true;
cljs.core.logic.LVar.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core.logic/LVar")
};
cljs.core.logic.LVar.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__7596 = this;
  return cljs.core._hash.call(null, this__7596.name)
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithLVar$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithLVar$_unify_with_lvar$arity$3 = function(v, u, s) {
  var this__7597 = this;
  return cljs.core.logic._ext_no_check.call(null, s, u, v)
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithSequential$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithSequential$_unify_with_seq$arity$3 = function(v, u, s) {
  var this__7598 = this;
  return cljs.core.logic._ext.call(null, s, v, u)
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IReifyTerm$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IReifyTerm$_reify_term$arity$2 = function(v, s) {
  var this__7599 = this;
  return cljs.core.logic._ext.call(null, s, v, cljs.core.logic._reify_lvar_name.call(null, s))
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyTerms$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyTerms$_unify_terms$arity$3 = function(u, v, s) {
  var this__7600 = this;
  return cljs.core.logic._unify_with_lvar.call(null, v, u, s)
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithNil$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithNil$_unify_with_nil$arity$3 = function(v, u, s) {
  var this__7601 = this;
  return cljs.core.logic._ext_no_check.call(null, s, v, u)
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithMap$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithMap$_unify_with_map$arity$3 = function(v, u, s) {
  var this__7602 = this;
  return cljs.core.logic._ext.call(null, s, v, u)
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IOccursCheckTerm$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IOccursCheckTerm$_occurs_check_term$arity$3 = function(v, x, s) {
  var this__7603 = this;
  return cljs.core._EQ_.call(null, cljs.core.logic._walk.call(null, s, v), x)
};
cljs.core.logic.LVar.prototype.toString = function() {
  var this__7604 = this;
  var this__7605 = this;
  return cljs.core.pr_str.call(null, this__7605)
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithSet$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithSet$_unify_with_set$arity$3 = function(v, u, s) {
  var this__7606 = this;
  return cljs.core.logic._ext.call(null, s, v, u)
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IWalkTerm$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IWalkTerm$_walk_term$arity$2 = function(v, s) {
  var this__7607 = this;
  return v
};
cljs.core.logic.LVar.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_, opts) {
  var this__7608 = this;
  return cljs.core.list.call(null, "<lvar:", [cljs.core.str(this__7608.name)].join(""), ">")
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithObject$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithObject$_unify_with_object$arity$3 = function(v, u, s) {
  var this__7609 = this;
  return cljs.core.logic._ext.call(null, s, v, u)
};
cljs.core.logic.LVar.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, o) {
  var this__7610 = this;
  var and__3822__auto____7611 = cljs.core.instance_QMARK_.call(null, cljs.core.logic.LVar, o);
  if(and__3822__auto____7611) {
    var o__7612 = o;
    return this__7610.name === o__7612.name
  }else {
    return and__3822__auto____7611
  }
};
cljs.core.logic.LVar.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var this__7613 = this;
  return new cljs.core.logic.LVar(this__7613.name, this__7613.meta)
};
cljs.core.logic.LVar.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var this__7614 = this;
  return this__7614.meta
};
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithLSeq$ = true;
cljs.core.logic.LVar.prototype.cljs$core$logic$IUnifyWithLSeq$_unify_with_lseq$arity$3 = function(v, u, s) {
  var this__7615 = this;
  return cljs.core.logic._ext.call(null, s, v, u)
};
cljs.core.logic.LVar;
cljs.core.logic.lvar_sym_counter = cljs.core.atom.call(null, 0);
cljs.core.logic.lvar = function() {
  var lvar = null;
  var lvar__0 = function() {
    return lvar.call(null, "\ufdd1'gen")
  };
  var lvar__1 = function(name) {
    var name__7617 = name.substring(2, name.length) + "_" + cljs.core.swap_BANG_.call(null, cljs.core.logic.lvar_sym_counter, cljs.core.inc);
    return new cljs.core.logic.LVar(name__7617, null)
  };
  lvar = function(name) {
    switch(arguments.length) {
      case 0:
        return lvar__0.call(this);
      case 1:
        return lvar__1.call(this, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lvar.cljs$lang$arity$0 = lvar__0;
  lvar.cljs$lang$arity$1 = lvar__1;
  return lvar
}();
cljs.core.logic.lvar_QMARK_ = function lvar_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.logic.LVar, x)
};
cljs.core.logic.LConsSeq = {};
cljs.core.logic._lfirst = function _lfirst(this$) {
  if(function() {
    var and__3822__auto____7622 = this$;
    if(and__3822__auto____7622) {
      return this$.cljs$core$logic$LConsSeq$_lfirst$arity$1
    }else {
      return and__3822__auto____7622
    }
  }()) {
    return this$.cljs$core$logic$LConsSeq$_lfirst$arity$1(this$)
  }else {
    var x__2410__auto____7623 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7624 = cljs.core.logic._lfirst[goog.typeOf(x__2410__auto____7623)];
      if(or__3824__auto____7624) {
        return or__3824__auto____7624
      }else {
        var or__3824__auto____7625 = cljs.core.logic._lfirst["_"];
        if(or__3824__auto____7625) {
          return or__3824__auto____7625
        }else {
          throw cljs.core.missing_protocol.call(null, "LConsSeq.-lfirst", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic._lnext = function _lnext(this$) {
  if(function() {
    var and__3822__auto____7630 = this$;
    if(and__3822__auto____7630) {
      return this$.cljs$core$logic$LConsSeq$_lnext$arity$1
    }else {
      return and__3822__auto____7630
    }
  }()) {
    return this$.cljs$core$logic$LConsSeq$_lnext$arity$1(this$)
  }else {
    var x__2410__auto____7631 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7632 = cljs.core.logic._lnext[goog.typeOf(x__2410__auto____7631)];
      if(or__3824__auto____7632) {
        return or__3824__auto____7632
      }else {
        var or__3824__auto____7633 = cljs.core.logic._lnext["_"];
        if(or__3824__auto____7633) {
          return or__3824__auto____7633
        }else {
          throw cljs.core.missing_protocol.call(null, "LConsSeq.-lnext", this$);
        }
      }
    }().call(null, this$)
  }
};
cljs.core.logic.lcons_pr_seq = function lcons_pr_seq(x) {
  if(cljs.core.logic.lcons_QMARK_.call(null, x)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, cljs.core.logic._lfirst.call(null, x), lcons_pr_seq.call(null, cljs.core.logic._lnext.call(null, x)))
    }, null)
  }else {
    if("\ufdd0'else") {
      return cljs.core.list.call(null, "\ufdd1'.", x)
    }else {
      return null
    }
  }
};
cljs.core.logic.LCons = function(a, d, meta) {
  this.a = a;
  this.d = d;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 539361280
};
cljs.core.logic.LCons.cljs$lang$type = true;
cljs.core.logic.LCons.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core.logic/LCons")
};
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithSequential$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithSequential$_unify_with_seq$arity$3 = function(v, u, s) {
  var this__7634 = this;
  return cljs.core.logic._unify_with_lseq.call(null, u, v, s)
};
cljs.core.logic.LCons.prototype.cljs$core$logic$IReifyTerm$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$IReifyTerm$_reify_term$arity$2 = function(v, s) {
  var this__7635 = this;
  var v__7636 = v;
  var s__7637 = s;
  while(true) {
    if(cljs.core.logic.lcons_QMARK_.call(null, v__7636)) {
      var G__7672 = v__7636.cljs$core$logic$LConsSeq$_lnext$arity$1(v__7636);
      var G__7673 = cljs.core.logic._reify_STAR_.call(null, s__7637, v__7636.cljs$core$logic$LConsSeq$_lfirst$arity$1(v__7636));
      v__7636 = G__7672;
      s__7637 = G__7673;
      continue
    }else {
      return cljs.core.logic._reify_STAR_.call(null, s__7637, v__7636)
    }
    break
  }
};
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyTerms$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyTerms$_unify_terms$arity$3 = function(u, v, s) {
  var this__7638 = this;
  return cljs.core.logic._unify_with_lseq.call(null, v, u, s)
};
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithNil$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithNil$_unify_with_nil$arity$3 = function(v, u, s) {
  var this__7639 = this;
  return false
};
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithMap$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithMap$_unify_with_map$arity$3 = function(v, u, s) {
  var this__7640 = this;
  return false
};
cljs.core.logic.LCons.prototype.cljs$core$logic$IOccursCheckTerm$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$IOccursCheckTerm$_occurs_check_term$arity$3 = function(v, x, s) {
  var this__7641 = this;
  var v__7642 = v;
  var x__7643 = x;
  var s__7644 = s;
  while(true) {
    if(cljs.core.logic.lcons_QMARK_.call(null, v__7642)) {
      var or__3824__auto____7645 = cljs.core.logic._occurs_check.call(null, s__7644, x__7643, v__7642.cljs$core$logic$LConsSeq$_lfirst$arity$1(v__7642));
      if(cljs.core.truth_(or__3824__auto____7645)) {
        return or__3824__auto____7645
      }else {
        var G__7674 = v__7642.cljs$core$logic$LConsSeq$_lnext$arity$1(v__7642);
        var G__7675 = x__7643;
        var G__7676 = s__7644;
        v__7642 = G__7674;
        x__7643 = G__7675;
        s__7644 = G__7676;
        continue
      }
    }else {
      return cljs.core.logic._occurs_check.call(null, s__7644, x__7643, v__7642)
    }
    break
  }
};
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithSet$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithSet$_unify_with_set$arity$3 = function(v, u, s) {
  var this__7646 = this;
  return false
};
cljs.core.logic.LCons.prototype.cljs$core$logic$IWalkTerm$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$IWalkTerm$_walk_term$arity$2 = function(v, s) {
  var this__7647 = this;
  return cljs.core.logic.lcons.call(null, cljs.core.logic._walk_STAR_.call(null, s, v.cljs$core$logic$LConsSeq$_lfirst$arity$1(v)), cljs.core.logic._walk_STAR_.call(null, s, v.cljs$core$logic$LConsSeq$_lnext$arity$1(v)))
};
cljs.core.logic.LCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this$, opts) {
  var this__7648 = this;
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, cljs.core.logic.lcons_pr_seq.call(null, this$))
};
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithObject$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithObject$_unify_with_object$arity$3 = function(v, u, s) {
  var this__7649 = this;
  return false
};
cljs.core.logic.LCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, o) {
  var this__7650 = this;
  var or__3824__auto____7651 = this$ === o;
  if(or__3824__auto____7651) {
    return or__3824__auto____7651
  }else {
    var and__3822__auto____7652 = cljs.core.instance_QMARK_.call(null, cljs.core.logic.LCons, o);
    if(and__3822__auto____7652) {
      var me__7653 = this$;
      var you__7654 = o;
      while(true) {
        if(me__7653 == null) {
          return you__7654 == null
        }else {
          if(cljs.core.logic.lvar_QMARK_.call(null, me__7653)) {
            return true
          }else {
            if(cljs.core.logic.lvar_QMARK_.call(null, you__7654)) {
              return true
            }else {
              if(function() {
                var and__3822__auto____7655 = cljs.core.logic.lcons_QMARK_.call(null, me__7653);
                if(and__3822__auto____7655) {
                  return cljs.core.logic.lcons_QMARK_.call(null, you__7654)
                }else {
                  return and__3822__auto____7655
                }
              }()) {
                var mef__7656 = me__7653.cljs$core$logic$LConsSeq$_lfirst$arity$1(me__7653);
                var youf__7657 = cljs.core.logic._lfirst.call(null, you__7654);
                var and__3822__auto____7660 = function() {
                  var or__3824__auto____7658 = cljs.core._EQ_.call(null, mef__7656, youf__7657);
                  if(or__3824__auto____7658) {
                    return or__3824__auto____7658
                  }else {
                    var or__3824__auto____7659 = cljs.core.logic.lvar_QMARK_.call(null, mef__7656);
                    if(or__3824__auto____7659) {
                      return or__3824__auto____7659
                    }else {
                      return cljs.core.logic.lvar_QMARK_.call(null, youf__7657)
                    }
                  }
                }();
                if(cljs.core.truth_(and__3822__auto____7660)) {
                  var G__7677 = me__7653.cljs$core$logic$LConsSeq$_lnext$arity$1(me__7653);
                  var G__7678 = cljs.core.logic._lnext.call(null, you__7654);
                  me__7653 = G__7677;
                  you__7654 = G__7678;
                  continue
                }else {
                  return and__3822__auto____7660
                }
              }else {
                if("\ufdd0'else") {
                  return cljs.core._EQ_.call(null, me__7653, you__7654)
                }else {
                  return null
                }
              }
            }
          }
        }
        break
      }
    }else {
      return and__3822__auto____7652
    }
  }
};
cljs.core.logic.LCons.prototype.cljs$core$IWithMeta$_withMeta$arity$2 = function(this$, new_meta) {
  var this__7661 = this;
  return new cljs.core.logic.LCons(this__7661.a, this__7661.d, new_meta)
};
cljs.core.logic.LCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var this__7662 = this;
  return this__7662.meta
};
cljs.core.logic.LCons.prototype.cljs$core$logic$LConsSeq$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$LConsSeq$_lfirst$arity$1 = function(_) {
  var this__7663 = this;
  return this__7663.a
};
cljs.core.logic.LCons.prototype.cljs$core$logic$LConsSeq$_lnext$arity$1 = function(_) {
  var this__7664 = this;
  return this__7664.d
};
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithLSeq$ = true;
cljs.core.logic.LCons.prototype.cljs$core$logic$IUnifyWithLSeq$_unify_with_lseq$arity$3 = function(v, u, s) {
  var this__7665 = this;
  var u__7666 = u;
  var v__7667 = v;
  var s__7668 = s;
  while(true) {
    if(cljs.core.logic.lvar_QMARK_.call(null, u__7666)) {
      return cljs.core.logic._unify.call(null, s__7668, u__7666, v__7667)
    }else {
      if(cljs.core.logic.lvar_QMARK_.call(null, v__7667)) {
        return cljs.core.logic._unify.call(null, s__7668, v__7667, u__7666)
      }else {
        if(function() {
          var and__3822__auto____7669 = cljs.core.logic.lcons_QMARK_.call(null, u__7666);
          if(and__3822__auto____7669) {
            return cljs.core.logic.lcons_QMARK_.call(null, v__7667)
          }else {
            return and__3822__auto____7669
          }
        }()) {
          var temp__3971__auto____7670 = cljs.core.logic._unify.call(null, s__7668, cljs.core.logic._lfirst.call(null, u__7666), v__7667.cljs$core$logic$LConsSeq$_lfirst$arity$1(v__7667));
          if(cljs.core.truth_(temp__3971__auto____7670)) {
            var s__7671 = temp__3971__auto____7670;
            var G__7679 = cljs.core.logic._lnext.call(null, u__7666);
            var G__7680 = v__7667.cljs$core$logic$LConsSeq$_lnext$arity$1(v__7667);
            var G__7681 = s__7671;
            u__7666 = G__7679;
            v__7667 = G__7680;
            s__7668 = G__7681;
            continue
          }else {
            return false
          }
        }else {
          if("\ufdd0'else") {
            return cljs.core.logic._unify.call(null, s__7668, u__7666, v__7667)
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.core.logic.LCons;
cljs.core.logic.lcons = function lcons(a, d) {
  if(function() {
    var or__3824__auto____7683 = cljs.core.coll_QMARK_.call(null, d);
    if(or__3824__auto____7683) {
      return or__3824__auto____7683
    }else {
      return d == null
    }
  }()) {
    return cljs.core.cons.call(null, a, cljs.core.seq.call(null, d))
  }else {
    return new cljs.core.logic.LCons(a, d, null)
  }
};
cljs.core.logic.lcons_QMARK_ = function lcons_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.logic.LCons, x)
};
cljs.core.PersistentHashSet.prototype.cljs$core$logic$IUnifyTerms$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$logic$IUnifyTerms$_unify_terms$arity$3 = function(u, v, s) {
  return cljs.core.logic._unify_with_set.call(null, v, u, s)
};
cljs.core.PersistentHashMap.prototype.cljs$core$logic$IUnifyTerms$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$logic$IUnifyTerms$_unify_terms$arity$3 = function(u, v, s) {
  return cljs.core.logic._unify_with_map.call(null, v, u, s)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$logic$IUnifyTerms$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$logic$IUnifyTerms$_unify_terms$arity$3 = function(u, v, s) {
  return cljs.core.logic._unify_with_map.call(null, v, u, s)
};
cljs.core.ObjMap.prototype.cljs$core$logic$IUnifyTerms$ = true;
cljs.core.ObjMap.prototype.cljs$core$logic$IUnifyTerms$_unify_terms$arity$3 = function(u, v, s) {
  return cljs.core.logic._unify_with_map.call(null, v, u, s)
};
cljs.core.logic.IUnifyTerms["_"] = true;
cljs.core.logic._unify_terms["_"] = function(u, v, s) {
  if(cljs.core.sequential_QMARK_.call(null, u)) {
    return cljs.core.logic._unify_with_seq.call(null, v, u, s)
  }else {
    return cljs.core.logic._unify_with_object.call(null, v, u, s)
  }
};
cljs.core.logic.IUnifyTerms["null"] = true;
cljs.core.logic._unify_terms["null"] = function(u, v, s) {
  return cljs.core.logic._unify_with_nil.call(null, v, u, s)
};
cljs.core.logic.IUnifyWithNil["_"] = true;
cljs.core.logic._unify_with_nil["_"] = function(v, u, s) {
  return false
};
cljs.core.logic.IUnifyWithNil["null"] = true;
cljs.core.logic._unify_with_nil["null"] = function(v, u, s) {
  return s
};
cljs.core.logic.IUnifyWithObject["_"] = true;
cljs.core.logic._unify_with_object["_"] = function(v, u, s) {
  if(cljs.core._EQ_.call(null, u, v)) {
    return s
  }else {
    return false
  }
};
cljs.core.logic.IUnifyWithObject["null"] = true;
cljs.core.logic._unify_with_object["null"] = function(v, u, s) {
  return false
};
cljs.core.logic.IUnifyWithLVar["_"] = true;
cljs.core.logic._unify_with_lvar["_"] = function(v, u, s) {
  return cljs.core.logic._ext.call(null, s, u, v)
};
cljs.core.logic.IUnifyWithLVar["null"] = true;
cljs.core.logic._unify_with_lvar["null"] = function(v, u, s) {
  return cljs.core.logic._ext_no_check.call(null, s, u, v)
};
cljs.core.logic.IUnifyWithLSeq["_"] = true;
cljs.core.logic._unify_with_lseq["_"] = function(v, u, s) {
  if(cljs.core.sequential_QMARK_.call(null, v)) {
    var u__7684 = u;
    var v__7685 = v;
    var s__7686 = s;
    while(true) {
      if(cljs.core.seq.call(null, v__7685)) {
        if(cljs.core.logic.lcons_QMARK_.call(null, u__7684)) {
          var temp__3971__auto____7687 = cljs.core.logic._unify.call(null, s__7686, cljs.core.logic._lfirst.call(null, u__7684), cljs.core.first.call(null, v__7685));
          if(cljs.core.truth_(temp__3971__auto____7687)) {
            var s__7688 = temp__3971__auto____7687;
            var G__7689 = cljs.core.logic._lnext.call(null, u__7684);
            var G__7690 = cljs.core.next.call(null, v__7685);
            var G__7691 = s__7688;
            u__7684 = G__7689;
            v__7685 = G__7690;
            s__7686 = G__7691;
            continue
          }else {
            return false
          }
        }else {
          return cljs.core.logic._unify.call(null, s__7686, u__7684, v__7685)
        }
      }else {
        if(cljs.core.logic.lvar_QMARK_.call(null, u__7684)) {
          return cljs.core.logic._unify.call(null, s__7686, u__7684, cljs.core.List.EMPTY)
        }else {
          return false
        }
      }
      break
    }
  }else {
    return false
  }
};
cljs.core.logic.IUnifyWithLSeq["null"] = true;
cljs.core.logic._unify_with_lseq["null"] = function(v, u, s) {
  return false
};
cljs.core.logic.IUnifyWithSequential["_"] = true;
cljs.core.logic._unify_with_seq["_"] = function(v, u, s) {
  if(cljs.core.sequential_QMARK_.call(null, v)) {
    var u__7692 = u;
    var v__7693 = v;
    var s__7694 = s;
    while(true) {
      if(cljs.core.seq.call(null, u__7692)) {
        if(cljs.core.seq.call(null, v__7693)) {
          var temp__3971__auto____7695 = cljs.core.logic._unify.call(null, s__7694, cljs.core.first.call(null, u__7692), cljs.core.first.call(null, v__7693));
          if(cljs.core.truth_(temp__3971__auto____7695)) {
            var s__7696 = temp__3971__auto____7695;
            var G__7697 = cljs.core.next.call(null, u__7692);
            var G__7698 = cljs.core.next.call(null, v__7693);
            var G__7699 = s__7696;
            u__7692 = G__7697;
            v__7693 = G__7698;
            s__7694 = G__7699;
            continue
          }else {
            return false
          }
        }else {
          return false
        }
      }else {
        if(cljs.core.seq.call(null, v__7693)) {
          return false
        }else {
          return s__7694
        }
      }
      break
    }
  }else {
    return false
  }
};
cljs.core.logic.IUnifyWithSequential["null"] = true;
cljs.core.logic._unify_with_seq["null"] = function(v, u, s) {
  return false
};
cljs.core.logic.not_found = {};
cljs.core.logic.unify_with_map_STAR_ = function unify_with_map_STAR_(v, u, s) {
  if(!(cljs.core.count.call(null, v) === cljs.core.count.call(null, u))) {
    return false
  }else {
    var ks__7706 = cljs.core.seq.call(null, cljs.core.keys.call(null, u));
    var s__7707 = s;
    while(true) {
      if(ks__7706) {
        var kf__7708 = cljs.core.first.call(null, ks__7706);
        var vf__7709 = cljs.core._lookup.call(null, v, kf__7708, cljs.core.logic.not_found);
        if(vf__7709 === cljs.core.logic.not_found) {
          return false
        }else {
          var temp__3971__auto____7710 = cljs.core.logic._unify.call(null, s__7707, cljs.core._lookup.call(null, u, kf__7708, null), vf__7709);
          if(cljs.core.truth_(temp__3971__auto____7710)) {
            var s__7711 = temp__3971__auto____7710;
            var G__7712 = cljs.core.next.call(null, ks__7706);
            var G__7713 = s__7711;
            ks__7706 = G__7712;
            s__7707 = G__7713;
            continue
          }else {
            return false
          }
        }
      }else {
        return s__7707
      }
      break
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$logic$IUnifyWithMap$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$logic$IUnifyWithMap$_unify_with_map$arity$3 = function(v, u, s) {
  return cljs.core.logic.unify_with_map_STAR_.call(null, v, u, s)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$logic$IUnifyWithMap$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$logic$IUnifyWithMap$_unify_with_map$arity$3 = function(v, u, s) {
  return cljs.core.logic.unify_with_map_STAR_.call(null, v, u, s)
};
cljs.core.ObjMap.prototype.cljs$core$logic$IUnifyWithMap$ = true;
cljs.core.ObjMap.prototype.cljs$core$logic$IUnifyWithMap$_unify_with_map$arity$3 = function(v, u, s) {
  return cljs.core.logic.unify_with_map_STAR_.call(null, v, u, s)
};
cljs.core.logic.IUnifyWithMap["_"] = true;
cljs.core.logic._unify_with_map["_"] = function(v, u, s) {
  return false
};
cljs.core.logic.IUnifyWithMap["null"] = true;
cljs.core.logic._unify_with_map["null"] = function(v, u, s) {
  return false
};
cljs.core.PersistentHashSet.prototype.cljs$core$logic$IUnifyWithSet$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$logic$IUnifyWithSet$_unify_with_set$arity$3 = function(v, u, s) {
  var u__7714 = u;
  var v__7715 = v;
  var ulvars__7716 = cljs.core.PersistentVector.EMPTY;
  var umissing__7717 = cljs.core.PersistentVector.EMPTY;
  while(true) {
    if(cljs.core.seq.call(null, u__7714)) {
      if(cljs.core.seq.call(null, v__7715)) {
        var uf__7718 = cljs.core.first.call(null, u__7714);
        if(cljs.core.logic.lvar_QMARK_.call(null, uf__7718)) {
          var G__7723 = cljs.core.disj.call(null, u__7714, uf__7718);
          var G__7724 = v__7715;
          var G__7725 = cljs.core.conj.call(null, ulvars__7716, uf__7718);
          var G__7726 = umissing__7717;
          u__7714 = G__7723;
          v__7715 = G__7724;
          ulvars__7716 = G__7725;
          umissing__7717 = G__7726;
          continue
        }else {
          if(cljs.core.contains_QMARK_.call(null, v__7715, uf__7718)) {
            var G__7727 = cljs.core.disj.call(null, u__7714, uf__7718);
            var G__7728 = cljs.core.disj.call(null, v__7715, uf__7718);
            var G__7729 = ulvars__7716;
            var G__7730 = umissing__7717;
            u__7714 = G__7727;
            v__7715 = G__7728;
            ulvars__7716 = G__7729;
            umissing__7717 = G__7730;
            continue
          }else {
            var G__7731 = cljs.core.disj.call(null, u__7714, uf__7718);
            var G__7732 = v__7715;
            var G__7733 = ulvars__7716;
            var G__7734 = cljs.core.conj.call(null, umissing__7717, uf__7718);
            u__7714 = G__7731;
            v__7715 = G__7732;
            ulvars__7716 = G__7733;
            umissing__7717 = G__7734;
            continue
          }
        }
      }else {
        return false
      }
    }else {
      if(cljs.core.seq.call(null, v__7715)) {
        if(cljs.core.seq.call(null, ulvars__7716)) {
          var v__7719 = v__7715;
          var vlvars__7720 = cljs.core.PersistentVector.EMPTY;
          var vmissing__7721 = cljs.core.PersistentVector.EMPTY;
          while(true) {
            if(cljs.core.seq.call(null, v__7719)) {
              var vf__7722 = cljs.core.first.call(null, v__7719);
              if(cljs.core.logic.lvar_QMARK_.call(null, vf__7722)) {
                var G__7735 = cljs.core.disj.call(null, v__7719, vf__7722);
                var G__7736 = cljs.core.conj.call(null, vlvars__7720, vf__7722);
                var G__7737 = vmissing__7721;
                v__7719 = G__7735;
                vlvars__7720 = G__7736;
                vmissing__7721 = G__7737;
                continue
              }else {
                var G__7738 = cljs.core.disj.call(null, v__7719, vf__7722);
                var G__7739 = vlvars__7720;
                var G__7740 = cljs.core.conj.call(null, vmissing__7721, vf__7722);
                v__7719 = G__7738;
                vlvars__7720 = G__7739;
                vmissing__7721 = G__7740;
                continue
              }
            }else {
              return cljs.core.logic._unify.call(null, s, cljs.core.concat.call(null, ulvars__7716, umissing__7717), cljs.core.concat.call(null, vmissing__7721, vlvars__7720))
            }
            break
          }
        }else {
          return false
        }
      }else {
        return s
      }
    }
    break
  }
};
cljs.core.logic.IUnifyWithSet["_"] = true;
cljs.core.logic._unify_with_set["_"] = function(v, u, s) {
  return false
};
cljs.core.logic.IUnifyWithSet["null"] = true;
cljs.core.logic._unify_with_set["null"] = function(v, u, s) {
  return false
};
cljs.core.logic.IReifyTerm["_"] = true;
cljs.core.logic._reify_term["_"] = function(v, s) {
  if(cljs.core.sequential_QMARK_.call(null, v)) {
    var v__7741 = v;
    var s__7742 = s;
    while(true) {
      if(cljs.core.seq.call(null, v__7741)) {
        var G__7743 = cljs.core.next.call(null, v__7741);
        var G__7744 = cljs.core.logic._reify_STAR_.call(null, s__7742, cljs.core.first.call(null, v__7741));
        v__7741 = G__7743;
        s__7742 = G__7744;
        continue
      }else {
        return s__7742
      }
      break
    }
  }else {
    return s
  }
};
cljs.core.logic.IReifyTerm["null"] = true;
cljs.core.logic._reify_term["null"] = function(v, s) {
  return s
};
cljs.core.logic.walk_term_map_STAR_ = function walk_term_map_STAR_(v, s) {
  var v__7752 = v;
  var r__7753 = cljs.core.ObjMap.EMPTY;
  while(true) {
    if(cljs.core.seq.call(null, v__7752)) {
      var vec__7754__7755 = cljs.core.first.call(null, v__7752);
      var vfk__7756 = cljs.core.nth.call(null, vec__7754__7755, 0, null);
      var vfv__7757 = cljs.core.nth.call(null, vec__7754__7755, 1, null);
      var G__7758 = cljs.core.next.call(null, v__7752);
      var G__7759 = cljs.core.assoc.call(null, r__7753, vfk__7756, cljs.core.logic._walk_STAR_.call(null, s, vfv__7757));
      v__7752 = G__7758;
      r__7753 = G__7759;
      continue
    }else {
      return r__7753
    }
    break
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$logic$IWalkTerm$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$logic$IWalkTerm$_walk_term$arity$2 = function(v, s) {
  var v__7760 = v;
  var r__7761 = cljs.core.ObjMap.EMPTY;
  while(true) {
    if(cljs.core.seq.call(null, v__7760)) {
      var G__7764 = cljs.core.next.call(null, v__7760);
      var G__7765 = cljs.core.conj.call(null, r__7761, cljs.core.logic._walk_STAR_.call(null, s, cljs.core.first.call(null, v__7760)));
      v__7760 = G__7764;
      r__7761 = G__7765;
      continue
    }else {
      return r__7761
    }
    break
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$logic$IWalkTerm$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$logic$IWalkTerm$_walk_term$arity$2 = function(v, s) {
  return cljs.core.logic.walk_term_map_STAR_.call(null, v, s)
};
cljs.core.ObjMap.prototype.cljs$core$logic$IWalkTerm$ = true;
cljs.core.ObjMap.prototype.cljs$core$logic$IWalkTerm$_walk_term$arity$2 = function(v, s) {
  return cljs.core.logic.walk_term_map_STAR_.call(null, v, s)
};
cljs.core.PersistentVector.prototype.cljs$core$logic$IWalkTerm$ = true;
cljs.core.PersistentVector.prototype.cljs$core$logic$IWalkTerm$_walk_term$arity$2 = function(v, s) {
  var v__7762 = v;
  var r__7763 = cljs.core.PersistentVector.EMPTY;
  while(true) {
    if(cljs.core.seq.call(null, v__7762)) {
      var G__7766 = cljs.core.next.call(null, v__7762);
      var G__7767 = cljs.core.conj.call(null, r__7763, cljs.core.logic._walk_STAR_.call(null, s, cljs.core.first.call(null, v__7762)));
      v__7762 = G__7766;
      r__7763 = G__7767;
      continue
    }else {
      return r__7763
    }
    break
  }
};
cljs.core.logic.IWalkTerm["_"] = true;
cljs.core.logic._walk_term["_"] = function(v, s) {
  if(cljs.core.sequential_QMARK_.call(null, v)) {
    return cljs.core.map.call(null, function(p1__7745_SHARP_) {
      return cljs.core.logic._walk_STAR_.call(null, s, p1__7745_SHARP_)
    }, v)
  }else {
    return v
  }
};
cljs.core.logic.IWalkTerm["null"] = true;
cljs.core.logic._walk_term["null"] = function(v, s) {
  return null
};
cljs.core.logic.IOccursCheckTerm["_"] = true;
cljs.core.logic._occurs_check_term["_"] = function(v, x, s) {
  if(cljs.core.sequential_QMARK_.call(null, v)) {
    var v__7768 = v;
    var x__7769 = x;
    var s__7770 = s;
    while(true) {
      if(cljs.core.seq.call(null, v__7768)) {
        var or__3824__auto____7771 = cljs.core.logic._occurs_check.call(null, s__7770, x__7769, cljs.core.first.call(null, v__7768));
        if(cljs.core.truth_(or__3824__auto____7771)) {
          return or__3824__auto____7771
        }else {
          var G__7772 = cljs.core.next.call(null, v__7768);
          var G__7773 = x__7769;
          var G__7774 = s__7770;
          v__7768 = G__7772;
          x__7769 = G__7773;
          s__7770 = G__7774;
          continue
        }
      }else {
        return false
      }
      break
    }
  }else {
    return false
  }
};
cljs.core.logic.IOccursCheckTerm["null"] = true;
cljs.core.logic._occurs_check_term["null"] = function(v, x, s) {
  return false
};
cljs.core.logic.ITake["_"] = true;
cljs.core.logic._take_STAR_["_"] = function(this$) {
  return this$
};
cljs.core.logic.Choice = function(a, f) {
  this.a = a;
  this.f = f
};
cljs.core.logic.Choice.cljs$lang$type = true;
cljs.core.logic.Choice.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core.logic/Choice")
};
cljs.core.logic.Choice.prototype.cljs$core$logic$ITake$ = true;
cljs.core.logic.Choice.prototype.cljs$core$logic$ITake$_take_STAR_$arity$1 = function(this$) {
  var this__7775 = this;
  return new cljs.core.LazySeq(null, false, function() {
    return cljs.core.cons.call(null, cljs.core.first.call(null, this__7775.a), new cljs.core.LazySeq(null, false, function() {
      return cljs.core.logic._take_STAR_.call(null, this__7775.f)
    }, null))
  }, null)
};
cljs.core.logic.Choice.prototype.cljs$core$logic$IMPlus$ = true;
cljs.core.logic.Choice.prototype.cljs$core$logic$IMPlus$_mplus$arity$2 = function(this$, fp) {
  var this__7776 = this;
  return new cljs.core.logic.Choice(this__7776.a, new cljs.core.logic.Inc(function() {
    return cljs.core.logic._mplus.call(null, fp.call(null), this__7776.f)
  }))
};
cljs.core.logic.Choice.prototype.cljs$core$logic$IBind$ = true;
cljs.core.logic.Choice.prototype.cljs$core$logic$IBind$_bind$arity$2 = function(this$, g) {
  var this__7777 = this;
  return cljs.core.logic._mplus.call(null, g.call(null, this__7777.a), new cljs.core.logic.Inc(function() {
    return cljs.core.logic._bind.call(null, this__7777.f, g)
  }))
};
cljs.core.logic.Choice;
cljs.core.logic.choice = function choice(a, f) {
  return new cljs.core.logic.Choice(a, f)
};
cljs.core.logic.IBind["null"] = true;
cljs.core.logic._bind["null"] = function(_, g) {
  return null
};
cljs.core.logic.IMPlus["null"] = true;
cljs.core.logic._mplus["null"] = function(_, b) {
  return b
};
cljs.core.logic.ITake["null"] = true;
cljs.core.logic._take_STAR_["null"] = function(_) {
  return cljs.core.List.EMPTY
};
cljs.core.logic.IMPlus["_"] = true;
cljs.core.logic._mplus["_"] = function(this$, f) {
  return new cljs.core.logic.Choice(this$, f)
};
cljs.core.logic.Inc = function(f) {
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.logic.Inc.cljs$lang$type = true;
cljs.core.logic.Inc.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "cljs.core.logic/Inc")
};
cljs.core.logic.Inc.prototype.cljs$core$logic$ITake$ = true;
cljs.core.logic.Inc.prototype.cljs$core$logic$ITake$_take_STAR_$arity$1 = function(this$) {
  var this__7780 = this;
  return new cljs.core.LazySeq(null, false, function() {
    return cljs.core.logic._take_STAR_.call(null, this__7780.f.call(null))
  }, null)
};
cljs.core.logic.Inc.prototype.cljs$core$logic$IMPlus$ = true;
cljs.core.logic.Inc.prototype.cljs$core$logic$IMPlus$_mplus$arity$2 = function(this$, fp) {
  var this__7781 = this;
  return new cljs.core.logic.Inc(function() {
    return cljs.core.logic._mplus.call(null, fp.call(null), this$)
  })
};
cljs.core.logic.Inc.prototype.cljs$core$logic$IBind$ = true;
cljs.core.logic.Inc.prototype.cljs$core$logic$IBind$_bind$arity$2 = function(this$, g) {
  var this__7782 = this;
  return new cljs.core.logic.Inc(function() {
    return cljs.core.logic._bind.call(null, this__7782.f.call(null), g)
  })
};
cljs.core.logic.Inc.prototype.call = function(this_sym7783) {
  var this__7784 = this;
  var this_sym7783__7785 = this;
  var ___7786 = this_sym7783__7785;
  return this__7784.f.call(null)
};
cljs.core.logic.Inc.prototype.apply = function(this_sym7778, args7779) {
  var this__7787 = this;
  return this_sym7778.call.apply(this_sym7778, [this_sym7778].concat(args7779.slice()))
};
cljs.core.logic.Inc;
cljs.core.logic.succeed = function succeed(a) {
  return a
};
cljs.core.logic.fail = function fail(a) {
  return null
};
cljs.core.logic.s_SHARP_ = cljs.core.logic.succeed;
cljs.core.logic.u_SHARP_ = cljs.core.logic.fail;
cljs.core.logic.IIfA = {};
cljs.core.logic._ifa = function _ifa(b, gs, c) {
  if(function() {
    var and__3822__auto____7792 = b;
    if(and__3822__auto____7792) {
      return b.cljs$core$logic$IIfA$_ifa$arity$3
    }else {
      return and__3822__auto____7792
    }
  }()) {
    return b.cljs$core$logic$IIfA$_ifa$arity$3(b, gs, c)
  }else {
    var x__2410__auto____7793 = b == null ? null : b;
    return function() {
      var or__3824__auto____7794 = cljs.core.logic._ifa[goog.typeOf(x__2410__auto____7793)];
      if(or__3824__auto____7794) {
        return or__3824__auto____7794
      }else {
        var or__3824__auto____7795 = cljs.core.logic._ifa["_"];
        if(or__3824__auto____7795) {
          return or__3824__auto____7795
        }else {
          throw cljs.core.missing_protocol.call(null, "IIfA.-ifa", b);
        }
      }
    }().call(null, b, gs, c)
  }
};
cljs.core.logic.IIfU = {};
cljs.core.logic._ifu = function _ifu(b, gs, c) {
  if(function() {
    var and__3822__auto____7800 = b;
    if(and__3822__auto____7800) {
      return b.cljs$core$logic$IIfU$_ifu$arity$3
    }else {
      return and__3822__auto____7800
    }
  }()) {
    return b.cljs$core$logic$IIfU$_ifu$arity$3(b, gs, c)
  }else {
    var x__2410__auto____7801 = b == null ? null : b;
    return function() {
      var or__3824__auto____7802 = cljs.core.logic._ifu[goog.typeOf(x__2410__auto____7801)];
      if(or__3824__auto____7802) {
        return or__3824__auto____7802
      }else {
        var or__3824__auto____7803 = cljs.core.logic._ifu["_"];
        if(or__3824__auto____7803) {
          return or__3824__auto____7803
        }else {
          throw cljs.core.missing_protocol.call(null, "IIfU.-ifu", b);
        }
      }
    }().call(null, b, gs, c)
  }
};
cljs.core.logic.IIfA["null"] = true;
cljs.core.logic._ifa["null"] = function(b, gs, c) {
  if(cljs.core.truth_(c)) {
    return cljs.core.force.call(null, c)
  }else {
    return null
  }
};
cljs.core.logic.IIfU["null"] = true;
cljs.core.logic._ifu["null"] = function(b, gs, c) {
  if(cljs.core.truth_(c)) {
    return cljs.core.force.call(null, c)
  }else {
    return null
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$IIfA$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$IIfA$_ifa$arity$3 = function(b, gs, c) {
  var b__7807 = b;
  var G__7805__7808 = gs;
  var vec__7806__7809 = G__7805__7808;
  var g0__7810 = cljs.core.nth.call(null, vec__7806__7809, 0, null);
  var gr__7811 = cljs.core.nthnext.call(null, vec__7806__7809, 1);
  var b__7812 = b__7807;
  var G__7805__7813 = G__7805__7808;
  while(true) {
    var b__7815 = b__7812;
    var vec__7814__7816 = G__7805__7813;
    var g0__7817 = cljs.core.nth.call(null, vec__7814__7816, 0, null);
    var gr__7818 = cljs.core.nthnext.call(null, vec__7814__7816, 1);
    if(cljs.core.truth_(g0__7817)) {
      var temp__3974__auto____7819 = g0__7817.call(null, b__7815);
      if(cljs.core.truth_(temp__3974__auto____7819)) {
        var b__7820 = temp__3974__auto____7819;
        var G__7821 = b__7820;
        var G__7822 = gr__7818;
        b__7812 = G__7821;
        G__7805__7813 = G__7822;
        continue
      }else {
        return null
      }
    }else {
      return b__7815
    }
    break
  }
};
cljs.core.logic.Substitutions.prototype.cljs$core$logic$IIfU$ = true;
cljs.core.logic.Substitutions.prototype.cljs$core$logic$IIfU$_ifu$arity$3 = function(b, gs, c) {
  var b__7826 = b;
  var G__7824__7827 = gs;
  var vec__7825__7828 = G__7824__7827;
  var g0__7829 = cljs.core.nth.call(null, vec__7825__7828, 0, null);
  var gr__7830 = cljs.core.nthnext.call(null, vec__7825__7828, 1);
  var b__7831 = b__7826;
  var G__7824__7832 = G__7824__7827;
  while(true) {
    var b__7834 = b__7831;
    var vec__7833__7835 = G__7824__7832;
    var g0__7836 = cljs.core.nth.call(null, vec__7833__7835, 0, null);
    var gr__7837 = cljs.core.nthnext.call(null, vec__7833__7835, 1);
    if(cljs.core.truth_(g0__7836)) {
      var temp__3974__auto____7838 = g0__7836.call(null, b__7834);
      if(cljs.core.truth_(temp__3974__auto____7838)) {
        var b__7839 = temp__3974__auto____7838;
        var G__7840 = b__7839;
        var G__7841 = gr__7837;
        b__7831 = G__7840;
        G__7824__7832 = G__7841;
        continue
      }else {
        return null
      }
    }else {
      return b__7834
    }
    break
  }
};
cljs.core.logic.Inc.prototype.cljs$core$logic$IIfU$ = true;
cljs.core.logic.Inc.prototype.cljs$core$logic$IIfU$_ifu$arity$3 = function(b, gs, c) {
  return new cljs.core.logic.Inc(function() {
    return cljs.core.logic._ifu.call(null, b.call(null), gs, c)
  })
};
cljs.core.logic.Inc.prototype.cljs$core$logic$IIfA$ = true;
cljs.core.logic.Inc.prototype.cljs$core$logic$IIfA$_ifa$arity$3 = function(b, gs, c) {
  return new cljs.core.logic.Inc(function() {
    return cljs.core.logic._ifa.call(null, b.call(null), gs, c)
  })
};
cljs.core.logic.Choice.prototype.cljs$core$logic$IIfA$ = true;
cljs.core.logic.Choice.prototype.cljs$core$logic$IIfA$_ifa$arity$3 = function(b, gs, c) {
  return cljs.core.reduce.call(null, cljs.core.logic._bind, b, gs)
};
cljs.core.logic.Choice.prototype.cljs$core$logic$IIfU$ = true;
cljs.core.logic.Choice.prototype.cljs$core$logic$IIfU$_ifu$arity$3 = function(b, gs, c) {
  return cljs.core.reduce.call(null, cljs.core.logic._bind, b.a, gs)
};
cljs.core.logic.nilo = function nilo(a) {
  return function(a__6256__auto__) {
    var temp__3971__auto____7844 = cljs.core.logic._unify.call(null, a__6256__auto__, null, a);
    if(cljs.core.truth_(temp__3971__auto____7844)) {
      var b__6257__auto____7845 = temp__3971__auto____7844;
      return b__6257__auto____7845
    }else {
      return null
    }
  }
};
cljs.core.logic.emptyo = function emptyo(a) {
  return function(a__6256__auto__) {
    var temp__3971__auto____7848 = cljs.core.logic._unify.call(null, a__6256__auto__, cljs.core.List.EMPTY, a);
    if(cljs.core.truth_(temp__3971__auto____7848)) {
      var b__6257__auto____7849 = temp__3971__auto____7848;
      return b__6257__auto____7849
    }else {
      return null
    }
  }
};
cljs.core.logic.conso = function conso(a, d, l) {
  return function(a__6256__auto__) {
    var temp__3971__auto____7852 = cljs.core.logic._unify.call(null, a__6256__auto__, cljs.core.logic.lcons.call(null, a, d), l);
    if(cljs.core.truth_(temp__3971__auto____7852)) {
      var b__6257__auto____7853 = temp__3971__auto____7852;
      return b__6257__auto____7853
    }else {
      return null
    }
  }
};
cljs.core.logic.firsto = function firsto(l, a) {
  return function(a__6268__auto__) {
    return new cljs.core.logic.Inc(function() {
      var d__7855 = cljs.core.logic.lvar.call(null, "\ufdd1'd");
      return cljs.core.logic._bind.call(null, a__6268__auto__, cljs.core.logic.conso.call(null, a, d__7855, l))
    })
  }
};
cljs.core.logic.resto = function resto(l, d) {
  return function(a__6268__auto__) {
    return new cljs.core.logic.Inc(function() {
      var a__7859 = cljs.core.logic.lvar.call(null, "\ufdd1'a");
      return cljs.core.logic._bind.call(null, a__6268__auto__, function(a__6256__auto__) {
        var temp__3971__auto____7860 = cljs.core.logic._unify.call(null, a__6256__auto__, cljs.core.logic.lcons.call(null, a__7859, d), l);
        if(cljs.core.truth_(temp__3971__auto____7860)) {
          var b__6257__auto____7861 = temp__3971__auto____7860;
          return b__6257__auto____7861
        }else {
          return null
        }
      })
    })
  }
};
cljs.core.logic.membero = function membero(x, l) {
  return function(a7870) {
    return new cljs.core.logic.Inc(function() {
      return cljs.core.logic._mplus.call(null, cljs.core.logic._bind.call(null, a7870, function(a__6268__auto__) {
        return new cljs.core.logic.Inc(function() {
          var tail__7871 = cljs.core.logic.lvar.call(null, "\ufdd1'tail");
          return cljs.core.logic._bind.call(null, a__6268__auto__, function(a__6256__auto__) {
            var temp__3971__auto____7872 = cljs.core.logic._unify.call(null, a__6256__auto__, cljs.core.logic.lcons.call(null, x, tail__7871), l);
            if(cljs.core.truth_(temp__3971__auto____7872)) {
              var b__6257__auto____7873 = temp__3971__auto____7872;
              return b__6257__auto____7873
            }else {
              return null
            }
          })
        })
      }), new cljs.core.logic.Inc(function() {
        return cljs.core.logic._bind.call(null, a7870, function(a__6268__auto__) {
          return new cljs.core.logic.Inc(function() {
            var head__7874 = cljs.core.logic.lvar.call(null, "\ufdd1'head");
            var tail__7875 = cljs.core.logic.lvar.call(null, "\ufdd1'tail");
            return cljs.core.logic._bind.call(null, cljs.core.logic._bind.call(null, a__6268__auto__, function(a__6256__auto__) {
              var temp__3971__auto____7876 = cljs.core.logic._unify.call(null, a__6256__auto__, cljs.core.logic.lcons.call(null, head__7874, tail__7875), l);
              if(cljs.core.truth_(temp__3971__auto____7876)) {
                var b__6257__auto____7877 = temp__3971__auto____7876;
                return b__6257__auto____7877
              }else {
                return null
              }
            }), membero.call(null, x, tail__7875))
          })
        })
      }))
    })
  }
};
cljs.core.logic.appendo = function appendo(x, y, z) {
  return function(a7890) {
    return new cljs.core.logic.Inc(function() {
      return cljs.core.logic._mplus.call(null, cljs.core.logic._bind.call(null, a7890, function(a__6268__auto__) {
        return new cljs.core.logic.Inc(function() {
          return cljs.core.logic._bind.call(null, cljs.core.logic._bind.call(null, a__6268__auto__, function(a__6256__auto__) {
            var temp__3971__auto____7891 = cljs.core.logic._unify.call(null, a__6256__auto__, cljs.core.List.EMPTY, x);
            if(cljs.core.truth_(temp__3971__auto____7891)) {
              var b__6257__auto____7892 = temp__3971__auto____7891;
              return b__6257__auto____7892
            }else {
              return null
            }
          }), function(a__6268__auto__) {
            return new cljs.core.logic.Inc(function() {
              return cljs.core.logic._bind.call(null, a__6268__auto__, function(a__6256__auto__) {
                var temp__3971__auto____7893 = cljs.core.logic._unify.call(null, a__6256__auto__, y, z);
                if(cljs.core.truth_(temp__3971__auto____7893)) {
                  var b__6257__auto____7894 = temp__3971__auto____7893;
                  return b__6257__auto____7894
                }else {
                  return null
                }
              })
            })
          })
        })
      }), new cljs.core.logic.Inc(function() {
        return cljs.core.logic._bind.call(null, a7890, function(a__6268__auto__) {
          return new cljs.core.logic.Inc(function() {
            var a__7895 = cljs.core.logic.lvar.call(null, "\ufdd1'a");
            var d__7896 = cljs.core.logic.lvar.call(null, "\ufdd1'd");
            return cljs.core.logic._bind.call(null, cljs.core.logic._bind.call(null, a__6268__auto__, function(a__6256__auto__) {
              var temp__3971__auto____7897 = cljs.core.logic._unify.call(null, a__6256__auto__, cljs.core.logic.lcons.call(null, a__7895, d__7896), x);
              if(cljs.core.truth_(temp__3971__auto____7897)) {
                var b__6257__auto____7898 = temp__3971__auto____7897;
                return b__6257__auto____7898
              }else {
                return null
              }
            }), function(a__6268__auto__) {
              return new cljs.core.logic.Inc(function() {
                var r__7899 = cljs.core.logic.lvar.call(null, "\ufdd1'r");
                return cljs.core.logic._bind.call(null, cljs.core.logic._bind.call(null, a__6268__auto__, function(a__6256__auto__) {
                  var temp__3971__auto____7900 = cljs.core.logic._unify.call(null, a__6256__auto__, cljs.core.logic.lcons.call(null, a__7895, r__7899), z);
                  if(cljs.core.truth_(temp__3971__auto____7900)) {
                    var b__6257__auto____7901 = temp__3971__auto____7900;
                    return b__6257__auto____7901
                  }else {
                    return null
                  }
                }), appendo.call(null, d__7896, y, r__7899))
              })
            })
          })
        })
      }))
    })
  }
};
cljs.core.logic.prefix = function prefix(s, _LT_s) {
  if(cljs.core._EQ_.call(null, s, _LT_s)) {
    return cljs.core.List.EMPTY
  }else {
    return cljs.core.cons.call(null, cljs.core.first.call(null, s), prefix.call(null, cljs.core.rest.call(null, s), _LT_s))
  }
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("onedit.minibuffer");
goog.require("cljs.core");
goog.require("goog.ui.Textarea");
goog.require("goog.editor.focus");
goog.require("goog.events");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("onedit.core");
onedit.minibuffer.focus_out = function focus_out(editor, e) {
  return onedit.core.minibuffer.call(null, editor).setVisible(false)
};
onedit.minibuffer.handle_key = function handle_key(editor, functionmap, e) {
  if(cljs.core._EQ_.call(null, ekeyCode, goog.events.KeyCodes.ENTER)) {
    var temp__3974__auto____7304 = functionmap.call(null, cljs.core.keyword.call(null, goog.dom.forms.getValue(editorminibuffer.getContentElement())));
    if(cljs.core.truth_(temp__3974__auto____7304)) {
      var f__7305 = temp__3974__auto____7304;
      e.preventDefault();
      return f__7305.call(null, editor)
    }else {
      return null
    }
  }else {
    return null
  }
};
onedit.minibuffer.create = function create() {
  return new goog.ui.Textarea("")
};
onedit.minibuffer.init = function init(editor, functionmap) {
  var element__7309 = goog.dom.getElement("minibuffer");
  goog.events.listen(new goog.events.KeyHandler(element__7309), goog.events.KeyHandler.EventType.KEY, cljs.core.partial.call(null, onedit.minibuffer.handle_key, editor, functionmap));
  var G__7310__7311 = editorminibuffer;
  goog.events.listen(G__7310__7311, goog.events.EventType.FOCUSOUT, cljs.core.partial.call(null, onedit.minibuffer.focus_out, editor));
  G__7310__7311.setVisible(false);
  G__7310__7311.decorate(element__7309);
  return G__7310__7311
};
onedit.minibuffer.focus = function focus(minibuffer) {
  return goog.editor.focus.focusInputField(minibuffer)
};
goog.provide("onedit.cursor");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.dom.Range");
goog.require("goog.dom");
goog.require("onedit.buffer");
goog.require("onedit.util");
goog.require("onedit.core");
onedit.cursor.select = function select(range, node, offset) {
  var G__7216__7217 = range;
  G__7216__7217.moveToNodes(node, offset, node, offset, false);
  G__7216__7217.select();
  return G__7216__7217
};
onedit.cursor.move = function move(f, g, editor) {
  var range__7220 = goog.dom.Range.createFromWindow();
  onedit.cursor.select.call(null, range__7220, f.call(null, range__7220), g.call(null, range__7220));
  return onedit.core.mode.call(null, editor)
};
onedit.cursor.offset = function offset(p1__7218_SHARP_) {
  return p1__7218_SHARP_.getStartOffset()
};
onedit.cursor.node = function node(p1__7221_SHARP_) {
  return p1__7221_SHARP_.getStartNode()
};
onedit.cursor.inc_offset = cljs.core.comp.call(null, onedit.util.collfn.call(null, cljs.core.min), cljs.core.juxt.call(null, cljs.core.comp.call(null, cljs.core.alength, onedit.cursor.node), cljs.core.comp.call(null, cljs.core.inc, onedit.cursor.offset)));
onedit.cursor.dec_offset = cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.core.max, 0), cljs.core.dec, onedit.cursor.offset);
onedit.cursor.move_right = cljs.core.partial.call(null, onedit.cursor.move, onedit.cursor.node, onedit.cursor.inc_offset);
onedit.cursor.move_left = cljs.core.partial.call(null, onedit.cursor.move, onedit.cursor.node, onedit.cursor.dec_offset);
onedit.cursor.move_line = function move_line(p1__7222_SHARP_) {
  return cljs.core.comp.call(null, cljs.core.first, cljs.core.partial.call(null, cljs.core.drop_while, cljs.core.nil_QMARK_), cljs.core.juxt.call(null, cljs.core.comp.call(null, onedit.util.double$.call(null, p1__7222_SHARP_), onedit.cursor.node), onedit.cursor.node))
};
onedit.cursor.next_line = onedit.cursor.move_line.call(null, goog.dom.getNextNode);
onedit.cursor.prev_line = onedit.cursor.move_line.call(null, goog.dom.getPreviousNode);
onedit.cursor.move_bottom = cljs.core.partial.call(null, onedit.cursor.move, onedit.cursor.next_line, onedit.cursor.offset);
onedit.cursor.move_top = cljs.core.partial.call(null, onedit.cursor.move, onedit.cursor.prev_line, onedit.cursor.offset);
onedit.cursor.word = cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.core.map, onedit.util.join), onedit.util.collfn.call(null, cljs.core.split_at), cljs.core.juxt.call(null, onedit.cursor.offset, cljs.core.comp.call(null, goog.dom.getRawTextContent, onedit.cursor.node)));
onedit.cursor.forward = cljs.core.comp.call(null, onedit.util.sum, cljs.core.juxt.call(null, cljs.core.comp.call(null, cljs.core.count, cljs.core.first), cljs.core.comp.call(null, cljs.core.count, cljs.core.partial.call(null, cljs.core.re_find, /\s*\w+/), cljs.core.second)));
onedit.cursor.backward = cljs.core.comp.call(null, onedit.util.collfn.call(null, cljs.core._), cljs.core.juxt.call(null, cljs.core.count, cljs.core.comp.call(null, cljs.core.count, cljs.core.last, cljs.core.partial.call(null, cljs.core.re_seq, /\w+\s*/))), cljs.core.first);
onedit.cursor.move_forward = cljs.core.partial.call(null, onedit.cursor.move, onedit.cursor.node, cljs.core.comp.call(null, onedit.cursor.forward, onedit.cursor.word));
onedit.cursor.move_backward = cljs.core.partial.call(null, onedit.cursor.move, onedit.cursor.node, cljs.core.comp.call(null, onedit.cursor.backward, onedit.cursor.word));
onedit.cursor.line = function line(f, range) {
  var node__7225 = range.getStartNode();
  var offset__7226 = f.call(null, node__7225);
  return range.moveToNodes(node__7225, offset__7226, node__7225, offset__7226)
};
onedit.cursor.start = cljs.core.constantly.call(null, 0);
onedit.cursor.end = cljs.core.comp.call(null, cljs.core.count, goog.dom.getRawTextContent, onedit.cursor.node);
onedit.cursor.move_start = cljs.core.partial.call(null, onedit.cursor.move, cljs.core.partial.call(null, onedit.cursor.line, onedit.cursor.start));
onedit.cursor.move_end = cljs.core.partial.call(null, onedit.cursor.move, cljs.core.partial.call(null, onedit.cursor.line, onedit.cursor.end));
goog.provide("onedit.deletion");
goog.require("cljs.core");
goog.require("goog.events.KeyCodes");
goog.require("goog.dom");
goog.require("onedit.cursor");
goog.require("onedit.core");
onedit.deletion.delete_character = function delete_character(editor) {
  var range__7276 = onedit.cursor.create.call(null);
  var offset__7277 = range__7276.getStartOffset();
  var node__7278 = range__7276.getStartNode();
  var vec__7275__7279 = cljs.core.split_at.call(null, offset__7277, goog.dom.getRawTextContent(node__7278));
  var s1__7280 = cljs.core.nth.call(null, vec__7275__7279, 0, null);
  var s2__7281 = cljs.core.nth.call(null, vec__7275__7279, 1, null);
  var new_node__7282 = goog.dom.createTextNode([cljs.core.str(cljs.core.apply.call(null, cljs.core.str, s1__7280)), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, cljs.core.apply.call(null, cljs.core.str, s2__7281), 1)))].join(""));
  goog.dom.replaceNode(new_node__7282, node__7278);
  onedit.cursor.move_to_node.call(null, editor, new_node__7282, offset__7277);
  return editormode
};
onedit.deletion.delete_rest = function delete_rest(editor) {
  var range__7287 = onedit.cursor.create.call(null);
  var offset__7288 = range__7287.getStartOffset();
  var node__7289 = range__7287.getStartNode();
  var new_node__7290 = goog.dom.createTextNode(cljs.core.subs.call(null, goog.dom.getRawTextContent(node__7289), 0, offset__7288));
  goog.dom.replaceNode(new_node__7290, node__7289);
  onedit.cursor.move_to_node.call(null, editor, new_node__7290, offset__7288);
  return editormode
};
onedit.deletion.delete_line = function delete_line(editor) {
  var range__7295 = onedit.cursor.create.call(null);
  var node__7296 = range__7295.getStartNode();
  var offset__7297 = range__7295.getStartOffset();
  var prev__7298 = goog.dom.getPreviousNode(node__7296);
  goog.dom.removeNode(node__7296);
  goog.dom.removeNode(goog.dom.getNextNode(node__7296));
  onedit.cursor.move_to_node.call(null, editor, prev__7298, offset__7297);
  return onedit.core.normal.call(null, editor)
};
onedit.deletion.keymap = cljs.core.PersistentArrayMap.fromArrays([false, true], [cljs.core.PersistentArrayMap.fromArrays([goog.events.KeyCodes.D], [onedit.deletion.delete_line]), cljs.core.ObjMap.EMPTY]);
onedit.deletion.Mode = function() {
};
onedit.deletion.Mode.cljs$lang$type = true;
onedit.deletion.Mode.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "onedit.deletion/Mode")
};
onedit.deletion.Mode.prototype.onedit$core$Mode$ = true;
onedit.deletion.Mode.prototype.onedit$core$Mode$action$arity$3 = function(this$, editor, e) {
  var this__7299 = this;
  e.preventDefault();
  var temp__3971__auto____7300 = onedit.deletion.keymap.call(null, eshiftKey).call(null, ekeyCode);
  if(cljs.core.truth_(temp__3971__auto____7300)) {
    var f__7301 = temp__3971__auto____7300;
    return f__7301.call(null, editor)
  }else {
    return this$
  }
};
onedit.deletion.Mode;
goog.provide("onedit.replacement");
goog.require("cljs.core");
goog.require("onedit.deletion");
goog.require("onedit.core");
onedit.replacement.Mode = function(editor) {
  this.editor = editor
};
onedit.replacement.Mode.cljs$lang$type = true;
onedit.replacement.Mode.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "onedit.replacement/Mode")
};
onedit.replacement.Mode.prototype.onedit$core$Mode$ = true;
onedit.replacement.Mode.prototype.onedit$core$Mode$action$arity$3 = function(this$, editor, e) {
  var this__7246 = this;
  onedit.deletion.delete_character.call(null, editor);
  return onedit.core.normal.call(null, editor)
};
onedit.replacement.Mode;
goog.provide("onedit.insertion");
goog.require("cljs.core");
goog.require("goog.events.KeyCodes");
goog.require("goog.dom.Range");
goog.require("goog.dom");
goog.require("onedit.util");
goog.require("onedit.cursor");
goog.require("onedit.core");
onedit.insertion.append_br = function append_br(editor) {
  var range__7236 = goog.dom.Range.createFromWindow();
  var offset__7237 = onedit.cursor.offset.call(null, range__7236);
  var old_node__7238 = onedit.cursor.node.call(null, range__7236);
  var br__7239 = goog.dom.createElement(goog.dom.TagName.BR);
  var vec__7235__7240 = cljs.core.map.call(null, goog.dom.createTextNode, onedit.util.split.call(null, offset__7237, goog.dom.getRawTextContent(old_node__7238)));
  var node1__7241 = cljs.core.nth.call(null, vec__7235__7240, 0, null);
  var node2__7242 = cljs.core.nth.call(null, vec__7235__7240, 1, null);
  goog.dom.replaceNode(node1__7241, old_node__7238);
  goog.dom.insertSiblingAfter(br__7239, node1__7241);
  goog.dom.insertSiblingAfter(node2__7242, br__7239);
  onedit.cursor.select.call(null, range__7236, node2__7242, 0);
  return onedit.core.mode.call(null, editor)
};
onedit.insertion.keymap = cljs.core.PersistentArrayMap.fromArrays([false, true], [cljs.core.PersistentArrayMap.fromArrays([goog.events.KeyCodes.ESC, goog.events.KeyCodes.ENTER], [onedit.core.normal, onedit.insertion.append_br]), cljs.core.ObjMap.EMPTY]);
onedit.insertion.Mode = function() {
};
onedit.insertion.Mode.cljs$lang$type = true;
onedit.insertion.Mode.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "onedit.insertion/Mode")
};
onedit.insertion.Mode.prototype.onedit$core$Mode$ = true;
onedit.insertion.Mode.prototype.onedit$core$Mode$action$arity$3 = function(this$, editor, e) {
  var this__7243 = this;
  var temp__3971__auto____7244 = onedit.insertion.keymap.call(null, eshiftKey).call(null, ekeyCode);
  if(cljs.core.truth_(temp__3971__auto____7244)) {
    var f__7245 = temp__3971__auto____7244;
    e.preventDefault();
    return f__7245.call(null, editor)
  }else {
    return this$
  }
};
onedit.insertion.Mode;
goog.provide("goog.debug.Console");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.Logger.Level");
goog.require("goog.debug.TextFormatter");
goog.debug.Console = function() {
  this.publishHandler_ = goog.bind(this.addLogRecord, this);
  this.formatter_ = new goog.debug.TextFormatter;
  this.formatter_.showAbsoluteTime = false;
  this.formatter_.showExceptionText = false;
  this.isCapturing_ = false;
  this.logBuffer_ = "";
  this.filteredLoggers_ = {}
};
goog.debug.Console.prototype.getFormatter = function() {
  return this.formatter_
};
goog.debug.Console.prototype.setCapturing = function(capturing) {
  if(capturing == this.isCapturing_) {
    return
  }
  var rootLogger = goog.debug.LogManager.getRoot();
  if(capturing) {
    rootLogger.addHandler(this.publishHandler_)
  }else {
    rootLogger.removeHandler(this.publishHandler_);
    this.logBuffer = ""
  }
  this.isCapturing_ = capturing
};
goog.debug.Console.prototype.addLogRecord = function(logRecord) {
  if(this.filteredLoggers_[logRecord.getLoggerName()]) {
    return
  }
  var record = this.formatter_.formatRecord(logRecord);
  var console = goog.debug.Console.console_;
  if(console && console["firebug"]) {
    switch(logRecord.getLevel()) {
      case goog.debug.Logger.Level.SHOUT:
        console["info"](record);
        break;
      case goog.debug.Logger.Level.SEVERE:
        console["error"](record);
        break;
      case goog.debug.Logger.Level.WARNING:
        console["warn"](record);
        break;
      default:
        console["debug"](record);
        break
    }
  }else {
    if(console) {
      console.log(record)
    }else {
      if(window.opera) {
        window.opera["postError"](record)
      }else {
        this.logBuffer_ += record
      }
    }
  }
};
goog.debug.Console.prototype.addFilter = function(loggerName) {
  this.filteredLoggers_[loggerName] = true
};
goog.debug.Console.prototype.removeFilter = function(loggerName) {
  delete this.filteredLoggers_[loggerName]
};
goog.debug.Console.instance = null;
goog.debug.Console.console_ = window.console;
goog.debug.Console.autoInstall = function() {
  if(!goog.debug.Console.instance) {
    goog.debug.Console.instance = new goog.debug.Console
  }
  if(window.location.href.indexOf("Debug=true") != -1) {
    goog.debug.Console.instance.setCapturing(true)
  }
};
goog.debug.Console.show = function() {
  alert(goog.debug.Console.instance.logBuffer_)
};
goog.provide("onedit");
goog.require("cljs.core");
goog.require("onedit.deletion");
goog.require("goog.events.KeyCodes");
goog.require("goog.dom.Range");
goog.require("onedit.buffer");
goog.require("goog.dom");
goog.require("onedit.insertion");
goog.require("cljs.core.logic");
goog.require("onedit.replacement");
goog.require("onedit.cursor");
goog.require("onedit.minibuffer");
goog.require("goog.debug.Console");
goog.require("onedit.core");
onedit.keymap = cljs.core.PersistentArrayMap.fromArrays([false, true], [cljs.core.PersistentArrayMap.fromArrays([goog.events.KeyCodes.ZERO, goog.events.KeyCodes.W, goog.events.KeyCodes.RIGHT, goog.events.KeyCodes.LEFT, goog.events.KeyCodes.R, goog.events.KeyCodes.DOWN, goog.events.KeyCodes.X, goog.events.KeyCodes.B, goog.events.KeyCodes.SEMICOLON, goog.events.KeyCodes.D, goog.events.KeyCodes.J, goog.events.KeyCodes.K, goog.events.KeyCodes.H, goog.events.KeyCodes.I, goog.events.KeyCodes.UP, goog.events.KeyCodes.L], 
[onedit.cursor.move_start, onedit.cursor.move_forward, onedit.cursor.move_right, onedit.cursor.move_left, function keymap(_) {
  return new onedit.replacement.Mode
}, onedit.cursor.move_bottom, onedit.deletion.delete_character, onedit.cursor.move_backward, onedit.minibuffer.focus, function keymap(_) {
  return new onedit.deletion.Mode
}, onedit.cursor.move_bottom, onedit.cursor.move_top, onedit.cursor.move_left, function keymap(_) {
  return new onedit.insertion.Mode
}, onedit.cursor.move_top, onedit.cursor.move_right]), cljs.core.PersistentArrayMap.fromArrays([goog.events.KeyCodes.FOUR], [onedit.cursor.move_end])]);
onedit.Mode = function() {
};
onedit.Mode.cljs$lang$type = true;
onedit.Mode.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "onedit/Mode")
};
onedit.Mode.prototype.onedit$core$Mode$ = true;
onedit.Mode.prototype.onedit$core$Mode$action$arity$3 = function(this$, editor, e) {
  var this__7138 = this;
  e.preventDefault();
  var temp__3971__auto____7139 = onedit.keymap.call(null, eshiftKey).call(null, ekeyCode);
  if(cljs.core.truth_(temp__3971__auto____7139)) {
    var f__7140 = temp__3971__auto____7139;
    return f__7140.call(null, editor)
  }else {
    return this$
  }
};
onedit.Mode;
onedit.Editor = function(mode, buffer, minibuffer) {
  this.mode = mode;
  this.buffer = buffer;
  this.minibuffer = minibuffer
};
onedit.Editor.cljs$lang$type = true;
onedit.Editor.cljs$lang$ctorPrSeq = function(this__2356__auto__) {
  return cljs.core.list.call(null, "onedit/Editor")
};
onedit.Editor.prototype.onedit$core$IEditor$ = true;
onedit.Editor.prototype.onedit$core$IEditor$mode$arity$1 = function(this$) {
  var this__7141 = this;
  return thismode
};
onedit.Editor.prototype.onedit$core$IEditor$buffer$arity$1 = function(this$) {
  var this__7142 = this;
  return thisbuffer
};
onedit.Editor.prototype.onedit$core$IEditor$minibuffer$arity$1 = function(this$) {
  var this__7143 = this;
  return thisminibuffer
};
onedit.Editor.prototype.onedit$core$IEditor$normal$arity$1 = function(this$) {
  var this__7144 = this;
  return new onedit.Mode
};
onedit.Editor;
onedit.init = function init() {
  goog.debug.Console.autoInstall();
  var G__7147__7148 = new onedit.Editor(new onedit.Mode, goog.dom.getElement("buffer"), onedit.minibuffer.create.call(null));
  onedit.buffer.init.call(null, G__7147__7148);
  return G__7147__7148
};
goog.provide("onedit.live");
goog.require("cljs.core");
goog.require("onedit.file");
goog.require("onedit.core");
onedit.live.live = function() {
  var live = null;
  var live__0 = function() {
    var socket__7256 = new WebSocket([cljs.core.str("ws://localhost:5000/live/"), cljs.core.str(tab.get.call(null).attr("id"))].join(""));
    socket__7256onmessage = function(e) {
      return onedit.core.log.call(null, edata)
    };
    return tab.data.call(null, "socket", socket__7256)
  };
  var live__2 = function(id, filename) {
    onedit.file.create.call(null, filename);
    var socket__7257 = new WebSocket([cljs.core.str("ws://localhost:5000/live/"), cljs.core.str(id), cljs.core.str("/"), cljs.core.str(filename)].join(""));
    var i__7258 = tab.get.call(null).attr("id");
    onedit.core.log.call(null, i__7258);
    return socket__7257onmessage = function(e) {
      onedit.core.log.call(null, edata);
      return onedit.core.jquery.call(null, [cljs.core.str("#"), cljs.core.str(i__7258)].join("")).html(edata)
    }
  };
  live = function(id, filename) {
    switch(arguments.length) {
      case 0:
        return live__0.call(this);
      case 2:
        return live__2.call(this, id, filename)
    }
    throw"Invalid arity: " + arguments.length;
  };
  live.cljs$lang$arity$0 = live__0;
  live.cljs$lang$arity$2 = live__2;
  return live
}();
goog.provide("onedit.highlighter");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("onedit.core");
onedit.highlighter.language = function language(lang) {
  buffer.get_buffer.call(null).attr("class", [cljs.core.str("prettyprint lang-"), cljs.core.str(lang)].join(""));
  return prettyPrint()
};
onedit.highlighter.filename = function filename(name) {
  return onedit.highlighter.language.call(null, cljs.core.last.call(null, cljs.core.re_seq.call(null, /\./, name)))
};
onedit.highlighter.highlight = function highlight() {
  var tab__7152 = tab.get_tab.call(null);
  var temp__3971__auto____7153 = tab.get_tab.call(null).data("language");
  if(cljs.core.truth_(temp__3971__auto____7153)) {
    var lang__7154 = temp__3971__auto____7153;
    return onedit.highlighter.language.call(null, lang__7154)
  }else {
    return onedit.highlighter.filename.call(null, tab.get_tab.call(null).text())
  }
};
